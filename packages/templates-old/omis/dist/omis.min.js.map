{"version":3,"sources":["../src/style.js","../src/h.js","../src/util.js","../src/clone-element.js","../src/constants.js","../src/render-queue.js","../src/vdom/index.js","../src/dom/index.js","../src/vdom/diff.js","../src/vdom/component-recycler.js","../src/vdom/component.js","../src/component.js","../src/obaa.js","../src/render.js","../src/define.js","../src/vnode.js","../src/options.js","../src/omis.js"],"names":["getCtorName","ctor","i","len","options","styleCache","length","item","attrName","styleId","push","scoper","css","prefix","toLowerCase","replace","RegExp","g0","g1","g2","g3","match","addStyle","cssText","id","parent","ele","document","getElementById","head","getElementsByTagName","parentNode","removeChild","someThingStyles","createElement","appendChild","setAttribute","window","ActiveXObject","styleSheet","textContent","addStyleToHead","style","attr","staticStyleMapping","wx","getSystemInfoSync","nodeName","attributes","lastSimple","child","simple","children","EMPTY_CHILDREN","arguments","stack","pop","String","p","VNode","runTimeComponent","constructor","props","elementId","key","vnode","extend","obj","applyRef","ref","value","current","getPath","Object","prototype","toString","call","result","forEach","tempPath","keys","path","getUpdatePath","data","dataToPath","type","OBJECTTYPE","_objToPath","ARRAYTYPE","_arrayToPath","index","getUse","paths","getTargetByPath","tempVal","args","apply","origin","arr","split","cloneElement","h","slice","enqueueRender","component","IS_NON_DIMENSIONAL","_dirty","items","rerender","node","hydrating","renderComponent","splitText","undefined","normalizedNodeName","isNamedNode","defaultProps","createNode","name","old","isSvg","test","__html","substring","eventProxy","useCapture","removeEventListener","bind","store","removeAttribute","ns","addEventListener","_listeners","setAttributeNS","removeAttributeNS","event","e","mounts","c","afterMount","dom","mountAll","componentRoot","ret","diffLevel","isSvgMode","flushMounts","out","prevSvgMode","idiff","createTextNode","replaceChild","recollectNodeTree","__p","nodeValue","vnodeName","buildComponentFromVNode","firstChild","vchildren","fc","ATTR_KEY","innerDiffNode","a","dangerouslySetInnerHTML","$","isHydrating","j","f","vchild","originalChildren","childNodes","keyed","keyedLen","min","childrenLen","_child","_component","__key","vlen","trim","removeNode","insertBefore","unmountOnly","unmountComponent","removeChildren","next","previousSibling","setAccessor","diffAttributes","attrs","inst","Ctor","use","recyclerComponents","instances","Component","render","doRender","using","this","setComponentProps","renderMode","_disable","__ref","receiveProps","base","prevProps","__needUpdate_","syncComponentUpdates","cbase","previousProps","isUpdate","skip","initialBase","initialChildComponent","prevContext","nextBase","beforeRender","rendered","toUnmount","childComponent","childProps","createComponent","_parentComponent","baseParent","componentRef","t","_componentConstructor","afterUpdate","_renderCallbacks","isChild","originalComponent","isDirectOwner","isOwner","oldDom","beforeUnmount","uninstall","inner","obaa","target","callback","eventPropArr","mock","isInArray","prop","isArray","isString","$_r","$_p","watch","propChanged","root","methods","$_c","all","Array","cprop","hasOwnProperty","isFunction","onPropertyChanged","$_o","get","enumerable","currentValue","defineProperty","set","oldValue","rootName","getRootName","handler","indexOf","patchs","obsStore","globalStore","patch","extendStoreUpate","matchGlobalData","globalData","instance","update","_this","updateAll","updatePath","needUpdate","_updatePath","keyA","includePath","diffResult","keyB","pathB","pathA","substr","fixPath","mpPath","Constructor","TypeError","self","ReferenceError","subClass","superClass","create","writable","configurable","setPrototypeOf","__proto__","define","customElements","_HTMLElement","BuiltInHTMLElement","_class","_possibleConstructorReturn","_inherits","shadowRoot","attachShadow","attrsToProps","mode","_ele","eventName","charAt","toUpperCase","val","JSON","stringify","attrToProp","parse","getAttribute","propTypes","_this2","Number","HTMLElement","str","createRef","defer","Promise","resolve","then","setTimeout","FORCE_RENDER","triggerStr","add","size","Reflect","hyphenate","Omis","module","exports"],"mappings":"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","file":"omis.min.js","sourcesContent":["import options from './options'\n\nlet styleId = 0\n\nexport function getCtorName(ctor) {\n  for (let i = 0, len = options.styleCache.length; i < len; i++) {\n    let item = options.styleCache[i]\n\n    if (item.ctor === ctor) {\n      return item.attrName\n    }\n  }\n\n  let attrName = '_ss' + styleId\n  options.styleCache.push({ ctor, attrName })\n  styleId++\n\n  return attrName\n}\n\n// many thanks to https://github.com/thomaspark/scoper/\nexport function scoper(css, prefix) {\n  prefix = '[' + prefix.toLowerCase() + ']'\n  // https://www.w3.org/TR/css-syntax-3/#lexical\n  css = css.replace(/\\/\\*[^*]*\\*+([^/][^*]*\\*+)*\\//g, '')\n  // eslint-disable-next-line\n    let re = new RegExp('([^\\r\\n,{}:]+)(:[^\\r\\n,{}]+)?(,(?=[^{}]*{)|\\s*{)', 'g')\n  /**\n   * Example:\n   *\n   * .classname::pesudo { color:red }\n   *\n   * g1 is normal selector `.classname`\n   * g2 is pesudo class or pesudo element\n   * g3 is the suffix\n   */\n  css = css.replace(re, (g0, g1, g2, g3) => {\n    if (typeof g2 === 'undefined') {\n      g2 = ''\n    }\n\n    /* eslint-ignore-next-line */\n    if (\n      g1.match(\n        /^\\s*(@media|\\d+%?|@-webkit-keyframes|@keyframes|to|from|@font-face)/\n      )\n    ) {\n      return g1 + g2 + g3\n    }\n\n    let appendClass = g1.replace(/(\\s*)$/, '') + prefix + g2\n    //let prependClass = prefix + ' ' + g1.trim() + g2;\n\n    return appendClass + g3\n    //return appendClass + ',' + prependClass + g3;\n  })\n\n  return css\n}\n\nexport function addStyle(cssText, id, parent) {\n  id = id.toLowerCase()\n  let ele = document.getElementById(id)\n  let head = parent || document.getElementsByTagName('head')[0]\n  if (ele && ele.parentNode === head) {\n    head.removeChild(ele)\n  }\n\n  let someThingStyles = document.createElement('style')\n  head.appendChild(someThingStyles)\n  someThingStyles.setAttribute('type', 'text/css')\n  someThingStyles.setAttribute('id', id)\n  if (window.ActiveXObject) {\n    someThingStyles.styleSheet.cssText = cssText\n  } else {\n    someThingStyles.textContent = cssText\n  }\n}\n\nexport function addStyleToHead(style, attr, parent) {\n  //parent is shadowroot\n\tif (parent || !options.staticStyleMapping[attr]) {\n    \"undefined\" != typeof wx && wx.getSystemInfoSync || addStyle(scoper(style, attr), attr, parent)\n    //don't cache when is shadowroot\n    if(!parent){\n      options.staticStyleMapping[attr] = true\n    }\n\t}\n}\n","import { VNode } from './vnode';\nimport options from './options';\nimport {getCtorName} from './style'\n\nconst stack = [];\n\nconst EMPTY_CHILDREN = [];\n\n/**\n * JSX/hyperscript reviver.\n * @see http://jasonformat.com/wtf-is-jsx\n * Benchmarks: https://esbench.com/bench/57ee8f8e330ab09900a1a1a0\n *\n * Note: this is exported as both `h()` and `createElement()` for compatibility\n * reasons.\n *\n * Creates a VNode (virtual DOM element). A tree of VNodes can be used as a\n * lightweight representation of the structure of a DOM tree. This structure can\n * be realized by recursively comparing it against the current _actual_ DOM\n * structure, and applying only the differences.\n *\n * `h()`/`createElement()` accepts an element name, a list of attributes/props,\n * and optionally children to append to the element.\n *\n * @example The following DOM tree\n *\n * `<div id=\"foo\" name=\"bar\">Hello!</div>`\n *\n * can be constructed using this function as:\n *\n * `h('div', { id: 'foo', name : 'bar' }, 'Hello!');`\n *\n * @param {string | function} nodeName An element name. Ex: `div`, `a`, `span`, etc.\n * @param {object | null} attributes Any attributes/props to set on the created element.\n * @param {VNode[]} [rest] Additional arguments are taken to be children to\n *  append. Can be infinitely nested Arrays.\n *\n * @public\n */\nexport function h(nodeName, attributes) {\n\tlet children=EMPTY_CHILDREN, lastSimple, child, simple, i;\n\tfor (i=arguments.length; i-- > 2; ) {\n\t\tstack.push(arguments[i]);\n\t}\n\tif (attributes && attributes.children!=null) {\n\t\tif (!stack.length) stack.push(attributes.children);\n\t\tdelete attributes.children;\n\t}\n\twhile (stack.length) {\n\t\tif ((child = stack.pop()) && child.pop!==undefined) {\n\t\t\tfor (i=child.length; i--; ) stack.push(child[i]);\n\t\t}\n\t\telse {\n\t\t\tif (typeof child==='boolean') child = null;\n\n\t\t\tif ((simple = typeof nodeName!=='function')) {\n\t\t\t\tif (child==null) child = '';\n\t\t\t\telse if (typeof child==='number') child = String(child);\n\t\t\t\telse if (typeof child!=='string') simple = false;\n\t\t\t}\n\n\t\t\tif (simple && lastSimple) {\n\t\t\t\tchildren[children.length-1] += child;\n\t\t\t}\n\t\t\telse if (children===EMPTY_CHILDREN) {\n\t\t\t\tchildren = [child];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tchildren.push(child);\n\t\t\t}\n\n\t\t\tlastSimple = simple;\n\t\t}\n\t}\n\n\tlet p = new VNode();\n\tp.nodeName = nodeName;\n\tp.children = children;\n\tp.attributes = attributes==null ? {} : attributes;\n\tif(options.runTimeComponent){\n\t\tif(options.runTimeComponent.constructor.css){\n\t\t\tp.attributes[getCtorName(options.runTimeComponent.constructor)] = ''\n\t\t}\n\t\tif(options.runTimeComponent.props && options.runTimeComponent.props.css){\n\t\t\tp.attributes['_ds'+options.runTimeComponent.elementId] = ''\n\t\t}\n\t}\n\n\tp.key = p.attributes.key;\n\n\t// if a \"vnode hook\" is defined, pass every created VNode to it\n\tif (options.vnode!==undefined) options.vnode(p);\n\n\treturn p;\n}\n","/**\n * Copy all properties from `props` onto `obj`.\n * @param {object} obj Object onto which properties should be copied.\n * @param {object} props Object from which to copy properties.\n * @returns {object}\n * @private\n */\nexport function extend(obj, props) {\n\tfor (let i in props) obj[i] = props[i];\n\treturn obj;\n}\n\n/** Invoke or update a ref, depending on whether it is a function or object ref.\n *  @param {object|function} [ref=null]\n *  @param {any} [value]\n */\nexport function applyRef(ref, value) {\n\tif (ref) {\n\t\tif (typeof ref=='function') ref(value);\n\t\telse ref.current = value;\n\t}\n}\n\n/**\n * Call a function asynchronously, as soon as possible. Makes\n * use of HTML Promise to schedule the callback if available,\n * otherwise falling back to `setTimeout` (mainly for IE<11).\n * @type {(callback: function) => void}\n */\nexport const defer = typeof Promise=='function' ? Promise.resolve().then.bind(Promise.resolve()) : setTimeout;\n\nexport function getPath(obj) {\n  if (Object.prototype.toString.call(obj) === '[object Array]') {\n    const result = {}\n    obj.forEach(item => {\n      if (typeof item === 'string') {\n        result[item] = true\n      } else {\n        const tempPath = item[Object.keys(item)[0]]\n        if (typeof tempPath === 'string') {\n          result[tempPath] = true\n        } else {\n          if(typeof tempPath[0] === 'string'){\n            result[tempPath[0]] = true\n          }else{\n            tempPath[0].forEach(path => result[path] = true)\n          }\n        }\n      }\n\t\t})\n    return result\n  } else {\n    return getUpdatePath(obj)\n  }\n}\n\nexport function getUpdatePath(data) {\n  const result = {}\n  dataToPath(data, result)\n  return result\n}\n\nfunction dataToPath(data, result) {\n  Object.keys(data).forEach(key => {\n    result[key] = true\n    const type = Object.prototype.toString.call(data[key])\n    if (type === OBJECTTYPE) {\n      _objToPath(data[key], key, result)\n    } else if (type === ARRAYTYPE) {\n      _arrayToPath(data[key], key, result)\n    }\n  })\n}\n\nfunction _objToPath(data, path, result) {\n  Object.keys(data).forEach(key => {\n    result[path + '.' + key] = true\n    delete result[path]\n    const type = Object.prototype.toString.call(data[key])\n    if (type === OBJECTTYPE) {\n      _objToPath(data[key], path + '.' + key, result)\n    } else if (type === ARRAYTYPE) {\n      _arrayToPath(data[key], path + '.' + key, result)\n    }\n  })\n}\n\nfunction _arrayToPath(data, path, result) {\n  data.forEach((item, index) => {\n    result[path + '[' + index + ']'] = true\n    delete result[path]\n    const type = Object.prototype.toString.call(item)\n    if (type === OBJECTTYPE) {\n      _objToPath(item, path + '[' + index + ']', result)\n    } else if (type === ARRAYTYPE) {\n      _arrayToPath(item, path + '[' + index + ']', result)\n    }\n  })\n}\n\n\n\nexport function getUse(data, paths) {\n  const obj = []\n  paths.forEach((path, index) => {\n    const isPath = typeof path === 'string'\n    if (isPath) {\n      obj[index] = getTargetByPath(data, path)\n    } else {\n      const key = Object.keys(path)[0]\n      const value = path[key]\n      if (typeof value === 'string') {\n        obj[index] = getTargetByPath(data, value)\n      } else {\n        const tempPath = value[0]\n        if (typeof tempPath === 'string') {\n          const tempVal = getTargetByPath(data, tempPath)\n          obj[index] = value[1] ? value[1](tempVal) : tempVal\n        } else {\n          const args = []\n          tempPath.forEach(path =>{\n            args.push(getTargetByPath(data, path))\n          })\n          obj[index] = value[1].apply(null, args)\n        }\n      }\n      obj[key] = obj[index]\n    }\n  })\n  return obj\n}\n\nexport function getTargetByPath(origin, path) {\n  const arr = path.replace(/]/g, '').replace(/\\[/g, '.').split('.')\n  let current = origin\n  for (let i = 0, len = arr.length; i < len; i++) {\n    current = current[arr[i]]\n  }\n  return current\n}\n","import { extend } from './util';\nimport { h } from './h';\n\n/**\n * Clones the given VNode, optionally adding attributes/props and replacing its\n * children.\n * @param {import('./vnode').VNode} vnode The virtual DOM element to clone\n * @param {object} props Attributes/props to add when cloning\n * @param {Array<import('./vnode').VNode>} [rest] Any additional arguments will be used as replacement\n *  children.\n */\nexport function cloneElement(vnode, props) {\n\treturn h(\n\t\tvnode.nodeName,\n\t\textend(extend({}, vnode.attributes), props),\n\t\targuments.length>2 ? [].slice.call(arguments, 2) : vnode.children\n\t);\n}\n","// render modes\n\n/** Do not re-render a component */\nexport const NO_RENDER = 0;\n/** Synchronously re-render a component and its children */\nexport const SYNC_RENDER = 1;\n/** Synchronously re-render a component, even if its lifecycle methods attempt to prevent it. */\nexport const FORCE_RENDER = 2;\n/** Queue asynchronous re-render of a component and it's children */\nexport const ASYNC_RENDER = 3;\n\n\nexport const ATTR_KEY = 'prevProps';\n\n/** DOM properties that should NOT have \"px\" added when numeric */\nexport const IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|ows|mnc|ntw|ine[ch]|zoo|^ord/i;\n\n","import options from './options';\nimport { defer } from './util';\nimport { renderComponent } from './vdom/component';\n\n/**\n * Managed queue of dirty components to be re-rendered\n * @type {Array<import('./component').Component>}\n */\nlet items = [];\n\n/**\n * Enqueue a rerender of a component\n * @param {import('./component').Component} component The component to rerender\n */\nexport function enqueueRender(component) {\n\tif (!component._dirty && (component._dirty = true) && items.push(component)==1) {\n\t\t(options.debounceRendering || defer)(rerender);\n\t}\n}\n\n/** Rerender all enqueued dirty components */\nexport function rerender() {\n\tlet p;\n\twhile ( (p = items.pop()) ) {\n\t\tif (p._dirty) renderComponent(p);\n\t}\n}\n","import { extend } from '../util';\n\n\n/**\n * Check if two nodes are equivalent.\n * @param {import('../dom').OmiElement} node DOM Node to compare\n * @param {import('../vnode').VNode} vnode Virtual DOM node to compare\n * @param {boolean} [hydrating=false] If true, ignores component constructors\n *  when comparing.\n * @private\n */\nexport function isSameNodeType(node, vnode, hydrating) {\n\tif (typeof vnode==='string' || typeof vnode==='number') {\n\t\treturn node.splitText!==undefined;\n\t}\n\tif (typeof vnode.nodeName==='string') {\n\t\treturn !node._componentConstructor && isNamedNode(node, vnode.nodeName);\n\t}\n\treturn hydrating || node._componentConstructor===vnode.nodeName;\n}\n\n\n/**\n * Check if an Element has a given nodeName, case-insensitively.\n * @param {import('../dom').OmiElement} node A DOM Element to inspect the name of.\n * @param {string} nodeName Unnormalized name to compare against.\n */\nexport function isNamedNode(node, nodeName) {\n\treturn node.normalizedNodeName===nodeName || node.nodeName.toLowerCase()===nodeName.toLowerCase();\n}\n\n\n/**\n * Reconstruct Component-style `props` from a VNode.\n * Ensures default/fallback values from `defaultProps`:\n * Own-properties of `defaultProps` not present in `vnode.attributes` are added.\n * @param {import('../vnode').VNode} vnode The VNode to get props for\n * @returns {object} The props to use for this VNode\n */\nexport function getNodeProps(vnode) {\n\tlet props = extend({}, vnode.attributes);\n\tprops.children = vnode.children;\n\n\tlet defaultProps = vnode.nodeName.defaultProps;\n\tif (defaultProps!==undefined) {\n\t\tfor (let i in defaultProps) {\n\t\t\tif (props[i]===undefined) {\n\t\t\t\tprops[i] = defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn props;\n}\n","import { IS_NON_DIMENSIONAL } from '../constants';\nimport { applyRef } from '../util';\nimport options from '../options';\n\n/**\n * A DOM event listener\n * @typedef {(e: Event) => void} EventListner\n */\n\n/**\n * A mapping of event types to event listeners\n * @typedef {Object.<string, EventListener>} EventListenerMap\n */\n\n/**\n * Properties Omi adds to elements it creates\n * @typedef OmiElementExtensions\n * @property {string} [normalizedNodeName] A normalized node name to use in diffing\n * @property {EventListenerMap} [_listeners] A map of event listeners added by components to this DOM node\n * @property {import('../component').Component} [_component] The component that rendered this DOM node\n * @property {function} [_componentConstructor] The constructor of the component that rendered this DOM node\n */\n\n/**\n * A DOM element that has been extended with Omi properties\n * @typedef {Element & ElementCSSInlineStyle & OmiElementExtensions} OmiElement\n */\n\n/**\n * Create an element with the given nodeName.\n * @param {string} nodeName The DOM node to create\n * @param {boolean} [isSvg=false] If `true`, creates an element within the SVG\n *  namespace.\n * @returns {OmiElement} The created DOM node\n */\nexport function createNode(nodeName, isSvg) {\n\t/** @type {OmiElement} */\n\tlet node = isSvg ? document.createElementNS('http://www.w3.org/2000/svg', nodeName) : document.createElement(nodeName);\n\tnode.normalizedNodeName = nodeName;\n\treturn node;\n}\n\n\n/**\n * Remove a child node from its parent if attached.\n * @param {Node} node The node to remove\n */\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n\n\n/**\n * Set a named attribute on the given Node, with special behavior for some names\n * and event handlers. If `value` is `null`, the attribute/handler will be\n * removed.\n * @param {OmiElement} node An element to mutate\n * @param {string} name The name/key to set, such as an event or attribute name\n * @param {*} old The last value that was set for this name/node pair\n * @param {*} value An attribute value, such as a function to be used as an\n *  event handler\n * @param {boolean} isSvg Are we currently diffing inside an svg?\n * @private\n */\nexport function setAccessor(node, name, old, value, isSvg, store) {\n\tif (name==='className') name = 'class';\n\n\n\tif (name==='key') {\n\t\t// ignore\n\t}\n\telse if (name==='ref') {\n\t\tapplyRef(old, null);\n\t\tapplyRef(value, node);\n\t}\n\telse if (name==='class' && !isSvg) {\n\t\tnode.className = value || '';\n\t}\n\telse if (name==='style') {\n\t\tif (!value || typeof value==='string' || typeof old==='string') {\n\t\t\tnode.style.cssText = value || '';\n\t\t}\n\t\tif (value && typeof value==='object') {\n\t\t\tif (typeof old!=='string') {\n\t\t\t\tfor (let i in old) if (!(i in value)) node.style[i] = '';\n\t\t\t}\n\t\t\tfor (let i in value) {\n\t\t\t\tnode.style[i] = typeof value[i]==='number' && IS_NON_DIMENSIONAL.test(i)===false ? (value[i]+'px') : value[i];\n\t\t\t}\n\t\t}\n\t}\n\telse if (name==='dangerouslySetInnerHTML') {\n\t\tif (value) node.innerHTML = value.__html || '';\n\t}\n\telse if (name[0]=='o' && name[1]=='n') {\n\t\tlet useCapture = name !== (name=name.replace(/Capture$/, ''));\n\t\tname = name.toLowerCase().substring(2);\n\t\tif (value) {\n\t\t\tif (!old) node.addEventListener(name, eventProxy, useCapture);\n\t\t}\n\t\telse {\n\t\t\tnode.removeEventListener(name, eventProxy, useCapture);\n\t\t}\n\t\t(node._listeners || (node._listeners = {}))[name] = (value && store) ? value.bind(store) : value;\n\t}\n\telse if (name!=='list' && name!=='type' && !isSvg && name in node) {\n\t\t// Attempt to set a DOM property to the given value.\n\t\t// IE & FF throw for certain property-value combinations.\n\t\ttry {\n\t\t\tnode[name] = value==null ? '' : value;\n\t\t} catch (e) { }\n\t\tif ((value==null || value===false) && name!='spellcheck') node.removeAttribute(name);\n\t}\n\telse {\n\t\tlet ns = isSvg && (name !== (name = name.replace(/^xlink:?/, '')));\n\t\t// spellcheck is treated differently than all other boolean values and\n\t\t// should not be removed when the value is `false`. See:\n\t\t// https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-spellcheck\n\t\tif (value==null || value===false) {\n\t\t\tif (ns) node.removeAttributeNS('http://www.w3.org/1999/xlink', name.toLowerCase());\n\t\t\telse node.removeAttribute(name);\n\t\t}\n\t\telse if (typeof value!=='function') {\n\t\t\tif (ns) node.setAttributeNS('http://www.w3.org/1999/xlink', name.toLowerCase(), value);\n\t\t\telse node.setAttribute(name, value);\n\t\t}\n\t}\n}\n\n\n/**\n * Proxy an event to hooked event handlers\n * @param {Event} e The event object from the browser\n * @private\n */\nfunction eventProxy(e) {\n\treturn this._listeners[e.type](options.event && options.event(e) || e);\n}\n","import { ATTR_KEY } from '../constants';\nimport { isSameNodeType, isNamedNode } from './index';\nimport { buildComponentFromVNode } from './component';\nimport { createNode, setAccessor } from '../dom/index';\nimport { unmountComponent } from './component';\nimport options from '../options';\nimport { applyRef } from '../util';\nimport { removeNode } from '../dom/index';\nimport { addStyleToHead, getCtorName } from '../style'\n\n/**\n * Queue of components that have been mounted and are awaiting componentDidMount\n * @type {Array<import('../component').Component>}\n */\nexport const mounts = [];\n\n/** Diff recursion count, used to track the end of the diff cycle. */\nexport let diffLevel = 0;\n\n/** Global flag indicating if the diff is currently within an SVG */\nlet isSvgMode = false;\n\n/** Global flag indicating if the diff is performing hydration */\nlet hydrating = false;\n\n/** Invoke queued componentDidMount lifecycle methods */\nexport function flushMounts() {\n\tlet c;\n\twhile ((c = mounts.shift())) {\n\t\tif (c.constructor.css) {\n      addStyleToHead(c.constructor.css, getCtorName(c.constructor))\n\t\t}\n\t\tif(c.props.css){\n\t\t\taddStyleToHead(c.props.css, '_ds'+c.elementId)\n\t\t}\n\t\tif (options.afterMount) options.afterMount(c);\n\t\t//if (c.componentDidMount) c.componentDidMount();\n\t\tif (c.store.installed) c.store.installed()\n\t}\n}\n\n\n/**\n * Apply differences in a given vnode (and it's deep children) to a real DOM Node.\n * @param {import('../dom').OmiElement} dom A DOM node to mutate into the shape of a `vnode`\n * @param {import('../vnode').VNode} vnode A VNode (with descendants forming a tree) representing\n *  the desired DOM structure\n * @param {object} $ The current $\n * @param {boolean} mountAll Whether or not to immediately mount all components\n * @param {Element} parent ?\n * @param {boolean} componentRoot ?\n * @returns {import('../dom').OmiElement} The created/mutated element\n * @private\n */\nexport function diff(dom, vnode, $, mountAll, parent, componentRoot, store) {\n\t// diffLevel having been 0 here indicates initial entry into the diff (not a subdiff)\n\tif (!diffLevel++) {\n\t\t// when first starting the diff, check if we're diffing an SVG or within an SVG\n\t\tisSvgMode = parent!=null && parent.ownerSVGElement!==undefined;\n\n\t\t// hydration is indicated by the existing element to be diffed not having a prop cache\n\t\thydrating = dom!=null && !(ATTR_KEY in dom);\n\t}\n\n\tlet ret = idiff(dom, vnode, $, mountAll, componentRoot, store);\n\n\t// append the element if its a new parent\n\tif (parent && ret.parentNode!==parent) parent.appendChild(ret);\n\n\t// diffLevel being reduced to 0 means we're exiting the diff\n\tif (!--diffLevel) {\n\t\thydrating = false;\n\t\t// invoke queued componentDidMount lifecycle methods\n\t\tif (!componentRoot) flushMounts();\n\t}\n\n\treturn ret;\n}\n\n\n/**\n * Internals of `diff()`, separated to allow bypassing diffLevel / mount flushing.\n * @param {import('../dom').OmiElement} dom A DOM node to mutate into the shape of a `vnode`\n * @param {import('../vnode').VNode} vnode A VNode (with descendants forming a tree) representing the desired DOM structure\n * @param {object} $ The current $\n * @param {boolean} mountAll Whether or not to immediately mount all components\n * @param {boolean} [componentRoot] ?\n * @private\n */\nfunction idiff(dom, vnode, $, mountAll, componentRoot, store) {\n\tlet out = dom,\n\t\tprevSvgMode = isSvgMode;\n\n\t// empty values (null, undefined, booleans) render as empty Text nodes\n\tif (vnode==null || typeof vnode==='boolean') vnode = '';\n\n\n\t// Fast case: Strings & Numbers create/update Text nodes.\n\tif (typeof vnode==='string' || typeof vnode==='number') {\n\n\t\t// update if it's already a Text node:\n\t\tif (dom && dom.splitText!==undefined && dom.parentNode && (!dom._component || componentRoot)) {\n\t\t\t/* istanbul ignore if */ /* Browser quirk that can't be covered: https://github.com/developit/Omi/commit/fd4f21f5c45dfd75151bd27b4c217d8003aa5eb9 */\n\t\t\tif (dom.nodeValue!=vnode) {\n\t\t\t\tdom.nodeValue = vnode;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// it wasn't a Text node: replace it with one and recycle the old Element\n\t\t\tout = document.createTextNode(vnode);\n\t\t\tif (dom) {\n\t\t\t\tif (dom.parentNode) dom.parentNode.replaceChild(out, dom);\n\t\t\t\trecollectNodeTree(dom, true);\n\t\t\t}\n\t\t}\n\n\t\tout[ATTR_KEY] = true;\n\n\t\treturn out;\n\t}\n\n\n\t// If the VNode represents a Component, perform a component diff:\n\tlet vnodeName = vnode.nodeName;\n\tif (typeof vnodeName==='function') {\n\t\treturn buildComponentFromVNode(dom, vnode, $, mountAll);\n\t}\n\n\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\n\tisSvgMode = vnodeName==='svg' ? true : vnodeName==='foreignObject' ? false : isSvgMode;\n\n\n\t// If there's no existing element or it's the wrong type, create a new one:\n\tvnodeName = String(vnodeName);\n\tif (!dom || !isNamedNode(dom, vnodeName)) {\n\t\tout = createNode(vnodeName, isSvgMode);\n\n\t\tif (dom) {\n\t\t\t// move children into the replacement node\n\t\t\twhile (dom.firstChild) out.appendChild(dom.firstChild);\n\n\t\t\t// if the previous Element was mounted into the DOM, replace it inline\n\t\t\tif (dom.parentNode) dom.parentNode.replaceChild(out, dom);\n\n\t\t\t// recycle the old element (skips non-Element node types)\n\t\t\trecollectNodeTree(dom, true);\n\t\t}\n\t}\n\n\n\tlet fc = out.firstChild,\n\t\tprops = out[ATTR_KEY],\n\t\tvchildren = vnode.children;\n\n\tif (props==null) {\n\t\tprops = out[ATTR_KEY] = {};\n\t\tfor (let a=out.attributes, i=a.length; i--; ) props[a[i].name] = a[i].value;\n\t}\n\n\t// Optimization: fast-path for elements containing a single TextNode:\n\tif (!hydrating && vchildren && vchildren.length===1 && typeof vchildren[0]==='string' && fc!=null && fc.splitText!==undefined && fc.nextSibling==null) {\n\t\tif (fc.nodeValue!=vchildren[0]) {\n\t\t\tfc.nodeValue = vchildren[0];\n\t\t}\n\t}\n\t// otherwise, if there are existing or new children, diff them:\n\telse if (vchildren && vchildren.length || fc!=null) {\n\t\tinnerDiffNode(out, vchildren, $, mountAll, hydrating || props.dangerouslySetInnerHTML!=null, store);\n\t}\n\n\n\t// Apply attributes/props from VNode to the DOM Element:\n\tdiffAttributes(out, vnode.attributes, props, store);\n\n\n\t// restore previous SVG mode: (in case we're exiting an SVG namespace)\n\tisSvgMode = prevSvgMode;\n\n\treturn out;\n}\n\n\n/**\n * Apply child and attribute changes between a VNode and a DOM Node to the DOM.\n * @param {import('../dom').OmiElement} dom Element whose children should be compared & mutated\n * @param {Array<import('../vnode').VNode>} vchildren Array of VNodes to compare to `dom.childNodes`\n * @param {object} $ Implicitly descendant $ object (from most\n *  recent `getChildContext()`)\n * @param {boolean} mountAll Whether or not to immediately mount all components\n * @param {boolean} isHydrating if `true`, consumes externally created elements\n *  similar to hydration\n */\nfunction innerDiffNode(dom, vchildren, $, mountAll, isHydrating, store) {\n\tlet originalChildren = dom.childNodes,\n\t\tchildren = [],\n\t\tkeyed = {},\n\t\tkeyedLen = 0,\n\t\tmin = 0,\n\t\tlen = originalChildren.length,\n\t\tchildrenLen = 0,\n\t\tvlen = vchildren ? vchildren.length : 0,\n\t\tj, c, f, vchild, child;\n\n\t// Build up a map of keyed children and an Array of unkeyed children:\n\tif (len!==0) {\n\t\tfor (let i=0; i<len; i++) {\n\t\t\tlet child = originalChildren[i],\n\t\t\t\tprops = child[ATTR_KEY],\n\t\t\t\tkey = vlen && props ? child._component ? child._component.__key : props.key : null;\n\t\t\tif (key!=null) {\n\t\t\t\tkeyedLen++;\n\t\t\t\tkeyed[key] = child;\n\t\t\t}\n\t\t\telse if (props || (child.splitText!==undefined ? (isHydrating ? child.nodeValue.trim() : true) : isHydrating)) {\n\t\t\t\tchildren[childrenLen++] = child;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (vlen!==0) {\n\t\tfor (let i=0; i<vlen; i++) {\n\t\t\tvchild = vchildren[i];\n\t\t\tchild = null;\n\n\t\t\t// attempt to find a node based on key matching\n\t\t\tlet key = vchild.key;\n\t\t\tif (key!=null) {\n\t\t\t\tif (keyedLen && keyed[key]!==undefined) {\n\t\t\t\t\tchild = keyed[key];\n\t\t\t\t\tkeyed[key] = undefined;\n\t\t\t\t\tkeyedLen--;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// attempt to pluck a node of the same type from the existing children\n\t\t\telse if (min<childrenLen) {\n\t\t\t\tfor (j=min; j<childrenLen; j++) {\n\t\t\t\t\tif (children[j]!==undefined && isSameNodeType(c = children[j], vchild, isHydrating)) {\n\t\t\t\t\t\tchild = c;\n\t\t\t\t\t\tchildren[j] = undefined;\n\t\t\t\t\t\tif (j===childrenLen-1) childrenLen--;\n\t\t\t\t\t\tif (j===min) min++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// morph the matched/found/created DOM child to match vchild (deep)\n\t\t\tchild = idiff(child, vchild, $, mountAll, null, store);\n\n\t\t\tf = originalChildren[i];\n\t\t\tif (child && child!==dom && child!==f) {\n\t\t\t\tif (f==null) {\n\t\t\t\t\tdom.appendChild(child);\n\t\t\t\t}\n\t\t\t\telse if (child===f.nextSibling) {\n\t\t\t\t\tremoveNode(f);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdom.insertBefore(child, f);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\n\t// remove unused keyed children:\n\tif (keyedLen) {\n\t\tfor (let i in keyed) if (keyed[i]!==undefined) recollectNodeTree(keyed[i], false);\n\t}\n\n\t// remove orphaned unkeyed children:\n\twhile (min<=childrenLen) {\n\t\tif ((child = children[childrenLen--])!==undefined) recollectNodeTree(child, false);\n\t}\n}\n\n\n\n/**\n * Recursively recycle (or just unmount) a node and its descendants.\n * @param {import('../dom').OmiElement} node DOM node to start\n *  unmount/removal from\n * @param {boolean} [unmountOnly=false] If `true`, only triggers unmount\n *  lifecycle, skips removal\n */\nexport function recollectNodeTree(node, unmountOnly) {\n\tlet component = node._component;\n\tif (component) {\n\t\t// if node is owned by a Component, unmount that component (ends up recursing back here)\n\t\tunmountComponent(component);\n\t}\n\telse {\n\t\t// If the node's VNode had a ref function, invoke it with null here.\n\t\t// (this is part of the React spec, and smart for unsetting references)\n\t\tif (node[ATTR_KEY]!=null) applyRef(node[ATTR_KEY].ref, null);\n\n\t\tif (unmountOnly===false || node[ATTR_KEY]==null) {\n\t\t\tremoveNode(node);\n\t\t}\n\n\t\tremoveChildren(node);\n\t}\n}\n\n\n/**\n * Recollect/unmount all children.\n *\t- we use .lastChild here because it causes less reflow than .firstChild\n *\t- it's also cheaper than accessing the .childNodes Live NodeList\n */\nexport function removeChildren(node) {\n\tnode = node.lastChild;\n\twhile (node) {\n\t\tlet next = node.previousSibling;\n\t\trecollectNodeTree(node, true);\n\t\tnode = next;\n\t}\n}\n\n\n/**\n * Apply differences in attributes from a VNode to the given DOM Element.\n * @param {import('../dom').OmiElement} dom Element with attributes to diff `attrs` against\n * @param {object} attrs The desired end-state key-value attribute pairs\n * @param {object} old Current/previous attributes (from previous VNode or\n *  element's prop cache)\n */\nfunction diffAttributes(dom, attrs, old, store) {\n\tlet name;\n\n\t// remove attributes no longer present on the vnode by setting them to undefined\n\tfor (name in old) {\n\t\tif (!(attrs && attrs[name]!=null) && old[name]!=null) {\n\t\t\tsetAccessor(dom, name, old[name], old[name] = undefined, isSvgMode, store);\n\t\t}\n\t}\n\n\t// add new & update changed attributes\n\tfor (name in attrs) {\n\t\tif (name!=='children' && name!=='innerHTML' && (!(name in old) || attrs[name]!==(name==='value' || name==='checked' ? dom[name] : old[name]))) {\n\t\t\tsetAccessor(dom, name, old[name], old[name] = attrs[name], isSvgMode, store);\n\t\t}\n\t}\n}\n","import { Component } from '../component';\nimport {getPath, getUse} from '../util'\n/**\n * Retains a pool of Components for re-use.\n * @type {Component[]}\n * @private\n */\nexport const recyclerComponents = [];\n\n\n/**\n * Create a component. Normalizes differences between PFC's and classful\n * Components.\n * @param {function} Ctor The constructor of the component to create\n * @param {object} props The initial props of the component\n * @param {object} $ The initial $ of the component\n * @returns {import('../component').Component}\n */\nexport function createComponent(Ctor, props, $) {\n\tlet inst, i = recyclerComponents.length;\n\n\tinst = new Component(props, $);\n\tinst.constructor = Ctor;\n\tinst.render = doRender;\n\tif(Ctor.store){\n\t\tinst.store = Ctor.store(inst, $)\n\t\tinst.store.update = inst.update.bind(inst)\n\t}\n\n\tif ( inst.$ && inst.$.data) {\n\n\t\tif(inst.constructor.use){\n\t\t\tinst.constructor.updatePath = getPath(inst.constructor.use)\n\t\t\tinst.using = getUse(inst.$.data, inst.constructor.use)\n\t\t\tinst.$.instances.push(inst)\n\t\t} else if(inst.use){\n\t\t\tconst use = typeof inst.use === 'function' ? inst.use() : inst.use\n\t\t\tinst._updatePath = getPath(use)\n\t\t\tinst.using = getUse(inst.$.data, use)\n\t\t\tinst.$.instances.push(inst)\n\t\t}\n\t}\n\t\n\twhile (i--) {\n\t\tif (recyclerComponents[i].constructor===Ctor) {\n\t\t\tinst.nextBase = recyclerComponents[i].nextBase;\n\t\t\trecyclerComponents.splice(i, 1);\n\t\t\treturn inst;\n\t\t}\n\t}\n\n\treturn inst;\n}\n\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, $) {\n\treturn this.constructor(props, this.store, this, $);\n}\n","import { SYNC_RENDER, NO_RENDER, ASYNC_RENDER, ATTR_KEY } from '../constants';\nimport options from '../options';\nimport { extend, applyRef } from '../util';\nimport { enqueueRender } from '../render-queue';\nimport { getNodeProps } from './index';\nimport { diff, mounts, diffLevel, flushMounts, recollectNodeTree, removeChildren } from './diff';\nimport { createComponent, recyclerComponents } from './component-recycler';\nimport { removeNode } from '../dom/index';\n\n/**\n * Set a component's `props` and possibly re-render the component\n * @param {import('../component').Component} component The Component to set props on\n * @param {object} props The new props\n * @param {number} renderMode Render options - specifies how to re-render the component\n * @param {object} $ The new $\n * @param {boolean} mountAll Whether or not to immediately mount all components\n */\nexport function setComponentProps(component, props, renderMode, $, mountAll) {\n\tif (component._disable) return;\n\tcomponent._disable = true;\n\n\tcomponent.__ref = props.ref;\n\tcomponent.__key = props.key;\n\tdelete props.ref;\n\tdelete props.key;\n\n\tif (!component.base || mountAll) {\n\t\t//if (component.componentWillMount) component.componentWillMount();\n\t\tif (component.store.install) component.store.install()\n\t}\n\telse {\n\t\t// if (component.componentWillReceiveProps) {\n\t\t// \tcomponent.componentWillReceiveProps(props, $);\n\t\t// }\n\t\tif (component.store.receiveProps) {\n\t\t\tcomponent.__needUpdate_ = component.store.receiveProps(props, $)\n\t\t}\n\t}\n\t\n\tif ($ && $!==component.$) {\n\t\tcomponent.$ = $;\n\t}\n\n\tif (!component.prevProps) component.prevProps = component.props;\n\tcomponent.props = props;\n\n\tcomponent._disable = false;\n\n\tif (renderMode!==NO_RENDER) {\n\t\tif (renderMode===SYNC_RENDER || options.syncComponentUpdates!==false || !component.base) {\n\t\t\trenderComponent(component, SYNC_RENDER, mountAll);\n\t\t}\n\t\telse {\n\t\t\tenqueueRender(component);\n\t\t}\n\t}\n\n\tapplyRef(component.__ref, component);\n}\n\n\n\n/**\n * Render a Component, triggering necessary lifecycle events and taking\n * High-Order Components into account.\n * @param {import('../component').Component} component The component to render\n * @param {number} [renderMode] render mode, see constants.js for available options.\n * @param {boolean} [mountAll] Whether or not to immediately mount all components\n * @param {boolean} [isChild] ?\n * @private\n */\nexport function renderComponent(component, renderMode, mountAll, isChild) {\n\tif (component._disable) return;\n\n\tlet props = component.props,\n\t\t$ = component.$,\n\t\tpreviousProps = component.prevProps || props,\n\t\tisUpdate = component.base,\n\t\tnextBase = component.nextBase,\n\t\tinitialBase = isUpdate || nextBase,\n\t\tinitialChildComponent = component._component,\n\t\tskip = false,\n\t\trendered, inst, cbase;\n\n\t// if updating\n\tif (isUpdate) {\n\t\tcomponent.props = previousProps;\n\t\t\n\t\tif (component.__needUpdate_ !== false) {\n\t\t\tskip = false\n\t\t\tif (component.store.beforeUpdate) {\n\t\t\t\tcomponent.store.beforeUpdate(props, $)\n\t\t\t}\n\t\t} else {\n\t\t\tskip = true\n\t\t}\n\t\tdelete component.__needUpdate_\n    \n\t\tcomponent.props = props;\n\t}\n\n\tcomponent.prevProps = component.prevContext = component.nextBase = null;\n\tcomponent._dirty = false;\n\n\tif (!skip) {\n\t\toptions.runTimeComponent = component\n\t\tif(component.store.beforeRender){\n\t\t\tcomponent.store.beforeRender()\n\t\t}\n\t\trendered = component.render(props, $);\n\t\toptions.runTimeComponent = null\n\n\n\n\t\n\n\t\tlet childComponent = rendered && rendered.nodeName,\n\t\t\ttoUnmount, base;\n\n\t\tif (typeof childComponent==='function') {\n\t\t\t// set up high order component link\n\n\t\t\tlet childProps = getNodeProps(rendered);\n\t\t\tinst = initialChildComponent;\n\n\t\t\tif (inst && inst.constructor===childComponent && childProps.key==inst.__key) {\n\t\t\t\tsetComponentProps(inst, childProps, SYNC_RENDER, $, false);\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttoUnmount = inst;\n\n\t\t\t\tcomponent._component = inst = createComponent(childComponent, childProps, $);\n\t\t\t\tinst.nextBase = inst.nextBase || nextBase;\n\t\t\t\tinst._parentComponent = component;\n\t\t\t\tsetComponentProps(inst, childProps, NO_RENDER, $, false);\n\t\t\t\trenderComponent(inst, SYNC_RENDER, mountAll, true);\n\t\t\t}\n\n\t\t\tbase = inst.base;\n\t\t}\n\t\telse {\n\t\t\tcbase = initialBase;\n\n\t\t\t// destroy high order component link\n\t\t\ttoUnmount = initialChildComponent;\n\t\t\tif (toUnmount) {\n\t\t\t\tcbase = component._component = null;\n\t\t\t}\n\n\t\t\tif (initialBase || renderMode===SYNC_RENDER) {\n\t\t\t\tif (cbase) cbase._component = null;\n\t\t\t\tbase = diff(cbase, rendered, $, mountAll || !isUpdate, initialBase && initialBase.parentNode, true, component.store);\n\t\t\t}\n\t\t}\n\n\t\tif (initialBase && base!==initialBase && inst!==initialChildComponent) {\n\t\t\tlet baseParent = initialBase.parentNode;\n\t\t\tif (baseParent && base!==baseParent) {\n\t\t\t\tbaseParent.replaceChild(base, initialBase);\n\n\t\t\t\tif (!toUnmount) {\n\t\t\t\t\tinitialBase._component = null;\n\t\t\t\t\trecollectNodeTree(initialBase, false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (toUnmount) {\n\t\t\tunmountComponent(toUnmount);\n\t\t}\n\n\t\tcomponent.base = base;\n\t\tif (base && !isChild) {\n\t\t\tlet componentRef = component,\n\t\t\t\tt = component;\n\t\t\twhile ((t=t._parentComponent)) {\n\t\t\t\t(componentRef = t).base = base;\n\t\t\t}\n\t\t\tbase._component = componentRef;\n\t\t\tbase._componentConstructor = componentRef.constructor;\n\t\t}\n\t}\n\n\tif (!isUpdate || mountAll) {\n\t\tmounts.push(component);\n\t}\n\telse if (!skip) {\n\t\t// Ensure that pending componentDidMount() hooks of child components\n\t\t// are called before the componentDidUpdate() hook in the parent.\n\t\t// Note: disabled as it causes duplicate hooks, see https://github.com/developit/Omi/issues/750\n\t\t// flushMounts();\n\n\t\tif (component.store.updated) {\n\t\t\tcomponent.store.updated(previousProps);\n\t\t}\n\t\tif (options.afterUpdate) options.afterUpdate(component);\n\t}\n\n\twhile (component._renderCallbacks.length) component._renderCallbacks.pop().call(component);\n\n\tif (!diffLevel && !isChild) flushMounts();\n}\n\n\n\n/**\n * Apply the Component referenced by a VNode to the DOM.\n * @param {import('../dom').OmiElement} dom The DOM node to mutate\n * @param {import('../vnode').VNode} vnode A Component-referencing VNode\n * @param {object} $ The current $\n * @param {boolean} mountAll Whether or not to immediately mount all components\n * @returns {import('../dom').OmiElement} The created/mutated element\n * @private\n */\nexport function buildComponentFromVNode(dom, vnode, $, mountAll) {\n\tlet c = dom && dom._component,\n\t\toriginalComponent = c,\n\t\toldDom = dom,\n\t\tisDirectOwner = c && dom._componentConstructor===vnode.nodeName,\n\t\tisOwner = isDirectOwner,\n\t\tprops = getNodeProps(vnode);\n\twhile (c && !isOwner && (c=c._parentComponent)) {\n\t\tisOwner = c.constructor===vnode.nodeName;\n\t}\n\n\tif (c && isOwner && (!mountAll || c._component)) {\n\t\tsetComponentProps(c, props, ASYNC_RENDER, $, mountAll);\n\t\tdom = c.base;\n\t}\n\telse {\n\t\tif (originalComponent && !isDirectOwner) {\n\t\t\tunmountComponent(originalComponent);\n\t\t\tdom = oldDom = null;\n\t\t}\n\n\t\tc = createComponent(vnode.nodeName, props, $);\n\t\tif (dom && !c.nextBase) {\n\t\t\tc.nextBase = dom;\n\t\t\t// passing dom/oldDom as nextBase will recycle it if unused, so bypass recycling on L229:\n\t\t\toldDom = null;\n\t\t}\n\t\tsetComponentProps(c, props, SYNC_RENDER, $, mountAll);\n\t\tdom = c.base;\n\n\t\tif (oldDom && dom!==oldDom) {\n\t\t\toldDom._component = null;\n\t\t\trecollectNodeTree(oldDom, false);\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n\n\n/**\n * Remove a component from the DOM and recycle it.\n * @param {import('../component').Component} component The Component instance to unmount\n * @private\n */\nexport function unmountComponent(component) {\n\tif (options.beforeUnmount) options.beforeUnmount(component);\n\n\tlet base = component.base;\n\n\tcomponent._disable = true;\n\n\t//if (component.componentWillUnmount) component.componentWillUnmount();\n\tif (component.store.uninstall) component.store.uninstall();\n\tcomponent.base = null;\n\n\t// recursively tear down & recollect high-order component children:\n\tlet inner = component._component;\n\tif (inner) {\n\t\tunmountComponent(inner);\n\t}\n\telse if (base) {\n\t\tif (base[ATTR_KEY]!=null) applyRef(base[ATTR_KEY].ref, null);\n\n\t\tcomponent.nextBase = base;\n\n\t\tremoveNode(base);\n\t\trecyclerComponents.push(component);\n\n\t\tremoveChildren(base);\n\t}\n\n\tapplyRef(component.__ref, null);\n}\n","import { FORCE_RENDER } from './constants';\nimport { extend } from './util';\nimport { renderComponent } from './vdom/component';\n/**\n * Base Component class.\n * Provides `update()`, which trigger rendering.\n * @typedef {object} Component\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components' getChildContext\n * @public\n *\n * @example\n * class MyFoo extends Component {\n *   render(props) {\n *     return <div />;\n *   }\n * }\n */\n\n let id = 0\n\nexport function Component(props, $) {\n\tthis._dirty = true;\n\tthis.elementId = id++\n\t/**\n\t * @public\n\t * @type {object}\n\t */\n\tthis.store = {}\n\tthis.$ = $\n\t/**\n\t * @public\n\t * @type {object}\n\t */\n\tthis.props = props;\n\n\tthis._renderCallbacks = [];\n}\n\n\nextend(Component.prototype, {\n\n\t/**\n\t * Immediately perform a synchronous re-render of the component.\n\t * @param {() => void} callback A function to be called after component is\n\t * \tre-rendered.\n\t * @private\n\t */\n\tupdate(callback) {\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\trenderComponent(this, FORCE_RENDER);\n\t},\n\n\t/**\n\t * Accepts `props`, and returns a new Virtual DOM tree to build.\n\t * Virtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n\t * @param {object} props Props (eg: JSX attributes) received from parent\n\t * \telement/component\n\t * @param {object} context Context object, as returned by the nearest\n\t *  ancestor's `getChildContext()`\n\t * @returns {import('./vnode').VNode | void}\n\t */\n\trender() {}\n\n});\n","/* \n * obaa 2.0.3\n * By dntzhang\n * Github: https://github.com/Tencent/omi/tree/master/packages/obaa\n * MIT Licensed.\n */\n\n\n// $_r: root\n// $_c: prop change callback\n// $_p: path\n\nexport function obaa(target, arr, callback) {\n\n  var eventPropArr = []\n  if (isArray(target)) {\n    if (target.length === 0) {\n      target.$_o = {\n        $_r: target,\n        $_p: '#'\n      }\n    }\n    mock(target, target)\n  }\n  for (var prop in target) {\n    if (target.hasOwnProperty(prop)) {\n      if (callback) {\n        if (isArray(arr) && isInArray(arr, prop)) {\n          eventPropArr.push(prop)\n          watch(target, prop, null, target)\n        } else if (isString(arr) && prop == arr) {\n          eventPropArr.push(prop)\n          watch(target, prop, null, target)\n        }\n      } else {\n        eventPropArr.push(prop)\n        watch(target, prop, null, target)\n      }\n    }\n  }\n  if (!target.$_c) {\n    target.$_c = []\n  }\n  var propChanged = callback ? callback : arr\n  target.$_c.push({\n    all: !callback,\n    propChanged: propChanged,\n    eventPropArr: eventPropArr\n  })\n}\n\nvar triggerStr = [\n  'concat',\n  'copyWithin',\n  'fill',\n  'pop',\n  'push',\n  'reverse',\n  'shift',\n  'sort',\n  'splice',\n  'unshift',\n  'size'\n].join(',')\n\nvar methods = [\n  'concat',\n  'copyWithin',\n  'entries',\n  'every',\n  'fill',\n  'filter',\n  'find',\n  'findIndex',\n  'forEach',\n  'includes',\n  'indexOf',\n  'join',\n  'keys',\n  'lastIndexOf',\n  'map',\n  'pop',\n  'push',\n  'reduce',\n  'reduceRight',\n  'reverse',\n  'shift',\n  'slice',\n  'some',\n  'sort',\n  'splice',\n  'toLocaleString',\n  'toString',\n  'unshift',\n  'values',\n  'size'\n]\n\nfunction mock(target, root) {\n  methods.forEach(function (item) {\n    target[item] = function () {\n      var old = Array.prototype.slice.call(this, 0)\n      var result = Array.prototype[item].apply(\n        this,\n        Array.prototype.slice.call(arguments)\n      )\n      if (new RegExp('\\\\b' + item + '\\\\b').test(triggerStr)) {\n        for (var cprop in this) {\n          if (\n            this.hasOwnProperty(cprop) &&\n            !isFunction(this[cprop])\n          ) {\n            watch(this, cprop, this.$_o.$_p, root)\n          }\n        }\n        //todo\n        onPropertyChanged(\n          'Array-' + item,\n          this,\n          old,\n          this,\n          this.$_o.$_p,\n          root\n        )\n      }\n      return result\n    }\n    target[\n      'pure' + item.substring(0, 1).toUpperCase() + item.substring(1)\n    ] = function () {\n      return Array.prototype[item].apply(\n        this,\n        Array.prototype.slice.call(arguments)\n      )\n    }\n  })\n}\n\nfunction watch(target, prop, path, root) {\n  if (prop === '$_o') return\n  if (isFunction(target[prop])) return\n  if (!target.$_o) target.$_o = {\n    $_r: root\n  }\n  if (path !== undefined && path !== null) {\n    target.$_o.$_p = path\n  } else {\n    target.$_o.$_p = '#'\n  }\n\n  var currentValue = (target.$_o[prop] = target[prop])\n  Object.defineProperty(target, prop, {\n    get: function () {\n      return this.$_o[prop]\n    },\n    set: function (value) {\n      var old = this.$_o[prop]\n      this.$_o[prop] = value\n      onPropertyChanged(\n        prop,\n        value,\n        old,\n        this,\n        target.$_o.$_p,\n        root\n      )\n    },\n    configurable: true,\n    enumerable: true\n  })\n  if (typeof currentValue == 'object') {\n    if (isArray(currentValue)) {\n      mock(currentValue, root)\n      if (currentValue.length === 0) {\n        if (!currentValue.$_o) currentValue.$_o = {}\n        if (path !== undefined && path !== null) {\n          currentValue.$_o.$_p = path + '-' + prop\n        } else {\n          currentValue.$_o.$_p = '#' + '-' + prop\n        }\n      }\n    }\n    for (var cprop in currentValue) {\n      if (currentValue.hasOwnProperty(cprop)) {\n        watch(\n          currentValue,\n          cprop,\n          target.$_o.$_p + '-' + prop,\n          root\n        )\n      }\n    }\n  }\n}\n\n\nfunction onPropertyChanged(prop, value, oldValue, target, path, root) {\n  if (value !== oldValue && root.$_c) {\n    var rootName = getRootName(prop, path)\n    for (\n      var i = 0, len = root.$_c.length;\n      i < len;\n      i++\n    ) {\n      var handler = root.$_c[i]\n      if (\n        handler.all ||\n        isInArray(handler.eventPropArr, rootName) ||\n        rootName.indexOf('Array-') === 0\n      ) {\n        handler.propChanged.call(target, prop, value, oldValue, path)\n      }\n    }\n  }\n\n  if (prop.indexOf('Array-') !== 0 && typeof value === 'object') {\n    watch(target, prop, target.$_o.$_p, root)\n  }\n}\n\nfunction isFunction(obj) {\n  return Object.prototype.toString.call(obj) == '[object Function]'\n}\n\n\n\nfunction isArray(obj) {\n  return Object.prototype.toString.call(obj) === '[object Array]'\n}\n\nfunction isString(obj) {\n  return typeof obj === 'string'\n}\n\nfunction isInArray(arr, item) {\n  for (var i = arr.length; --i > -1;) {\n    if (item === arr[i]) return true\n  }\n  return false\n}\n\n\nfunction getRootName(prop, path) {\n  if (path === '#') {\n    return prop\n  }\n  return path.split('-')[1]\n}\n\nobaa.add = function (obj, prop) {\n  watch(obj, prop, obj.$_o.$_p, obj.$_o.$_r)\n}\n\nobaa.set = function (obj, prop, value) {\n  watch(obj, prop, obj.$_o.$_p, obj.$_o.$_r)\n  obj[prop] = value\n}\n\nArray.prototype.size = function (length) {\n  this.length = length\n}\n\n","import { diff } from './vdom/diff';\nimport { obaa } from './obaa'\nimport { getUse } from './util'\n\n/**\n * Render JSX into a `parent` Element.\n * @param {import('./vnode').VNode} vnode A (JSX) VNode to render\n * @param {import('./dom').OmiElement} parent DOM element to render into\n * @param {import('./dom').OmiElement} [merge] Attempt to re-use an existing DOM tree rooted at\n *  `merge`\n * @public\n *\n * @example\n * // render a div into <body>:\n * render(<div id=\"hello\">hello!</div>, document.body);\n *\n * @example\n * // render a \"Thing\" component into #foo:\n * const Thing = ({ name }) => <span>{ name }</span>;\n * render(<Thing name=\"one\" />, document.querySelector('#foo'));\n */\nexport function render(vnode, parent, globalStore) {\n\tobsStore(globalStore)\n\treturn diff(null, vnode, globalStore, false, typeof parent === 'string' ? document.querySelector(parent) : parent, false);\n}\n\n\nfunction obsStore(store){\n  if (store && store.data) {\n    store.instances = []\n    extendStoreUpate(store)\n\n    obaa(store.data, (prop, val, old, path) => {\n\t\t\tconst patchs = {}\n      const key = fixPath(path + '-' + prop)\n      patchs[key] = true\n\t\t\tstore.update(patchs)\n    })\n  }\n}\n\nexport function merge(vnode, merge, store) {\n  obsStore(store)\n\n  merge =\n    typeof merge === 'string'\n      ? document.querySelector(merge)\n      : merge\n\n  return diff(merge, vnode, store)\n}\n\nfunction extendStoreUpate(store) {\n  store.update = function(patch) {\n    const updateAll = matchGlobalData(this.globalData, patch)\n    if (Object.keys(patch).length > 0) {\n\n      this.instances.forEach(instance => {\n        if (\n          updateAll ||\n          this.updateAll ||\n          (instance.constructor.updatePath &&\n\t\t\t\t\t\tneedUpdate(patch, instance.constructor.updatePath)) ||\n\t\t\t\t\t\t(instance._updatePath &&\n\t\t\t\t\t\t\tneedUpdate(patch, instance._updatePath))\n        ) {\n\t\t\t\t\t//update this.using\n\t\t\t\t\tif(instance.constructor.use){\n\t\t\t\t\t\tinstance.using = getUse(store.data, instance.constructor.use)\n\t\t\t\t\t} else if(instance.use){\n\t\t\t\t\t\tinstance.using = getUse(store.data, typeof instance.use === 'function' ? instance.use() : instance.use)\n\t\t\t\t\t}\n\n          instance.update()\n        }\n      })\n      this.onChange && this.onChange(patch)\n    }\n  }\n}\n\nexport function matchGlobalData(globalData, diffResult) {\n  if (!globalData) return false\n  for (let keyA in diffResult) {\n    if (globalData.indexOf(keyA) > -1) {\n      return true\n    }\n    for (let i = 0, len = globalData.length; i < len; i++) {\n      if (includePath(keyA, globalData[i])) {\n        return true\n      }\n    }\n  }\n  return false\n}\n\nexport function needUpdate(diffResult, updatePath) {\n  for (let keyA in diffResult) {\n    if (updatePath[keyA]) {\n      return true\n    }\n    for (let keyB in updatePath) {\n      if (includePath(keyA, keyB)) {\n        return true\n      }\n    }\n  }\n  return false\n}\n\nfunction includePath(pathA, pathB) {\n  if (pathA.indexOf(pathB) === 0) {\n    const next = pathA.substr(pathB.length, 1)\n    if (next === '[' || next === '.') {\n      return true\n    }\n  }\n  return false\n}\n\nexport function fixPath(path) {\n  let mpPath = ''\n  const arr = path.replace('#-', '').split('-')\n  arr.forEach((item, index) => {\n    if (index) {\n      if (isNaN(Number(item))) {\n        mpPath += '.' + item\n      } else {\n        mpPath += '[' + item + ']'\n      }\n    } else {\n      mpPath += item\n    }\n  })\n  return mpPath\n}\n","import { h } from './h'\nimport { render } from './render'\nimport { addStyleToHead, getCtorName } from './style'\n\n\t; (function () {\n\t\tif (\n\t\t\t// No Reflect, no classes, no need for shim because native custom elements\n\t\t\t// require ES2015 classes or Reflect.\n\t\t\twindow.Reflect === undefined ||\n\t\t\twindow.customElements === undefined ||\n\t\t\t// The webcomponentsjs custom elements polyfill doesn't require\n\t\t\t// ES2015-compatible construction (`super()` or `Reflect.construct`).\n\t\t\twindow.customElements.hasOwnProperty('polyfillWrapFlushCallback')\n\t\t) {\n\t\t\treturn\n\t\t}\n\t\tvar BuiltInHTMLElement = HTMLElement\n\t\twindow.HTMLElement = function HTMLElement() {\n\t\t\treturn Reflect.construct(BuiltInHTMLElement, [], this.constructor)\n\t\t}\n\t\tHTMLElement.prototype = BuiltInHTMLElement.prototype\n\t\tHTMLElement.prototype.constructor = HTMLElement\n\t\tObject.setPrototypeOf(HTMLElement, BuiltInHTMLElement)\n\t})()\n\nexport function define(name, Component) {\n\tcustomElements.define(name, class extends HTMLElement {\n\n\t\tconnectedCallback() {\n\t\t\tvar shadowRoot = this.attachShadow({\n\t\t\t\tmode: 'open'\n\t\t\t})\n\t\t\tthis.props = {}\n\t\t\tthis.attrsToProps()\n\t\t\n\t\t\t//Component.css = null\n\t\t\tif(Component.css){\n\t\t\t\taddStyleToHead(Component.css, getCtorName(Component), shadowRoot)\n\t\t\t}\n\t\t\t\n\t\t\tthis._ele = render(h(Component, this.props), shadowRoot)\n\n\t\t\tif(this.props.css){\n\t\t\t\taddStyleToHead(this.props.css, '_ds'+this._ele._component.elementId, shadowRoot)\n\t\t\t}\n\t\t}\n\n\t\tdisconnectedCallback() {\n\n\t\t}\n\n\t\taddEventListener(name, callback) {\n\t\t\tthis._ele._component.props['on' + name.charAt(0).toUpperCase() + name.slice(1)] = callback\n\t\t}\n\n\t\tremoveEventListener(name, callback) {\n\t\t\tvar props = this._ele._component.props\n\t\t\tvar eventName = 'on' + name.charAt(0).toUpperCase() + name.slice(1)\n\t\t\tfor (var key in props) {\n\t\t\t\tif (key === eventName && callback === props[key]) {\n\t\t\t\t\tdelete props[key]\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tremoveAttribute(key) {\n\t\t\tsuper.removeAttribute(key)\n\t\t\tdelete this._ele._component.props[key]\n\t\t\tif(Component.defaultProps.hasOwnProperty(key)){\n\t\t\t\tthis._ele._component.props[key] = Component.defaultProps[key]\n\t\t\t}\n\t\t\tthis._ele._component.update()\n\t\t}\n\t\n\t\tsetAttribute(key, val) {\n\t\t\tif (val && typeof val === 'object') {\n\t\t\t\tval = JSON.stringify(val)\n\t\t\t\tsuper.setAttribute(key, val)\n\t\t\t} else {\n\t\t\t\tval = val.toString()\n\t\t\t\tsuper.setAttribute(key, val)\n\t\t\t}\n\t\t\tthis.attrToProp(key, val, this._ele._component.props)\n\t\t\tthis._ele._component.update()\n\t\t}\n\n\t\tattrToProp(key, val, props){\n\t\t\tvar type = Component.propTypes[key]\n\t\t\tswitch (type) {\n\t\t\t\tcase String:\n\t\t\t\t\tprops[key] = val\n\t\t\t\t\tbreak\n\t\t\t\tcase Number:\n\t\t\t\t\tprops[key] = Number(val)\n\t\t\t\t\tbreak\n\t\t\t\tcase Boolean:\n\t\t\t\t\tif (val === 'false' || val === '0') {\n\t\t\t\t\t\tprops[key] = false\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprops[key] = true\n\t\t\t\t\t}\n\t\t\t\t\tbreak\n\t\t\t\tcase Array:\n\t\t\t\tcase Object:\n\t\t\t\t\tprops[key] = JSON.parse(val\n\t\t\t\t\t\t.replace(/(['\"])?([a-zA-Z0-9_-]+)(['\"])?:([^\\/])/g, '\"$2\":$4')\n\t\t\t\t\t\t.replace(/'([\\s\\S]*?)'/g, '\"$1\"')\n\t\t\t\t\t\t.replace(/,(\\s*})/g, '$1')\n\t\t\t\t\t)\n\t\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\n\t\tattrsToProps() {\n\t\t\tthis.props['css'] = this.getAttribute('css')\n\t\t\tvar attrs = Component.propTypes\n\t\t\tif (!attrs) return\n\t\t\tObject.keys(attrs).forEach(key => {\n\t\t\t\tvar type = attrs[key]\n\t\t\t\tvar val = this.getAttribute(hyphenate(key))\n\t\t\t\tif (val !== null) {\n\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\tcase String:\n\t\t\t\t\t\t\tthis.props[key] = val\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\tcase Number:\n\t\t\t\t\t\t\tthis.props[key] = Number(val)\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\tcase Boolean:\n\t\t\t\t\t\t\tif (val === 'false' || val === '0') {\n\t\t\t\t\t\t\t\tthis.props[key] = false\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.props[key] = true\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\tcase Array:\n\t\t\t\t\t\tcase Object:\n\t\t\t\t\t\t\tthis.props[key] = JSON.parse(val\n\t\t\t\t\t\t\t\t.replace(/(['\"])?([a-zA-Z0-9_-]+)(['\"])?:([^\\/])/g, '\"$2\":$4')\n\t\t\t\t\t\t\t\t.replace(/'([\\s\\S]*?)'/g, '\"$1\"')\n\t\t\t\t\t\t\t\t.replace(/,(\\s*})/g, '$1')\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (Component.defaultProps && Component.defaultProps.hasOwnProperty(key)) {\n\t\t\t\t\t\tthis.props[key] = Component.defaultProps[key]\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.props[key] = null\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t})\n}\n\nfunction hyphenate(str) {\n\treturn str.replace(/\\B([A-Z])/g, '-$1').toLowerCase()\n}\n\n","/**\n * Virtual DOM Node\n * @typedef VNode\n * @property {string | function} nodeName The string of the DOM node to create or Component constructor to render\n * @property {Array<VNode | string>} children The children of node\n * @property {string | number | undefined} key The key used to identify this VNode in a list\n * @property {object} attributes The properties of this VNode\n */\nexport const VNode = function VNode() {};\n","/**\n * @typedef {import('./component').Component} Component\n * @typedef {import('./vnode').VNode} VNode\n */\n\n/**\n * Global options\n * @public\n * @typedef Options\n * @property {boolean} [syncComponentUpdates] If `true`, `prop` changes trigger synchronous component updates. Defaults to true.\n * @property {(vnode: VNode) => void} [vnode] Processes all created VNodes.\n * @property {(component: Component) => void} [afterMount] Hook invoked after a component is mounted.\n * @property {(component: Component) => void} [afterUpdate] Hook invoked after the DOM is updated with a component's latest render.\n * @property {(component: Component) => void} [beforeUnmount] Hook invoked immediately before a component is unmounted.\n * @property {(rerender: function) => void} [debounceRendering] Hook invoked whenever a rerender is requested. Can be used to debounce rerenders.\n * @property {(event: Event) => Event | void} [event] Hook invoked before any Omi event listeners. The return value (if any) replaces the native browser event given to event listeners\n */\n\n/** @type {Options}  */\nconst options = {\n\trunTimeComponent: {},\n\tstyleCache: [],\n\tstaticStyleMapping: {}\n};\n\nexport default options;\n","import { h, h as createElement } from './h';\nimport { cloneElement } from './clone-element';\nimport { Component } from './component';\nimport { render } from './render';\nimport { rerender } from './render-queue';\nimport { define } from './define';\nimport { obaa } from './obaa';\nimport options from './options';\n\nfunction createRef() {\n\treturn {};\n}\n\nexport default {\n\th,\n\tcreateElement,\n\tcloneElement,\n\tcreateRef,\n\tComponent,\n\trender,\n\trerender,\n\toptions,\n\tdefine,\n\tobaa\n};\n\nexport {\n\th,\n\tcreateElement,\n\tcloneElement,\n\tcreateRef,\n\tComponent,\n\trender,\n\trerender,\n\toptions,\n\tdefine,\n\tobaa\n};\n\nif(typeof window !== 'undefined'){\n\twindow.Omis = {\n\t\th,\n\t\tcreateElement,\n\t\tcloneElement,\n\t\tcreateRef,\n\t\tComponent,\n\t\trender,\n\t\trerender,\n\t\toptions,\n\t\tdefine,\n\t\tobaa\n\t};\n}\n"]}