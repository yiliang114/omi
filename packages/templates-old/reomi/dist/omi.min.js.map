{"version":3,"sources":["../src/h.js","../src/util.js","../src/clone-element.js","../src/render-queue.js","../src/vdom/index.js","../src/dom/index.js","../src/style.js","../src/vdom/diff.js","../src/define.js","../src/vdom/component-recycler.js","../src/obaa.js","../src/tick.js","../src/observe.js","../src/vdom/component.js","../src/component.js","../src/render.js","../src/rpx.js","../src/model-view.js","../src/class.js","../src/render-to-string.js","../src/children.js","../src/create-context.js","../src/omi.js","../src/vnode.js","../src/options.js","../src/constants.js","../src/tag.js","../src/get-host.js","../node_modules/htm/dist/htm.mjs"],"names":["h","nodeName","attributes","lastSimple","child","simple","i","children","arguments","length","stack","push","pop","String","p","VNode","key","options","vnode","extend","obj","props","applyRef","ref","value","current","isArray","Object","prototype","toString","call","getUse","data","paths","forEach","path","index","getTargetByPath","keys","tempPath","tempVal","args","apply","origin","arr","replace","split","len","cloneElement","slice","enqueueRender","component","_dirty","mapping","hydrating","isSameNodeType","node","splitText","_componentConstructor","normalizedNodeName","toLowerCase","defaultProps","doc","createElementNS","createElement","_ref","createNode","a","b","cssTxt","isSvg","rule","map","o","x","trim","s","Array","Symbol","iterator","_ref3","properties","next","done","_ref2","property","style","parseCSSText","match","cssText","parentNode","removeChild","setAccessor","name","old","IS_NON_DIMENSIONAL$1","test","oldJson","currentJson","changed","ckey","result","setStyles","substring","addEventListener","eventProxy","useCapture","touchStart","touchEnd","_listeners","removeEventListener","removeAttribute","ns","removeAttributeNS","setAttributeNS","setAttribute","e","this","event","___touchY","touches","pageY","Math","abs","changedTouches","pageX","___touchX","document","body","scrollTop","___scrollTop","dispatchEvent","CustomEvent","styleCache","item","ctor","attrName","getCtorName","styleId","prefix","css","g0","g1","g2","g3","addStyle","id","ele","appendClass","head","getElementsByTagName","appendChild","someThingStyles","getElementById","textContent","window","ActiveXObject","styleSheet","addStyleWithoutId","attr","scopeVdom","addStyleToHead","scopedStyle","addScopedAttrStatic","vdom","staticStyleMapping","scoper","diffLevel","c","mounts","shift","isSvgMode","afterMount","installed","diff","dom","context","mountAll","parent","componentRoot","ret","out","prevSvgMode","vnodeName","_component","buildComponentFromVNode","createTextNode","replaceChild","recollectNodeTree","__omiattr_","vchildren","innerDiffNode","ATTR_KEY","fc","nodeValue","isHydrating","j","originalChildren","keyed","keyedLen","childrenLen","vlen","_child","f","__key","vchild","min","undefined","nextSibling","idiff","removeNode","insertBefore","unmountOnly","removeChildren","previousSibling","attrs","use","getPath","updatePath","getUpdatePath","ARRAYTYPE","dataToPath","type","OBJECTTYPE","_objToPath","_arrayToPath","recyclerComponents","Ctor","render","createComponent","constructor","inst","store","Component","initUse","_updatePath","instances","exec","fn","scope","size","nextItem","timeout","fireTick","callbacks","nextTickCallback","update","proxyUpdate","obaa","renderMode","_disable","__ref","setComponentProps","base","beforeInstall","install","componentWillMount","receiveProps","componentWillReceiveProps","prevProps","renderComponent","isChild","state","previousProps","initialChildComponent","previousState","previousContext","prevContext","getDerivedStateFromProps","isUpdate","skip","snapshot","cbase","componentWillUpdate","beforeUpdate","prevState","nextBase","beforeRender","rendered","getChildContext","getSnapshotBeforeUpdate","scopeHost","childComponent","childProps","getNodeProps","toUnmount","_parentComponent","initialBase","baseParent","unmountComponent","t","componentRef","componentDidUpdate","updated","afterUpdate","_renderCallbacks","flushMounts","oldDom","isDirectOwner","isOwner","originalComponent","beforeUnmount","componentWillUnmount","inner","empty","merge","querySelector","Element","nodeType","obsStore","firstChild","extendStoreUpate","prop","val","fixPath","patchs","patch","_this","updateAll","matchGlobalData","globalData","needUpdate","instance","onChange","diffResult","keyA","includePath","indexOf","keyB","pathB","pathA","substr","mpPath","rpx","isNaN","innerWidth","target","define","Constructor","TypeError","_possibleConstructorReturn","Number","self","ReferenceError","_inherits","subClass","superClass","create","enumerable","writable","configurable","setPrototypeOf","__proto__","ModelView","hasOwn","hasOwnProperty","classNames","arg","classes","argType","join","extractClass","_Array$prototype$slic","class","unshift","className","VOID_ELEMENTS","isLargeString","str","JS_TO_CSS","opts","assign","scopedCSS","_renderToString","values","html","pretty","encodeEntities","isComponent","indentChar","__x","cssStr","cssAttr","scopedCSSAttr","v","sortAttributes","hooked","styleObjToCss","attributeHook","sub","isVoid","pieces","indent","childSvgMode","hasLarge","assign$1","htm","r","n","_classCallCheck$1","ARR","concat","y","MAX_SIGNED_31_BIT_INT","on","handler","handlers","off","get","set","newValue","changedBits","onlyChild","createContext","id$1","Provider","_temp","_ret","_len","_inherits$1","_Component","contextProp","emitter","nextProps","process","oldValue","calculateChangedBits","Consumer","_temp2","_this2","_ret2","_len2","_key2","getValue","onUpdate","setState","_possibleConstructorReturn$1","_Component2","observedBits","componentDidMount","_classCallCheck$2","renderContainer","callback","wrap","ContextProvider","container","existing","_preactCompatRendered","renderSubtreeIntoContainer","EmptyComponent","findDOMNode","unmountComponentAtNode","callMethod","ctx","m","shallowDiffers","skipDuplicates","multihook","hooks","propsHook","afterRender","DEV","getInitialState","refs","newComponentHook","PureComponent","isWeb","root","global","runListeners","oEvent","iLstId","iElId","oEvtListeners","oListeners","aEls","aEvts","sEventType","fListener","nElIdx","aElListeners","splice","proto","F","Error","usePromise","Promise","__config__","platform","systemVersion","defer","resolve","then","bind","setTimeout","_observe","doRender","$observer","eventPropArr","isInArray","isString","$observeProps","$observerPath","watch","propertyChangedHandler","propChanged","currentValue","onPropertyChanged","rootName","mock","methods","all","RegExp","triggerStr","cprop","isFunction","toUpperCase","defineProperty","_getRootName","isReactComponent","elementId","fire","componentChange","_willUpdate","detail","forceUpdate","is","_classCallCheck","ignoreLines","u","Map","Children","toArray","only","WeElement","REACT_ELEMENT_TYPE","for","isValidElement","element","unstable_renderSubtreeIntoContainer","getDOMNode","isPureReactComponent","isMounted","shouldComponentUpdate","defineElement","createRef","rerender","createPortal","getHost","tag","omi","Omi","version","module","exports"],"mappings":"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","file":"omi.min.js","sourcesContent":["import { VNode } from './vnode'\nimport options from './options'\n\nconst stack = []\n\n/**\n * JSX/hyperscript reviver.\n * @see http://jasonformat.com/wtf-is-jsx\n * Benchmarks: https://esbench.com/bench/57ee8f8e330ab09900a1a1a0\n *\n * Note: this is exported as both `h()` and `createElement()` for compatibility reasons.\n *\n * Creates a VNode (virtual DOM element). A tree of VNodes can be used as a lightweight representation\n * of the structure of a DOM tree. This structure can be realized by recursively comparing it against\n * the current _actual_ DOM structure, and applying only the differences.\n *\n * `h()`/`createElement()` accepts an element name, a list of attributes/props,\n * and optionally children to append to the element.\n *\n * @example The following DOM tree\n *\n * `<div id=\"foo\" name=\"bar\">Hello!</div>`\n *\n * can be constructed using this function as:\n *\n * `h('div', { id: 'foo', name : 'bar' }, 'Hello!');`\n *\n * @param {string} nodeName\tAn element name. Ex: `div`, `a`, `span`, etc.\n * @param {Object} attributes\tAny attributes/props to set on the created element.\n * @param rest\t\t\tAdditional arguments are taken to be children to append. Can be infinitely nested Arrays.\n *\n * @public\n */\nexport function h(nodeName, attributes) {\n  let children = [],\n    lastSimple,\n    child,\n    simple,\n    i\n  for (i = arguments.length; i-- > 2; ) {\n    stack.push(arguments[i])\n  }\n  if (attributes && attributes.children != null) {\n    if (!stack.length) stack.push(attributes.children)\n    delete attributes.children\n  }\n  while (stack.length) {\n    if ((child = stack.pop()) && child.pop !== undefined) {\n      for (i = child.length; i--; ) stack.push(child[i])\n    } else {\n      if (typeof child === 'boolean') child = null\n\n      if ((simple = typeof nodeName !== 'function')) {\n        if (child == null) child = ''\n        else if (typeof child === 'number') child = String(child)\n        else if (typeof child !== 'string') simple = false\n      }\n\n      if (simple && lastSimple) {\n        children[children.length - 1] += child\n      } else if (children.length === 0) {\n        children = [child]\n      } else {\n        children.push(child)\n      }\n\n      lastSimple = simple\n    }\n  }\n\n  let p = new VNode()\n  p.nodeName = nodeName\n  p.children = children\n  p.attributes = attributes == null ? undefined : attributes\n  p.key = attributes == null ? undefined : attributes.key\n\n  // if a \"vnode hook\" is defined, pass every created VNode to it\n  if (options.vnode !== undefined) options.vnode(p)\n\n  return p\n}\n","'use strict'\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols\nvar hasOwnProperty = Object.prototype.hasOwnProperty\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable\n\nfunction toObject(val) {\n  if (val === null || val === undefined) {\n    throw new TypeError('Object.assign cannot be called with null or undefined')\n  }\n\n  return Object(val)\n}\n\nexport function assign(target, source) {\n  var from\n  var to = toObject(target)\n  var symbols\n\n  for (var s = 1; s < arguments.length; s++) {\n    from = Object(arguments[s])\n\n    for (var key in from) {\n      if (hasOwnProperty.call(from, key)) {\n        to[key] = from[key]\n      }\n    }\n\n    if (getOwnPropertySymbols) {\n      symbols = getOwnPropertySymbols(from)\n      for (var i = 0; i < symbols.length; i++) {\n        if (propIsEnumerable.call(from, symbols[i])) {\n          to[symbols[i]] = from[symbols[i]]\n        }\n      }\n    }\n  }\n\n  return to\n}\n\nif (typeof Element !== 'undefined' && !Element.prototype.addEventListener) {\n  var oListeners = {}\n  function runListeners(oEvent) {\n    if (!oEvent) {\n      oEvent = window.event\n    }\n    for (\n      var iLstId = 0, iElId = 0, oEvtListeners = oListeners[oEvent.type];\n      iElId < oEvtListeners.aEls.length;\n      iElId++\n    ) {\n      if (oEvtListeners.aEls[iElId] === this) {\n        for (iLstId; iLstId < oEvtListeners.aEvts[iElId].length; iLstId++) {\n          oEvtListeners.aEvts[iElId][iLstId].call(this, oEvent)\n        }\n        break\n      }\n    }\n  }\n  Element.prototype.addEventListener = function(\n    sEventType,\n    fListener /*, useCapture (will be ignored!) */\n  ) {\n    if (oListeners.hasOwnProperty(sEventType)) {\n      var oEvtListeners = oListeners[sEventType]\n      for (\n        var nElIdx = -1, iElId = 0;\n        iElId < oEvtListeners.aEls.length;\n        iElId++\n      ) {\n        if (oEvtListeners.aEls[iElId] === this) {\n          nElIdx = iElId\n          break\n        }\n      }\n      if (nElIdx === -1) {\n        oEvtListeners.aEls.push(this)\n        oEvtListeners.aEvts.push([fListener])\n        this['on' + sEventType] = runListeners\n      } else {\n        var aElListeners = oEvtListeners.aEvts[nElIdx]\n        if (this['on' + sEventType] !== runListeners) {\n          aElListeners.splice(0)\n          this['on' + sEventType] = runListeners\n        }\n        for (var iLstId = 0; iLstId < aElListeners.length; iLstId++) {\n          if (aElListeners[iLstId] === fListener) {\n            return\n          }\n        }\n        aElListeners.push(fListener)\n      }\n    } else {\n      oListeners[sEventType] = { aEls: [this], aEvts: [[fListener]] }\n      this['on' + sEventType] = runListeners\n    }\n  }\n  Element.prototype.removeEventListener = function(\n    sEventType,\n    fListener /*, useCapture (will be ignored!) */\n  ) {\n    if (!oListeners.hasOwnProperty(sEventType)) {\n      return\n    }\n    var oEvtListeners = oListeners[sEventType]\n    for (\n      var nElIdx = -1, iElId = 0;\n      iElId < oEvtListeners.aEls.length;\n      iElId++\n    ) {\n      if (oEvtListeners.aEls[iElId] === this) {\n        nElIdx = iElId\n        break\n      }\n    }\n    if (nElIdx === -1) {\n      return\n    }\n    for (\n      var iLstId = 0, aElListeners = oEvtListeners.aEvts[nElIdx];\n      iLstId < aElListeners.length;\n      iLstId++\n    ) {\n      if (aElListeners[iLstId] === fListener) {\n        aElListeners.splice(iLstId, 1)\n      }\n    }\n  }\n}\n\nif (typeof Object.create !== 'function') {\n  Object.create = function(proto, propertiesObject) {\n    if (typeof proto !== 'object' && typeof proto !== 'function') {\n      throw new TypeError('Object prototype may only be an Object: ' + proto)\n    } else if (proto === null) {\n      throw new Error(\n        \"This browser's implementation of Object.create is a shim and doesn't support 'null' as the first argument.\"\n      )\n    }\n\n    // if (typeof propertiesObject != 'undefined') {\n    //     throw new Error(\"This browser's implementation of Object.create is a shim and doesn't support a second argument.\");\n    // }\n\n    function F() {}\n    F.prototype = proto\n\n    return new F()\n  }\n}\n\nif (!String.prototype.trim) {\n  String.prototype.trim = function() {\n    return this.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '')\n  }\n}\n\n/**\n *  Copy all properties from `props` onto `obj`.\n *  @param {Object} obj\t\tObject onto which properties should be copied.\n *  @param {Object} props\tObject from which to copy properties.\n *  @returns obj\n *  @private\n */\nexport function extend(obj, props) {\n  for (let i in props) obj[i] = props[i]\n  return obj\n}\n\n/** Invoke or update a ref, depending on whether it is a function or object ref.\n *  @param {object|function} [ref=null]\n *  @param {any} [value]\n */\nexport function applyRef(ref, value) {\n  if (ref != null) {\n    if (typeof ref == 'function') ref(value)\n    else ref.current = value\n  }\n}\n\n/**\n * Call a function asynchronously, as soon as possible. Makes\n * use of HTML Promise to schedule the callback if available,\n * otherwise falling back to `setTimeout` (mainly for IE<11).\n *\n * @param {Function} callback\n */\n\nlet usePromise = typeof Promise == 'function'\n\n// for native\nif (\n  typeof document !== 'object' &&\n  typeof global !== 'undefined' &&\n  global.__config__\n) {\n  if (global.__config__.platform === 'android') {\n    usePromise = true\n  } else {\n    let systemVersion =\n      (global.__config__.systemVersion &&\n        global.__config__.systemVersion.split('.')[0]) ||\n      0\n    if (systemVersion > 8) {\n      usePromise = true\n    }\n  }\n}\n\nexport const defer = usePromise\n  ? Promise.resolve().then.bind(Promise.resolve())\n  : setTimeout\n\nexport function isArray(obj) {\n  return Object.prototype.toString.call(obj) === '[object Array]'\n}\n\nexport function nProps(props) {\n  if (!props || isArray(props)) return {}\n  const result = {}\n  Object.keys(props).forEach(key => {\n    result[key] = props[key].value\n  })\n  return result\n}\n\nexport function getUse(data, paths) {\n  const obj = []\n  paths.forEach((path, index) => {\n    const isPath = typeof path === 'string'\n    if (isPath) {\n      obj[index] = getTargetByPath(data, path)\n    } else {\n      const key = Object.keys(path)[0]\n      const value = path[key]\n      if (typeof value === 'string') {\n        obj[index] = getTargetByPath(data, value)\n      } else {\n        const tempPath = value[0]\n        if (typeof tempPath === 'string') {\n          const tempVal = getTargetByPath(data, tempPath)\n          obj[index] = value[1] ? value[1](tempVal) : tempVal\n        } else {\n          const args = []\n          tempPath.forEach(path => {\n            args.push(getTargetByPath(data, path))\n          })\n          obj[index] = value[1].apply(null, args)\n        }\n      }\n      obj[key] = obj[index]\n    }\n  })\n  return obj\n}\n\nexport function getTargetByPath(origin, path) {\n  const arr = path\n    .replace(/]/g, '')\n    .replace(/\\[/g, '.')\n    .split('.')\n  let current = origin\n  for (let i = 0, len = arr.length; i < len; i++) {\n    current = current[arr[i]]\n  }\n  return current\n}\n","import { extend } from './util'\nimport { h } from './h'\n\n/**\n * Clones the given VNode, optionally adding attributes/props and replacing its\n * children.\n * @param {import('./vnode').VNode} vnode The virtual DOM element to clone\n * @param {object} props Attributes/props to add when cloning\n * @param {Array<import('./vnode').VNode>} [rest] Any additional arguments will be used as replacement\n *  children.\n */\nexport function cloneElement(vnode, props) {\n  return h(\n    vnode.nodeName,\n    extend(extend({}, vnode.attributes), props),\n    arguments.length > 2 ? [].slice.call(arguments, 2) : vnode.children\n  )\n}\n","import options from './options'\nimport { defer } from './util'\nimport { renderComponent } from './vdom/component'\n\n/**\n * Managed queue of dirty components to be re-rendered\n * @type {Array<import('./component').Component>}\n */\nlet items = []\n\n/**\n * Enqueue a rerender of a component\n * @param {import('./component').Component} component The component to rerender\n */\nexport function enqueueRender(component) {\n  if (\n    !component._dirty &&\n    (component._dirty = true) &&\n    items.push(component) == 1\n  ) {\n    ;(options.debounceRendering || defer)(rerender)\n  }\n}\n\n/** Rerender all enqueued dirty components */\nexport function rerender() {\n  let p\n  while ((p = items.pop())) {\n    if (p._dirty) renderComponent(p)\n  }\n}\n","import { extend } from '../util'\nimport options from '../options'\n\nconst mapping = options.mapping\n/**\n * Check if two nodes are equivalent.\n *\n * @param {Node} node\t\t\tDOM Node to compare\n * @param {VNode} vnode\t\t\tVirtual DOM node to compare\n * @param {boolean} [hydrating=false]\tIf true, ignores component constructors when comparing.\n * @private\n */\nexport function isSameNodeType(node, vnode, hydrating) {\n  if (typeof vnode === 'string' || typeof vnode === 'number') {\n    return node.splitText !== undefined\n  }\n  if (typeof vnode.nodeName === 'string') {\n    var ctor = mapping[vnode.nodeName]\n    if (ctor) {\n      return hydrating || node._componentConstructor === ctor\n    }\n    return !node._componentConstructor && isNamedNode(node, vnode.nodeName)\n  }\n  return hydrating || node._componentConstructor === vnode.nodeName\n}\n\n/**\n * Check if an Element has a given nodeName, case-insensitively.\n *\n * @param {Element} node\tA DOM Element to inspect the name of.\n * @param {String} nodeName\tUnnormalized name to compare against.\n */\nexport function isNamedNode(node, nodeName) {\n  return (\n    node.normalizedNodeName === nodeName ||\n    node.nodeName.toLowerCase() === nodeName.toLowerCase()\n  )\n}\n\n/**\n * Reconstruct Component-style `props` from a VNode.\n * Ensures default/fallback values from `defaultProps`:\n * Own-properties of `defaultProps` not present in `vnode.attributes` are added.\n *\n * @param {VNode} vnode\n * @returns {Object} props\n */\nexport function getNodeProps(vnode) {\n  let props = extend({}, vnode.attributes)\n  props.children = vnode.children\n\n  let defaultProps = vnode.nodeName.defaultProps\n  if (defaultProps !== undefined) {\n    for (let i in defaultProps) {\n      if (props[i] === undefined) {\n        props[i] = defaultProps[i]\n      }\n    }\n  }\n\n  return props\n}\n","import { IS_NON_DIMENSIONAL } from '../constants'\nimport { applyRef } from '../util'\nimport options from '../options'\n\n/** Create an element with the given nodeName.\n *\t@param {String} nodeName\n *\t@param {Boolean} [isSvg=false]\tIf `true`, creates an element within the SVG namespace.\n *\t@returns {Element} node\n */\nexport function createNode(nodeName, isSvg) {\n  let node = isSvg\n    ? options.doc.createElementNS('http://www.w3.org/2000/svg', nodeName)\n    : options.doc.createElement(nodeName)\n  node.normalizedNodeName = nodeName\n  return node\n}\n\nfunction parseCSSText(cssText) {\n  let cssTxt = cssText.replace(/\\/\\*(.|\\s)*?\\*\\//g, ' ').replace(/\\s+/g, ' ')\n  let style = {},\n    [a, b, rule] = cssTxt.match(/ ?(.*?) ?{([^}]*)}/) || [a, b, cssTxt]\n  let cssToJs = s => s.replace(/\\W+\\w/g, match => match.slice(-1).toUpperCase())\n  let properties = rule\n    .split(';')\n    .map(o => o.split(':').map(x => x && x.trim()))\n  for (let [property, value] of properties) style[cssToJs(property)] = value\n  return style\n}\n\n/** Remove a child node from its parent if attached.\n *\t@param {Element} node\t\tThe node to remove\n */\nexport function removeNode(node) {\n  let parentNode = node.parentNode\n  if (parentNode) parentNode.removeChild(node)\n}\n\n/** Set a named attribute on the given Node, with special behavior for some names and event handlers.\n *\tIf `value` is `null`, the attribute/handler will be removed.\n *\t@param {Element} node\tAn element to mutate\n *\t@param {string} name\tThe name/key to set, such as an event or attribute name\n *\t@param {any} old\tThe last value that was set for this name/node pair\n *\t@param {any} value\tAn attribute value, such as a function to be used as an event handler\n *\t@param {Boolean} isSvg\tAre we currently diffing inside an svg?\n *\t@private\n */\nexport function setAccessor(node, name, old, value, isSvg) {\n  if (name === 'className') name = 'class'\n\n  if (name === 'key') {\n    // ignore\n  } else if (name === 'ref') {\n    applyRef(old, null)\n    applyRef(value, node)\n  } else if (name === 'class' && !isSvg) {\n    node.className = value || ''\n  } else if (name === 'style') {\n    if (options.isWeb) {\n      if (!value || typeof value === 'string' || typeof old === 'string') {\n        node.style.cssText = value || ''\n      }\n      if (value && typeof value === 'object') {\n        if (typeof old !== 'string') {\n          for (let i in old) if (!(i in value)) node.style[i] = ''\n        }\n        for (let i in value) {\n          node.style[i] =\n            typeof value[i] === 'number' && IS_NON_DIMENSIONAL.test(i) === false\n              ? value[i] + 'px'\n              : value[i]\n        }\n      }\n    } else {\n      let oldJson = old,\n        currentJson = value\n      if (typeof old === 'string') {\n        oldJson = parseCSSText(old)\n      }\n      if (typeof value == 'string') {\n        currentJson = parseCSSText(value)\n      }\n\n      let result = {},\n        changed = false\n\n      if (oldJson) {\n        for (let key in oldJson) {\n          if (typeof currentJson == 'object' && !(key in currentJson)) {\n            result[key] = ''\n            changed = true\n          }\n        }\n\n        for (let ckey in currentJson) {\n          if (currentJson[ckey] !== oldJson[ckey]) {\n            result[ckey] = currentJson[ckey]\n            changed = true\n          }\n        }\n\n        if (changed) {\n          node.setStyles(result)\n        }\n      } else {\n        node.setStyles(currentJson)\n      }\n    }\n  } else if (name === 'dangerouslySetInnerHTML') {\n    if (value) node.innerHTML = value.__html || ''\n  } else if (name[0] == 'o' && name[1] == 'n') {\n    let useCapture = name !== (name = name.replace(/Capture$/, ''))\n    name = name.toLowerCase().substring(2)\n    if (value) {\n      if (!old) {\n        node.addEventListener(name, eventProxy, useCapture)\n        if (name == 'tap') {\n          node.addEventListener('touchstart', touchStart, useCapture)\n          node.addEventListener('touchend', touchEnd, useCapture)\n        }\n      }\n    } else {\n      node.removeEventListener(name, eventProxy, useCapture)\n      if (name == 'tap') {\n        node.removeEventListener('touchstart', touchStart, useCapture)\n        node.removeEventListener('touchend', touchEnd, useCapture)\n      }\n    }\n    ;(node._listeners || (node._listeners = {}))[name] = value\n  } else if (name !== 'list' && name !== 'type' && !isSvg && name in node) {\n    // Attempt to set a DOM property to the given value.\n    // IE & FF throw for certain property-value combinations.\n    try {\n      node[name] = value == null ? '' : value\n    } catch (e) {}\n    if ((value == null || value === false) && name != 'spellcheck')\n      node.removeAttribute(name)\n  } else {\n    let ns = isSvg && name !== (name = name.replace(/^xlink:?/, ''))\n    if (value == null || value === false) {\n      if (ns)\n        node.removeAttributeNS(\n          'http://www.w3.org/1999/xlink',\n          name.toLowerCase()\n        )\n      else node.removeAttribute(name)\n    } else if (typeof value !== 'function') {\n      if (ns)\n        node.setAttributeNS(\n          'http://www.w3.org/1999/xlink',\n          name.toLowerCase(),\n          value\n        )\n      else node.setAttribute(name, value)\n    }\n  }\n}\n\n/** Proxy an event to hooked event handlers\n *\t@private\n */\nfunction eventProxy(e) {\n  return this._listeners[e.type]((options.event && options.event(e)) || e)\n}\n\nfunction touchStart(e) {\n  this.___touchX = e.touches[0].pageX\n  this.___touchY = e.touches[0].pageY\n  this.___scrollTop = document.body.scrollTop\n}\n\nfunction touchEnd(e) {\n  if (\n    Math.abs(e.changedTouches[0].pageX - this.___touchX) < 30 &&\n    Math.abs(e.changedTouches[0].pageY - this.___touchY) < 30 &&\n    Math.abs(document.body.scrollTop - this.___scrollTop) < 30\n  ) {\n    this.dispatchEvent(new CustomEvent('tap', { detail: e }))\n  }\n}\n","import options from './options'\n\nlet styleId = 0\n\nexport function getCtorName(ctor) {\n  for (let i = 0, len = options.styleCache.length; i < len; i++) {\n    let item = options.styleCache[i]\n\n    if (item.ctor === ctor) {\n      return item.attrName\n    }\n  }\n\n  let attrName = 's' + styleId\n  options.styleCache.push({ ctor, attrName })\n  styleId++\n\n  return attrName\n}\n\n// many thanks to https://github.com/thomaspark/scoper/\nexport function scoper(css, prefix) {\n  prefix = '[' + prefix.toLowerCase() + ']'\n  // https://www.w3.org/TR/css-syntax-3/#lexical\n  css = css.replace(/\\/\\*[^*]*\\*+([^/][^*]*\\*+)*\\//g, '')\n  // eslint-disable-next-line\n    let re = new RegExp('([^\\r\\n,{}:]+)(:[^\\r\\n,{}]+)?(,(?=[^{}]*{)|\\s*{)', 'g')\n  /**\n   * Example:\n   *\n   * .classname::pesudo { color:red }\n   *\n   * g1 is normal selector `.classname`\n   * g2 is pesudo class or pesudo element\n   * g3 is the suffix\n   */\n  css = css.replace(re, (g0, g1, g2, g3) => {\n    if (typeof g2 === 'undefined') {\n      g2 = ''\n    }\n\n    /* eslint-ignore-next-line */\n    if (\n      g1.match(\n        /^\\s*(@media|\\d+%?|@-webkit-keyframes|@keyframes|to|from|@font-face)/\n      )\n    ) {\n      return g1 + g2 + g3\n    }\n\n    let appendClass = g1.replace(/(\\s*)$/, '') + prefix + g2\n    //let prependClass = prefix + ' ' + g1.trim() + g2;\n\n    return appendClass + g3\n    //return appendClass + ',' + prependClass + g3;\n  })\n\n  return css\n}\n\nexport function addStyle(cssText, id) {\n  id = id.toLowerCase()\n  let ele = document.getElementById(id)\n  let head = document.getElementsByTagName('head')[0]\n  if (ele && ele.parentNode === head) {\n    head.removeChild(ele)\n  }\n\n  let someThingStyles = document.createElement('style')\n  head.appendChild(someThingStyles)\n  someThingStyles.setAttribute('type', 'text/css')\n  someThingStyles.setAttribute('id', id)\n  if (window.ActiveXObject) {\n    someThingStyles.styleSheet.cssText = cssText\n  } else {\n    someThingStyles.textContent = cssText\n  }\n}\n\nexport function addStyleWithoutId(cssText) {\n  let head = document.getElementsByTagName('head')[0]\n  let someThingStyles = document.createElement('style')\n  head.appendChild(someThingStyles)\n  someThingStyles.setAttribute('type', 'text/css')\n\n  if (window.ActiveXObject) {\n    someThingStyles.styleSheet.cssText = cssText\n  } else {\n    someThingStyles.textContent = cssText\n  }\n}\n\nexport function addScopedAttrStatic(vdom, attr) {\n  if (options.scopedStyle) {\n    scopeVdom(attr, vdom)\n  }\n}\n\nexport function addStyleToHead(style, attr) {\n  if (options.scopedStyle) {\n    if (!options.staticStyleMapping[attr]) {\n      addStyle(scoper(style, attr), attr)\n      options.staticStyleMapping[attr] = true\n    }\n  } else if (!options.staticStyleMapping[attr]) {\n    addStyleWithoutId(style)\n    options.staticStyleMapping[attr] = true\n  }\n}\n\nexport function scopeVdom(attr, vdom) {\n  if (typeof vdom === 'object') {\n    vdom.attributes = vdom.attributes || {}\n    vdom.attributes[attr] = ''\n    vdom.css = vdom.css || {}\n    vdom.css[attr] = ''\n    vdom.children.forEach(child => scopeVdom(attr, child))\n  }\n}\n\nexport function scopeHost(vdom, css) {\n  if (typeof vdom === 'object' && css) {\n    vdom.attributes = vdom.attributes || {}\n    for (let key in css) {\n      vdom.attributes[key] = ''\n    }\n  }\n}\n","import { ATTR_KEY } from '../constants'\nimport { isSameNodeType, isNamedNode } from './index'\nimport { buildComponentFromVNode } from './component'\nimport { createNode, setAccessor } from '../dom/index'\nimport { unmountComponent } from './component'\nimport options from '../options'\nimport { applyRef } from '../util'\nimport { removeNode } from '../dom/index'\nimport { isArray } from '../util'\nimport { addStyleToHead, getCtorName } from '../style'\n/** Queue of components that have been mounted and are awaiting componentDidMount */\nexport const mounts = []\n\n/** Diff recursion count, used to track the end of the diff cycle. */\nexport let diffLevel = 0\n\n/** Global flag indicating if the diff is currently within an SVG */\nlet isSvgMode = false\n\n/** Global flag indicating if the diff is performing hydration */\nlet hydrating = false\n\n/** Invoke queued componentDidMount lifecycle methods */\nexport function flushMounts() {\n  let c\n  while ((c = mounts.shift())) {\n    if (options.afterMount) options.afterMount(c)\n    if (c.componentDidMount) c.componentDidMount()\n    if (c.installed) c.installed()\n    if (c.constructor.css || c.css) {\n      addStyleToHead(\n        c.constructor.css\n          ? c.constructor.css\n          : typeof c.css === 'function'\n            ? c.css()\n            : c.css,\n        '_s' + getCtorName(c.constructor)\n      )\n    }\n  }\n}\n\n/** Apply differences in a given vnode (and it's deep children) to a real DOM Node.\n *\t@param {Element} [dom=null]\t\tA DOM node to mutate into the shape of the `vnode`\n *\t@param {VNode} vnode\t\t\tA VNode (with descendants forming a tree) representing the desired DOM structure\n *\t@returns {Element} dom\t\t\tThe created/mutated element\n *\t@private\n */\nexport function diff(dom, vnode, context, mountAll, parent, componentRoot) {\n  // diffLevel having been 0 here indicates initial entry into the diff (not a subdiff)\n  if (!diffLevel++) {\n    // when first starting the diff, check if we're diffing an SVG or within an SVG\n    isSvgMode = parent != null && parent.ownerSVGElement !== undefined\n\n    // hydration is indicated by the existing element to be diffed not having a prop cache\n    hydrating = dom != null && !(ATTR_KEY in dom)\n  }\n  let ret\n\n  if (isArray(vnode)) {\n    vnode = {\n      nodeName: 'span',\n      children: vnode\n    }\n  }\n\n  ret = idiff(dom, vnode, context, mountAll, componentRoot)\n  // append the element if its a new parent\n  if (parent && ret.parentNode !== parent) parent.appendChild(ret)\n\n  // diffLevel being reduced to 0 means we're exiting the diff\n  if (!--diffLevel) {\n    hydrating = false\n    // invoke queued componentDidMount lifecycle methods\n    if (!componentRoot) flushMounts()\n  }\n\n  return ret\n}\n\n/** Internals of `diff()`, separated to allow bypassing diffLevel / mount flushing. */\nfunction idiff(dom, vnode, context, mountAll, componentRoot) {\n  let out = dom,\n    prevSvgMode = isSvgMode\n\n  // empty values (null, undefined, booleans) render as empty Text nodes\n  if (vnode == null || typeof vnode === 'boolean') vnode = ''\n\n  // If the VNode represents a Component, perform a component diff:\n  let vnodeName = vnode.nodeName\n  if (options.mapping[vnodeName]) {\n    vnode.nodeName = options.mapping[vnodeName]\n    return buildComponentFromVNode(dom, vnode, context, mountAll)\n  }\n\n  // Fast case: Strings & Numbers create/update Text nodes.\n  if (typeof vnode === 'string' || typeof vnode === 'number') {\n    // update if it's already a Text node:\n    if (\n      dom &&\n      dom.splitText !== undefined &&\n      dom.parentNode &&\n      (!dom._component || componentRoot)\n    ) {\n      /* istanbul ignore if */ /* Browser quirk that can't be covered: https://github.com/developit/preact/commit/fd4f21f5c45dfd75151bd27b4c217d8003aa5eb9 */\n      if (dom.nodeValue != vnode) {\n        dom.nodeValue = vnode\n      }\n    } else {\n      // it wasn't a Text node: replace it with one and recycle the old Element\n      out = document.createTextNode(vnode)\n      if (dom) {\n        if (dom.parentNode) dom.parentNode.replaceChild(out, dom)\n        recollectNodeTree(dom, true)\n      }\n    }\n\n    //ie8 error\n    try {\n      out[ATTR_KEY] = true\n    } catch (e) {}\n\n    return out\n  }\n\n  if (typeof vnodeName === 'function') {\n    return buildComponentFromVNode(dom, vnode, context, mountAll)\n  }\n\n  // Tracks entering and exiting SVG namespace when descending through the tree.\n  isSvgMode =\n    vnodeName === 'svg'\n      ? true\n      : vnodeName === 'foreignObject'\n      ? false\n      : isSvgMode\n\n  // If there's no existing element or it's the wrong type, create a new one:\n  vnodeName = String(vnodeName)\n  if (!dom || !isNamedNode(dom, vnodeName)) {\n    out = createNode(vnodeName, isSvgMode)\n\n    if (dom) {\n      // move children into the replacement node\n      while (dom.firstChild) out.appendChild(dom.firstChild)\n\n      // if the previous Element was mounted into the DOM, replace it inline\n      if (dom.parentNode) dom.parentNode.replaceChild(out, dom)\n\n      // recycle the old element (skips non-Element node types)\n      recollectNodeTree(dom, true)\n    }\n  }\n\n  let fc = out.firstChild,\n    props = out[ATTR_KEY],\n    vchildren = vnode.children\n\n  if (props == null) {\n    props = out[ATTR_KEY] = {}\n    for (let a = out.attributes, i = a.length; i--; )\n      props[a[i].name] = a[i].value\n  }\n\n  // Optimization: fast-path for elements containing a single TextNode:\n  if (\n    !hydrating &&\n    vchildren &&\n    vchildren.length === 1 &&\n    typeof vchildren[0] === 'string' &&\n    fc != null &&\n    fc.splitText !== undefined &&\n    fc.nextSibling == null\n  ) {\n    if (fc.nodeValue != vchildren[0]) {\n      fc.nodeValue = vchildren[0]\n    }\n  }\n  // otherwise, if there are existing or new children, diff them:\n  else if ((vchildren && vchildren.length) || fc != null) {\n    innerDiffNode(\n      out,\n      vchildren,\n      context,\n      mountAll,\n      hydrating || props.dangerouslySetInnerHTML != null\n    )\n  }\n\n  // Apply attributes/props from VNode to the DOM Element:\n  diffAttributes(out, vnode.attributes, props)\n\n  // restore previous SVG mode: (in case we're exiting an SVG namespace)\n  isSvgMode = prevSvgMode\n\n  return out\n}\n\n/** Apply child and attribute changes between a VNode and a DOM Node to the DOM.\n *\t@param {Element} dom\t\t\tElement whose children should be compared & mutated\n *\t@param {Array} vchildren\t\tArray of VNodes to compare to `dom.childNodes`\n *\t@param {Object} context\t\t\tImplicitly descendant context object (from most recent `getChildContext()`)\n *\t@param {Boolean} mountAll\n *\t@param {Boolean} isHydrating\tIf `true`, consumes externally created elements similar to hydration\n */\nfunction innerDiffNode(dom, vchildren, context, mountAll, isHydrating) {\n  let originalChildren = dom.childNodes,\n    children = [],\n    keyed = {},\n    keyedLen = 0,\n    min = 0,\n    len = originalChildren.length,\n    childrenLen = 0,\n    vlen = vchildren ? vchildren.length : 0,\n    j,\n    c,\n    f,\n    vchild,\n    child\n\n  // Build up a map of keyed children and an Array of unkeyed children:\n  if (len !== 0) {\n    for (let i = 0; i < len; i++) {\n      let child = originalChildren[i],\n        props = child[ATTR_KEY],\n        key =\n          vlen && props\n            ? child._component\n              ? child._component.__key\n              : props.key\n            : null\n      if (key != null) {\n        keyedLen++\n        keyed[key] = child\n      } else if (\n        props ||\n        (child.splitText !== undefined\n          ? isHydrating\n            ? child.nodeValue.trim()\n            : true\n          : isHydrating)\n      ) {\n        children[childrenLen++] = child\n      }\n    }\n  }\n\n  if (vlen !== 0) {\n    for (let i = 0; i < vlen; i++) {\n      vchild = vchildren[i]\n      child = null\n\n      // attempt to find a node based on key matching\n      let key = vchild.key\n      if (key != null) {\n        if (keyedLen && keyed[key] !== undefined) {\n          child = keyed[key]\n          keyed[key] = undefined\n          keyedLen--\n        }\n      }\n      // attempt to pluck a node of the same type from the existing children\n      else if (min < childrenLen) {\n        for (j = min; j < childrenLen; j++) {\n          if (\n            children[j] !== undefined &&\n            isSameNodeType((c = children[j]), vchild, isHydrating)\n          ) {\n            child = c\n            children[j] = undefined\n            if (j === childrenLen - 1) childrenLen--\n            if (j === min) min++\n            break\n          }\n        }\n      }\n\n      // morph the matched/found/created DOM child to match vchild (deep)\n      child = idiff(child, vchild, context, mountAll)\n\n      f = originalChildren[i]\n      if (child && child !== dom && child !== f) {\n        if (f == null) {\n          dom.appendChild(child)\n        } else if (child === f.nextSibling) {\n          removeNode(f)\n        } else {\n          dom.insertBefore(child, f)\n        }\n      }\n    }\n  }\n\n  // remove unused keyed children:\n  if (keyedLen) {\n    for (let i in keyed)\n      if (keyed[i] !== undefined) recollectNodeTree(keyed[i], false)\n  }\n\n  // remove orphaned unkeyed children:\n  while (min <= childrenLen) {\n    if ((child = children[childrenLen--]) !== undefined)\n      recollectNodeTree(child, false)\n  }\n}\n\n/** Recursively recycle (or just unmount) a node and its descendants.\n *\t@param {Node} node\t\t\t\t\t\tDOM node to start unmount/removal from\n *\t@param {Boolean} [unmountOnly=false]\tIf `true`, only triggers unmount lifecycle, skips removal\n */\nexport function recollectNodeTree(node, unmountOnly) {\n  let component = node._component\n  if (component) {\n    // if node is owned by a Component, unmount that component (ends up recursing back here)\n    unmountComponent(component)\n  } else {\n    // If the node's VNode had a ref function, invoke it with null here.\n    // (this is part of the React spec, and smart for unsetting references)\n    if (node[ATTR_KEY] != null) applyRef(node[ATTR_KEY].ref, null)\n\n    if (unmountOnly === false || node[ATTR_KEY] == null) {\n      removeNode(node)\n    }\n\n    removeChildren(node)\n  }\n}\n\n/** Recollect/unmount all children.\n *\t- we use .lastChild here because it causes less reflow than .firstChild\n *\t- it's also cheaper than accessing the .childNodes Live NodeList\n */\nexport function removeChildren(node) {\n  node = node.lastChild\n  while (node) {\n    let next = node.previousSibling\n    recollectNodeTree(node, true)\n    node = next\n  }\n}\n\n/** Apply differences in attributes from a VNode to the given DOM Element.\n *\t@param {Element} dom\t\tElement with attributes to diff `attrs` against\n *\t@param {Object} attrs\t\tThe desired end-state key-value attribute pairs\n *\t@param {Object} old\t\t\tCurrent/previous attributes (from previous VNode or element's prop cache)\n */\nfunction diffAttributes(dom, attrs, old) {\n  let name\n\n  // remove attributes no longer present on the vnode by setting them to undefined\n  for (name in old) {\n    if (!(attrs && attrs[name] != null) && old[name] != null) {\n      setAccessor(dom, name, old[name], (old[name] = undefined), isSvgMode)\n    }\n  }\n\n  // add new & update changed attributes\n  for (name in attrs) {\n    if (\n      name !== 'children' &&\n      name !== 'innerHTML' &&\n      (!(name in old) ||\n        attrs[name] !==\n          (name === 'value' || name === 'checked' ? dom[name] : old[name]))\n    ) {\n      setAccessor(dom, name, old[name], (old[name] = attrs[name]), isSvgMode)\n    }\n  }\n}\n","import options from './options'\n\nconst OBJECTTYPE = '[object Object]'\nconst ARRAYTYPE = '[object Array]'\n\nexport function define(name, ctor) {\n  options.mapping[name] = ctor\n  if (ctor.use) {\n    ctor.updatePath = getPath(ctor.use)\n  } else if (ctor.data) {\n    //Compatible with older versions\n    ctor.updatePath = getUpdatePath(ctor.data)\n  }\n}\n\nexport function getPath(obj) {\n  if (Object.prototype.toString.call(obj) === '[object Array]') {\n    const result = {}\n    obj.forEach(item => {\n      if (typeof item === 'string') {\n        result[item] = true\n      } else {\n        const tempPath = item[Object.keys(item)[0]]\n        if (typeof tempPath === 'string') {\n          result[tempPath] = true\n        } else {\n          if (typeof tempPath[0] === 'string') {\n            result[tempPath[0]] = true\n          } else {\n            tempPath[0].forEach(path => (result[path] = true))\n          }\n        }\n      }\n    })\n    return result\n  } else {\n    return getUpdatePath(obj)\n  }\n}\n\nexport function getUpdatePath(data) {\n  const result = {}\n  dataToPath(data, result)\n  return result\n}\n\nfunction dataToPath(data, result) {\n  Object.keys(data).forEach(key => {\n    result[key] = true\n    const type = Object.prototype.toString.call(data[key])\n    if (type === OBJECTTYPE) {\n      _objToPath(data[key], key, result)\n    } else if (type === ARRAYTYPE) {\n      _arrayToPath(data[key], key, result)\n    }\n  })\n}\n\nfunction _objToPath(data, path, result) {\n  Object.keys(data).forEach(key => {\n    result[path + '.' + key] = true\n    delete result[path]\n    const type = Object.prototype.toString.call(data[key])\n    if (type === OBJECTTYPE) {\n      _objToPath(data[key], path + '.' + key, result)\n    } else if (type === ARRAYTYPE) {\n      _arrayToPath(data[key], path + '.' + key, result)\n    }\n  })\n}\n\nfunction _arrayToPath(data, path, result) {\n  data.forEach((item, index) => {\n    result[path + '[' + index + ']'] = true\n    delete result[path]\n    const type = Object.prototype.toString.call(item)\n    if (type === OBJECTTYPE) {\n      _objToPath(item, path + '[' + index + ']', result)\n    } else if (type === ARRAYTYPE) {\n      _arrayToPath(item, path + '[' + index + ']', result)\n    }\n  })\n}\n","import Component from '../component'\nimport { getUse } from '../util'\nimport { getPath } from '../define'\n\n/**\n * Retains a pool of Components for re-use.\n * @type {Component[]}\n * @private\n */\nexport const recyclerComponents = []\n\n/**\n * Create a component. Normalizes differences between PFC's and classful\n * Components.\n * @param {function} Ctor The constructor of the component to create\n * @param {object} props The initial props of the component\n * @param {object} context The initial context of the component\n * @returns {import('../component').Component}\n */\nexport function createComponent(Ctor, props, context, vnode) {\n  let inst,\n    i = recyclerComponents.length\n\n  if (Ctor.prototype && Ctor.prototype.render) {\n    inst = new Ctor(props, context)\n    Component.call(inst, props, context)\n  } else {\n    inst = new Component(props, context)\n    inst.constructor = Ctor\n    inst.render = doRender\n  }\n  vnode && (inst.scopedCssAttr = vnode.css)\n\n  if (inst.store && inst.store.data) {\n    if (inst.constructor.use) {\n      inst.use = getUse(inst.store.data, inst.constructor.use)\n      inst.store.instances.push(inst)\n    } else if (inst.initUse) {\n      const use = inst.initUse()\n      inst._updatePath = getPath(use)\n      inst.use = getUse(inst.store.data, use)\n      inst.store.instances.push(inst)\n    }\n  }\n\n  while (i--) {\n    if (recyclerComponents[i].constructor === Ctor) {\n      inst.nextBase = recyclerComponents[i].nextBase\n      recyclerComponents.splice(i, 1)\n      return inst\n    }\n  }\n\n  return inst\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, data, context) {\n  return this.constructor(props, context)\n}\n","/* obaa 1.0.0\n * By dntzhang\n * Github: https://github.com/Tencent/omi\n * MIT Licensed.\n */\n\nvar obaa = function(target, arr, callback) {\n  var _observe = function(target, arr, callback) {\n    if (!target.$observer) target.$observer = this\n    var $observer = target.$observer\n    var eventPropArr = []\n    if (obaa.isArray(target)) {\n      if (target.length === 0) {\n        target.$observeProps = {}\n        target.$observeProps.$observerPath = '#'\n      }\n      $observer.mock(target)\n    }\n    for (var prop in target) {\n      if (target.hasOwnProperty(prop)) {\n        if (callback) {\n          if (obaa.isArray(arr) && obaa.isInArray(arr, prop)) {\n            eventPropArr.push(prop)\n            $observer.watch(target, prop)\n          } else if (obaa.isString(arr) && prop == arr) {\n            eventPropArr.push(prop)\n            $observer.watch(target, prop)\n          }\n        } else {\n          eventPropArr.push(prop)\n          $observer.watch(target, prop)\n        }\n      }\n    }\n    $observer.target = target\n    if (!$observer.propertyChangedHandler) $observer.propertyChangedHandler = []\n    var propChanged = callback ? callback : arr\n    $observer.propertyChangedHandler.push({\n      all: !callback,\n      propChanged: propChanged,\n      eventPropArr: eventPropArr\n    })\n  }\n  _observe.prototype = {\n    onPropertyChanged: function(prop, value, oldValue, target, path) {\n      if (value !== oldValue && this.propertyChangedHandler) {\n        var rootName = obaa._getRootName(prop, path)\n        for (\n          var i = 0, len = this.propertyChangedHandler.length;\n          i < len;\n          i++\n        ) {\n          var handler = this.propertyChangedHandler[i]\n          if (\n            handler.all ||\n            obaa.isInArray(handler.eventPropArr, rootName) ||\n            rootName.indexOf('Array-') === 0\n          ) {\n            handler.propChanged.call(this.target, prop, value, oldValue, path)\n          }\n        }\n      }\n      if (prop.indexOf('Array-') !== 0 && typeof value === 'object') {\n        this.watch(target, prop, target.$observeProps.$observerPath)\n      }\n    },\n    mock: function(target) {\n      var self = this\n      obaa.methods.forEach(function(item) {\n        target[item] = function() {\n          var old = Array.prototype.slice.call(this, 0)\n          var result = Array.prototype[item].apply(\n            this,\n            Array.prototype.slice.call(arguments)\n          )\n          if (new RegExp('\\\\b' + item + '\\\\b').test(obaa.triggerStr)) {\n            for (var cprop in this) {\n              if (this.hasOwnProperty(cprop) && !obaa.isFunction(this[cprop])) {\n                self.watch(this, cprop, this.$observeProps.$observerPath)\n              }\n            }\n            //todo\n            self.onPropertyChanged(\n              'Array-' + item,\n              this,\n              old,\n              this,\n              this.$observeProps.$observerPath\n            )\n          }\n          return result\n        }\n        target[\n          'pure' + item.substring(0, 1).toUpperCase() + item.substring(1)\n        ] = function() {\n          return Array.prototype[item].apply(\n            this,\n            Array.prototype.slice.call(arguments)\n          )\n        }\n      })\n    },\n    watch: function(target, prop, path) {\n      if (prop === '$observeProps' || prop === '$observer') return\n      if (obaa.isFunction(target[prop])) return\n      if (!target.$observeProps) target.$observeProps = {}\n      if (path !== undefined) {\n        target.$observeProps.$observerPath = path\n      } else {\n        target.$observeProps.$observerPath = '#'\n      }\n      var self = this\n      var currentValue = (target.$observeProps[prop] = target[prop])\n      Object.defineProperty(target, prop, {\n        get: function() {\n          return this.$observeProps[prop]\n        },\n        set: function(value) {\n          var old = this.$observeProps[prop]\n          this.$observeProps[prop] = value\n          self.onPropertyChanged(\n            prop,\n            value,\n            old,\n            this,\n            target.$observeProps.$observerPath\n          )\n        }\n      })\n      if (typeof currentValue == 'object') {\n        if (obaa.isArray(currentValue)) {\n          this.mock(currentValue)\n          if (currentValue.length === 0) {\n            if (!currentValue.$observeProps) currentValue.$observeProps = {}\n            if (path !== undefined) {\n              currentValue.$observeProps.$observerPath = path\n            } else {\n              currentValue.$observeProps.$observerPath = '#'\n            }\n          }\n        }\n        for (var cprop in currentValue) {\n          if (currentValue.hasOwnProperty(cprop)) {\n            this.watch(\n              currentValue,\n              cprop,\n              target.$observeProps.$observerPath + '-' + prop\n            )\n          }\n        }\n      }\n    }\n  }\n  return new _observe(target, arr, callback)\n}\n\nobaa.methods = [\n  'concat',\n  'copyWithin',\n  'entries',\n  'every',\n  'fill',\n  'filter',\n  'find',\n  'findIndex',\n  'forEach',\n  'includes',\n  'indexOf',\n  'join',\n  'keys',\n  'lastIndexOf',\n  'map',\n  'pop',\n  'push',\n  'reduce',\n  'reduceRight',\n  'reverse',\n  'shift',\n  'slice',\n  'some',\n  'sort',\n  'splice',\n  'toLocaleString',\n  'toString',\n  'unshift',\n  'values',\n  'size'\n]\nobaa.triggerStr = [\n  'concat',\n  'copyWithin',\n  'fill',\n  'pop',\n  'push',\n  'reverse',\n  'shift',\n  'sort',\n  'splice',\n  'unshift',\n  'size'\n].join(',')\n\nobaa.isArray = function(obj) {\n  return Object.prototype.toString.call(obj) === '[object Array]'\n}\n\nobaa.isString = function(obj) {\n  return typeof obj === 'string'\n}\n\nobaa.isInArray = function(arr, item) {\n  for (var i = arr.length; --i > -1; ) {\n    if (item === arr[i]) return true\n  }\n  return false\n}\n\nobaa.isFunction = function(obj) {\n  return Object.prototype.toString.call(obj) == '[object Function]'\n}\n\nobaa._getRootName = function(prop, path) {\n  if (path === '#') {\n    return prop\n  }\n  return path.split('-')[1]\n}\n\nobaa.add = function(obj, prop) {\n  var $observer = obj.$observer\n  $observer.watch(obj, prop)\n}\n\nobaa.set = function(obj, prop, value, exec) {\n  if (!exec) {\n    obj[prop] = value\n  }\n  var $observer = obj.$observer\n  $observer.watch(obj, prop)\n  if (exec) {\n    obj[prop] = value\n  }\n}\n\nArray.prototype.size = function(length) {\n  this.length = length\n}\n\nexport default obaa\n","const callbacks = []\nconst nextTickCallback = []\n\nexport function tick(fn, scope) {\n  callbacks.push({ fn, scope })\n}\n\nexport function fireTick() {\n  callbacks.forEach(item => {\n    item.fn.call(item.scope)\n  })\n\n  nextTickCallback.forEach(nextItem => {\n    nextItem.fn.call(nextItem.scope)\n  })\n  nextTickCallback.length = 0\n}\n\nexport function nextTick(fn, scope) {\n  nextTickCallback.push({ fn, scope })\n}\n","import obaa from './obaa'\nimport { fireTick } from './tick'\n\nexport function proxyUpdate(ele) {\n  let timeout = null\n  obaa(ele.data, () => {\n    if (ele._willUpdate) {\n      return\n    }\n    if (ele.constructor.mergeUpdate) {\n      clearTimeout(timeout)\n\n      timeout = setTimeout(() => {\n        ele.update()\n        fireTick()\n      }, 0)\n    } else {\n      ele.update()\n      fireTick()\n    }\n  })\n}\n","import {\n  SYNC_RENDER,\n  NO_RENDER,\n  FORCE_RENDER,\n  ASYNC_RENDER,\n  ATTR_KEY\n} from '../constants'\nimport options from '../options'\nimport { extend, applyRef } from '../util'\nimport { enqueueRender } from '../render-queue'\nimport { getNodeProps } from './index'\nimport {\n  diff,\n  mounts,\n  diffLevel,\n  flushMounts,\n  recollectNodeTree,\n  removeChildren\n} from './diff'\nimport { createComponent, recyclerComponents } from './component-recycler'\nimport { removeNode } from '../dom/index'\nimport { addScopedAttrStatic, getCtorName, scopeHost } from '../style'\nimport { proxyUpdate } from '../observe'\n\n/** Set a component's `props` (generally derived from JSX attributes).\n *\t@param {Object} props\n *\t@param {Object} [opts]\n *\t@param {boolean} [opts.renderSync=false]\tIf `true` and {@link options.syncComponentUpdates} is `true`, triggers synchronous rendering.\n *\t@param {boolean} [opts.render=true]\t\t\tIf `false`, no render will be triggered.\n */\nexport function setComponentProps(\n  component,\n  props,\n  renderMode,\n  context,\n  mountAll\n) {\n  if (component._disable) return\n  component._disable = true\n\n  component.__ref = props.ref\n  component.__key = props.key\n  delete props.ref\n  delete props.key\n\n  if (typeof component.constructor.getDerivedStateFromProps === 'undefined') {\n    if (!component.base || mountAll) {\n      if (component.componentWillMount) component.componentWillMount()\n    } else if (component.componentWillReceiveProps) {\n      component.componentWillReceiveProps(props, context)\n    }\n  }\n\n  if (!component.base || mountAll) {\n    if (component.beforeInstall) component.beforeInstall()\n    if (component.install) component.install()\n    if (component.constructor.observe) {\n      proxyUpdate(component)\n    }\n  } else if (component.receiveProps) {\n    component.receiveProps(props, context, component.props)\n  }\n\n  if (context && context !== component.context) {\n    if (!component.prevContext) component.prevContext = component.context\n    component.context = context\n  }\n\n  if (!component.prevProps) component.prevProps = component.props\n  component.props = props\n\n  component._disable = false\n\n  if (renderMode !== NO_RENDER) {\n    if (\n      renderMode === SYNC_RENDER ||\n      options.syncComponentUpdates !== false ||\n      !component.base\n    ) {\n      renderComponent(component, SYNC_RENDER, mountAll)\n    } else {\n      enqueueRender(component)\n    }\n  }\n\n  applyRef(component.__ref, component)\n}\n\nfunction shallowComparison(old, attrs) {\n  let name\n\n  for (name in old) {\n    if (attrs[name] == null && old[name] != null) {\n      return true\n    }\n  }\n\n  if (old.children.length > 0 || attrs.children.length > 0) {\n    return true\n  }\n\n  for (name in attrs) {\n    if (name != 'children') {\n      let type = typeof attrs[name]\n      if (type == 'function' || type == 'object') {\n        return true\n      } else if (attrs[name] != old[name]) {\n        return true\n      }\n    }\n  }\n}\n\n/** Render a Component, triggering necessary lifecycle events and taking High-Order Components into account.\n *\t@param {Component} component\n *\t@param {Object} [opts]\n *\t@param {boolean} [opts.build=false]\t\tIf `true`, component will build and store a DOM node if not already associated with one.\n *\t@private\n */\nexport function renderComponent(component, renderMode, mountAll, isChild) {\n  if (component._disable) return\n\n  let props = component.props,\n    state = component.state,\n    context = component.context,\n    previousProps = component.prevProps || props,\n    previousState = component.prevState || state,\n    previousContext = component.prevContext || context,\n    isUpdate = component.base,\n    nextBase = component.nextBase,\n    initialBase = isUpdate || nextBase,\n    initialChildComponent = component._component,\n    skip = false,\n    snapshot = previousContext,\n    rendered,\n    inst,\n    cbase\n\n  if (component.constructor.getDerivedStateFromProps) {\n    state = extend(\n      extend({}, state),\n      component.constructor.getDerivedStateFromProps(props, state)\n    )\n    component.state = state\n  }\n\n  // if updating\n  if (isUpdate) {\n    component.props = previousProps\n    //component.data = previousState\n    component.state = previousState\n    component.context = previousContext\n    if (\n      renderMode !== FORCE_RENDER &&\n      component.shouldComponentUpdate &&\n      component.shouldComponentUpdate(props, state, context) === false\n    ) {\n      skip = true\n    } else {\n      if (component.componentWillUpdate) {\n        component.componentWillUpdate(props, state, context)\n      }\n\n      if (component.beforeUpdate) {\n        component.beforeUpdate(props, state, context)\n      }\n    }\n\n    // if (component.store || renderMode == FORCE_RENDER || shallowComparison(previousProps, props)) {\n    //   skip = false\n    //   if (component.beforeUpdate) {\n    //     component.beforeUpdate(props, state, context)\n    //   }\n    // } else {\n    //   skip = true\n    // }\n    component.props = props\n    component.state = state\n    //component.data = state\n    component.context = context\n  }\n\n  component.prevProps = component.prevState = component.prevContext = component.nextBase = null\n  component._dirty = false\n\n  if (!skip) {\n    component.beforeRender && component.beforeRender()\n    rendered = component.render(props, state, context)\n\n    //don't rerender\n    if (component.constructor.css || component.css) {\n      addScopedAttrStatic(rendered, '_s' + getCtorName(component.constructor))\n    }\n\n    scopeHost(rendered, component.scopedCssAttr)\n\n    // context to pass to the child, can be updated via (grand-)parent component\n    if (component.getChildContext) {\n      context = extend(extend({}, context), component.getChildContext())\n    }\n\n    if (isUpdate && component.getSnapshotBeforeUpdate) {\n      snapshot = component.getSnapshotBeforeUpdate(previousProps, previousState)\n    }\n\n    let childComponent = rendered && rendered.nodeName,\n      toUnmount,\n      base,\n      ctor = options.mapping[childComponent]\n    if (typeof childComponent === 'function') {\n      ctor = childComponent\n    }\n    if (ctor) {\n      // set up high order component link\n\n      let childProps = getNodeProps(rendered)\n      inst = initialChildComponent\n\n      if (inst && inst.constructor === ctor && childProps.key == inst.__key) {\n        setComponentProps(inst, childProps, SYNC_RENDER, context, false)\n      } else {\n        toUnmount = inst\n\n        component._component = inst = createComponent(ctor, childProps, context)\n        inst.nextBase = inst.nextBase || nextBase\n        inst._parentComponent = component\n        setComponentProps(inst, childProps, NO_RENDER, context, false)\n        renderComponent(inst, SYNC_RENDER, mountAll, true)\n      }\n\n      base = inst.base\n    } else {\n      cbase = initialBase\n\n      // destroy high order component link\n      toUnmount = initialChildComponent\n      if (toUnmount) {\n        cbase = component._component = null\n      }\n\n      if (initialBase || renderMode === SYNC_RENDER) {\n        if (cbase) cbase._component = null\n        base = diff(\n          cbase,\n          rendered,\n          context,\n          mountAll || !isUpdate,\n          initialBase && initialBase.parentNode,\n          true\n        )\n      }\n    }\n\n    if (initialBase && base !== initialBase && inst !== initialChildComponent) {\n      let baseParent = initialBase.parentNode\n      if (baseParent && base !== baseParent) {\n        baseParent.replaceChild(base, initialBase)\n\n        if (!toUnmount) {\n          initialBase._component = null\n          recollectNodeTree(initialBase, false)\n        }\n      }\n    }\n\n    if (toUnmount) {\n      unmountComponent(toUnmount)\n    }\n\n    component.base = base\n    if (base && !isChild) {\n      let componentRef = component,\n        t = component\n      while ((t = t._parentComponent)) {\n        ;(componentRef = t).base = base\n      }\n      base._component = componentRef\n      base._componentConstructor = componentRef.constructor\n    }\n  }\n\n  if (!isUpdate || mountAll) {\n    mounts.push(component)\n  } else if (!skip) {\n    // Ensure that pending componentDidMount() hooks of child components\n    // are called before the componentDidUpdate() hook in the parent.\n    // Note: disabled as it causes duplicate hooks, see https://github.com/developit/preact/issues/750\n    // flushMounts();\n\n    if (component.componentDidUpdate) {\n      component.componentDidUpdate(previousProps, previousState, snapshot)\n    }\n    if (component.updated) {\n      component.updated(previousProps, previousState, snapshot)\n    }\n    if (options.afterUpdate) options.afterUpdate(component)\n  }\n\n  if (component._renderCallbacks != null) {\n    while (component._renderCallbacks.length)\n      component._renderCallbacks.pop().call(component)\n  }\n\n  if (!diffLevel && !isChild) flushMounts()\n}\n\n/**\n * Apply the Component referenced by a VNode to the DOM.\n * @param {import('../dom').PreactElement} dom The DOM node to mutate\n * @param {import('../vnode').VNode} vnode A Component-referencing VNode\n * @param {object} context The current context\n * @param {boolean} mountAll Whether or not to immediately mount all components\n * @returns {import('../dom').PreactElement} The created/mutated element\n * @private\n */\nexport function buildComponentFromVNode(dom, vnode, context, mountAll) {\n  let c = dom && dom._component,\n    originalComponent = c,\n    oldDom = dom,\n    isDirectOwner = c && dom._componentConstructor === vnode.nodeName,\n    isOwner = isDirectOwner,\n    props = getNodeProps(vnode)\n  while (c && !isOwner && (c = c._parentComponent)) {\n    isOwner = c.constructor === vnode.nodeName\n  }\n\n  if (c && isOwner && (!mountAll || c._component)) {\n    setComponentProps(c, props, ASYNC_RENDER, context, mountAll)\n    dom = c.base\n  } else {\n    if (originalComponent && !isDirectOwner) {\n      unmountComponent(originalComponent)\n      dom = oldDom = null\n    }\n\n    c = createComponent(vnode.nodeName, props, context, vnode)\n    if (dom && !c.nextBase) {\n      c.nextBase = dom\n      // passing dom/oldDom as nextBase will recycle it if unused, so bypass recycling on L229:\n      oldDom = null\n    }\n    setComponentProps(c, props, SYNC_RENDER, context, mountAll)\n    dom = c.base\n\n    if (oldDom && dom !== oldDom) {\n      oldDom._component = null\n      recollectNodeTree(oldDom, false)\n    }\n  }\n\n  return dom\n}\n\n/**\n * Remove a component from the DOM and recycle it.\n * @param {import('../component').Component} component The Component instance to unmount\n * @private\n */\nexport function unmountComponent(component) {\n  if (options.beforeUnmount) options.beforeUnmount(component)\n\n  let base = component.base\n\n  component._disable = true\n\n  if (component.componentWillUnmount) component.componentWillUnmount()\n\n  if (component.uninstall) component.uninstall()\n\n  if (component.store && component.store.instances) {\n    for (let i = 0, len = component.store.instances.length; i < len; i++) {\n      if (component.store.instances[i] === component) {\n        component.store.instances.splice(i, 1)\n        break\n      }\n    }\n  }\n\n  component.base = null\n\n  // recursively tear down & recollect high-order component children:\n  let inner = component._component\n  if (inner) {\n    unmountComponent(inner)\n  } else if (base) {\n    if (base[ATTR_KEY] != null) applyRef(base[ATTR_KEY].ref, null)\n\n    component.nextBase = base\n\n    removeNode(base)\n    recyclerComponents.push(component)\n\n    removeChildren(base)\n  }\n\n  applyRef(component.__ref, null)\n}\n","import { FORCE_RENDER } from './constants'\nimport { extend } from './util'\nimport { renderComponent } from './vdom/component'\nimport options from './options'\nimport { enqueueRender } from './render-queue'\n/**\n * Base Component class.\n * Provides `setState()` and `forceUpdate()`, which trigger rendering.\n * @typedef {object} Component\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components' getChildContext\n * @public\n *\n * @example\n * class MyFoo extends Component {\n *   render(props, state) {\n *     return <div />;\n *   }\n * }\n */\n\nlet id = 0\n\nexport default function Component(props, store) {\n  this._dirty = true\n  this.context = store\n  this.props = props\n\n  this.elementId = id++\n  this.state = this.state || {}\n  this.data = this.data || {}\n  this._preCss = null\n\n  this.store = store\n  this._renderCallbacks = []\n}\n\nextend(Component.prototype, {\n  isReactComponent: {},\n  \n  update(callback) {\n    this._willUpdate = true\n    if (callback)\n      (this._renderCallbacks = this._renderCallbacks || []).push(callback)\n    renderComponent(this, FORCE_RENDER)\n    if (options.componentChange) options.componentChange(this, this.base)\n    this._willUpdate = false\n  },\n  setState(state, callback) {\n    if (!this.prevState) this.prevState = this.state\n    this.state = extend(\n      extend({}, this.state),\n      typeof state === 'function' ? state(this.state, this.props) : state\n    )\n    if (callback) this._renderCallbacks.push(callback)\n    enqueueRender(this)\n  },\n\n  fire(type, data) {\n    Object.keys(this.props).every(key => {\n      if ('on' + type.toLowerCase() === key.toLowerCase()) {\n        this.props[key]({ detail: data })\n        return false\n      }\n      return true\n    })\n  },\n\n  forceUpdate(callback) {\n    if (callback) this._renderCallbacks.push(callback)\n    renderComponent(this, FORCE_RENDER)\n  },\n\n  render() {}\n})\n\nComponent.is = 'WeElement'\n","import { diff } from './vdom/diff'\nimport obaa from './obaa'\nimport { getUse } from './util'\n\n/** Render JSX into a `parent` Element.\n *\t@param {VNode} vnode\t\tA (JSX) VNode to render\n *\t@param {Element} parent\t\tDOM element to render into\n *\t@param {object} [store]\n *\t@public\n */\nexport function render(vnode, parent, store, empty, merge) {\n  parent = typeof parent === 'string' ? document.querySelector(parent) : parent\n  if (\n    store &&\n    (typeof store === 'string' ||\n      (arguments.length === 3 &&\n        typeof Element !== undefined &&\n        (store instanceof Element || store.nodeType === 3)))\n  ) {\n    return diff(store, vnode, {}, false, parent, false)\n  }\n  obsStore(store)\n\n  if (empty) {\n    while (parent.firstChild) {\n      parent.removeChild(parent.firstChild)\n    }\n  }\n\n  if (merge) {\n    merge = typeof merge === 'string' ? document.querySelector(merge) : merge\n  }\n\n  return diff(merge, vnode, store, false, parent, false)\n}\n\nfunction obsStore(store) {\n  if (store && store.data) {\n    store.instances = []\n    extendStoreUpate(store)\n\n    obaa(store.data, (prop, val, old, path) => {\n      const patchs = {}\n      const key = fixPath(path + '-' + prop)\n      patchs[key] = true\n      store.update(patchs)\n    })\n  }\n}\n\nexport function merge(vnode, merge, store) {\n  obsStore(store)\n\n  merge = typeof merge === 'string' ? document.querySelector(merge) : merge\n\n  return diff(merge, vnode, store)\n}\n\nfunction extendStoreUpate(store) {\n  store.update = function(patch) {\n    const updateAll = matchGlobalData(this.globalData, patch)\n    if (Object.keys(patch).length > 0) {\n      this.instances.forEach(instance => {\n        if (\n          updateAll ||\n          this.updateAll ||\n          (instance.constructor.updatePath &&\n            needUpdate(patch, instance.constructor.updatePath)) ||\n          (instance._updatePath && needUpdate(patch, instance._updatePath))\n        ) {\n          //update this.use\n          if (instance.constructor.use) {\n            instance.use = getUse(store.data, instance.constructor.use)\n          } else if (instance.initUse) {\n            instance.use = getUse(store.data, instance.initUse())\n          }\n\n          instance.update()\n        }\n      })\n      this.onChange && this.onChange(patch)\n    }\n  }\n}\n\nexport function matchGlobalData(globalData, diffResult) {\n  if (!globalData) return false\n  for (let keyA in diffResult) {\n    if (globalData.indexOf(keyA) > -1) {\n      return true\n    }\n    for (let i = 0, len = globalData.length; i < len; i++) {\n      if (includePath(keyA, globalData[i])) {\n        return true\n      }\n    }\n  }\n  return false\n}\n\nexport function needUpdate(diffResult, updatePath) {\n  for (let keyA in diffResult) {\n    if (updatePath[keyA]) {\n      return true\n    }\n    for (let keyB in updatePath) {\n      if (includePath(keyA, keyB)) {\n        return true\n      }\n    }\n  }\n  return false\n}\n\nfunction includePath(pathA, pathB) {\n  if (pathA.indexOf(pathB) === 0) {\n    const next = pathA.substr(pathB.length, 1)\n    if (next === '[' || next === '.') {\n      return true\n    }\n  }\n  return false\n}\n\nexport function fixPath(path) {\n  let mpPath = ''\n  const arr = path.replace('#-', '').split('-')\n  arr.forEach((item, index) => {\n    if (index) {\n      if (isNaN(Number(item))) {\n        mpPath += '.' + item\n      } else {\n        mpPath += '[' + item + ']'\n      }\n    } else {\n      mpPath += item\n    }\n  })\n  return mpPath\n}\n\nfunction getArrayPatch(path, store) {\n  const arr = path.replace('/', '').split('/')\n  let current = store.data[arr[0]]\n  for (let i = 1, len = arr.length; i < len - 1; i++) {\n    current = current[arr[i]]\n  }\n  return { k: fixArrPath(path), v: current }\n}\n\nfunction fixArrPath(path) {\n  let mpPath = ''\n  const arr = path.replace('/', '').split('/')\n  const len = arr.length\n  arr.forEach((item, index) => {\n    if (index < len - 1) {\n      if (index) {\n        if (isNaN(Number(item))) {\n          mpPath += '.' + item\n        } else {\n          mpPath += '[' + item + ']'\n        }\n      } else {\n        mpPath += item\n      }\n    }\n  })\n  return mpPath\n}\n","export function rpx(str) {\n  return str.replace(/([1-9]\\d*|0)(\\.\\d*)*rpx/g, (a, b) => {\n    return (window.innerWidth * Number(b)) / 750 + 'px'\n  })\n}\n","import Component from './component'\n\nexport default class ModelView extends Component {\n  static observe = true\n\n  static mergeUpdate = true\n\n  beforeInstall() {\n    this.data = this.vm.data\n  }\n}\n","/**\n * classNames based on https://github.com/JedWatson/classnames\n * by Jed Watson\n * Licensed under the MIT License\n * https://github.com/JedWatson/classnames/blob/master/LICENSE\n * modified by dntzhang\n */\n\nvar hasOwn = {}.hasOwnProperty\n\nexport function classNames() {\n  var classes = []\n\n  for (var i = 0; i < arguments.length; i++) {\n    var arg = arguments[i]\n    if (!arg) continue\n\n    var argType = typeof arg\n\n    if (argType === 'string' || argType === 'number') {\n      classes.push(arg)\n    } else if (Array.isArray(arg) && arg.length) {\n      var inner = classNames.apply(null, arg)\n      if (inner) {\n        classes.push(inner)\n      }\n    } else if (argType === 'object') {\n      for (var key in arg) {\n        if (hasOwn.call(arg, key) && arg[key]) {\n          classes.push(key)\n        }\n      }\n    }\n  }\n\n  return classes.join(' ')\n}\n\nexport function extractClass() {\n  const [props, ...args] = Array.prototype.slice.call(arguments, 0)\n  if (props) {\n    if (props['class']) {\n      args.unshift(props['class'])\n      delete props['class']\n    } else if (props.className) {\n      args.unshift(props.className)\n      delete props.className\n    }\n  }\n  if (args.length > 0) {\n    return { class: classNames.apply(null, args) }\n  }\n}\n","/**\n * preact-render-to-string based on preact-render-to-string\n * by Jason Miller\n * Licensed under the MIT License\n * https://github.com/developit/preact-render-to-string\n *\n * modified by dntzhang\n */\n\nimport options from './options'\n\nimport { addScopedAttrStatic, getCtorName, scopeHost, scoper } from './style'\n\nconst encodeEntities = s =>\n  String(s)\n    .replace(/&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n\nconst indent = (s, char) => String(s).replace(/(\\n+)/g, '$1' + (char || '\\t'))\n\nconst mapping = options.mapping\n\nconst VOID_ELEMENTS = /^(area|base|br|col|embed|hr|img|input|link|meta|param|source|track|wbr)$/\n\nconst isLargeString = (s, length, ignoreLines) =>\n  String(s).length > (length || 40) ||\n  (!ignoreLines && String(s).indexOf('\\n') !== -1) ||\n  String(s).indexOf('<') !== -1\n\nconst JS_TO_CSS = {}\n\n// Convert an Object style to a CSSText string\nfunction styleObjToCss(s) {\n  let str = ''\n  for (let prop in s) {\n    let val = s[prop]\n    if (val != null) {\n      if (str) str += ' '\n      // str += jsToCss(prop);\n      str +=\n        JS_TO_CSS[prop] ||\n        (JS_TO_CSS[prop] = prop.replace(/([A-Z])/g, '-$1').toLowerCase())\n      str += ': '\n      str += val\n      if (typeof val === 'number' && IS_NON_DIMENSIONAL.test(prop) === false) {\n        str += 'px'\n      }\n      str += ';'\n    }\n  }\n  return str || undefined\n}\n\nexport function renderToString(vnode, opts, store, isSvgMode) {\n  store = store || {}\n  opts = Object.assign(\n    {\n      scopedCSS: true\n    },\n    opts\n  )\n  const css = {}\n  const html = _renderToString(vnode, opts, store, isSvgMode, css)\n  return {\n    css: Object.values(css),\n    html: html\n  }\n}\n\n/** The default export is an alias of `render()`. */\nfunction _renderToString(vnode, opts, store, isSvgMode, css) {\n  if (vnode == null || typeof vnode === 'boolean') {\n    return ''\n  }\n\n  let nodeName = vnode.nodeName,\n    attributes = vnode.attributes,\n    isComponent = false\n\n  let pretty = true && opts.pretty,\n    indentChar = pretty && typeof pretty === 'string' ? pretty : '\\t'\n\n  // #text nodes\n  if (typeof vnode !== 'object' && !nodeName) {\n    return encodeEntities(vnode)\n  }\n\n  // components\n  const ctor = mapping[nodeName]\n  if (ctor) {\n    isComponent = true\n\n    let props = getNodeProps(vnode),\n      rendered\n    // class-based components\n    let c = new ctor(props, store)\n    // turn off stateful re-rendering:\n    c._disable = c.__x = true\n    c.props = props\n    c.store = store\n    if (c.install) c.install()\n    if (c.beforeRender) c.beforeRender()\n    rendered = c.render(c.props, c.data, c.store)\n\n    if (opts.scopedCSS) {\n      if (c.constructor.css || c.css) {\n        const cssStr = c.constructor.css\n          ? c.constructor.css\n          : typeof c.css === 'function'\n            ? c.css()\n            : c.css\n        const cssAttr = '_s' + getCtorName(c.constructor)\n        css[cssAttr] = {\n          id: cssAttr,\n          css: scoper(cssStr, cssAttr)\n        }\n        addScopedAttrStatic(rendered, cssAttr)\n      }\n\n      c.scopedCSSAttr = vnode.css\n      scopeHost(rendered, c.scopedCSSAttr)\n    }\n\n    return _renderToString(rendered, opts, store, false, css)\n  }\n\n  // render JSX to HTML\n  let s = '',\n    html\n\n  if (attributes) {\n    let attrs = Object.keys(attributes)\n\n    // allow sorting lexicographically for more determinism (useful for tests, such as via preact-jsx-chai)\n    if (opts && opts.sortAttributes === true) attrs.sort()\n\n    for (let i = 0; i < attrs.length; i++) {\n      let name = attrs[i],\n        v = attributes[name]\n      if (name === 'children') continue\n\n      if (name.match(/[\\s\\n\\\\/='\"\\0<>]/)) continue\n\n      if (!(opts && opts.allAttributes) && (name === 'key' || name === 'ref'))\n        continue\n\n      if (name === 'className') {\n        if (attributes['class']) continue\n        name = 'class'\n      } else if (isSvgMode && name.match(/^xlink:?./)) {\n        name = name.toLowerCase().replace(/^xlink:?/, 'xlink:')\n      }\n\n      if (name === 'style' && v && typeof v === 'object') {\n        v = styleObjToCss(v)\n      }\n\n      let hooked =\n        opts.attributeHook &&\n        opts.attributeHook(name, v, store, opts, isComponent)\n      if (hooked || hooked === '') {\n        s += hooked\n        continue\n      }\n\n      if (name === 'dangerouslySetInnerHTML') {\n        html = v && v.__html\n      } else if ((v || v === 0 || v === '') && typeof v !== 'function') {\n        if (v === true || v === '') {\n          v = name\n          // in non-xml mode, allow boolean attributes\n          if (!opts || !opts.xml) {\n            s += ' ' + name\n            continue\n          }\n        }\n        s += ` ${name}=\"${encodeEntities(v)}\"`\n      }\n    }\n  }\n\n  // account for >1 multiline attribute\n  if (pretty) {\n    let sub = s.replace(/^\\n\\s*/, ' ')\n    if (sub !== s && !~sub.indexOf('\\n')) s = sub\n    else if (pretty && ~s.indexOf('\\n')) s += '\\n'\n  }\n\n  s = `<${nodeName}${s}>`\n  if (String(nodeName).match(/[\\s\\n\\\\/='\"\\0<>]/)) throw s\n\n  let isVoid = String(nodeName).match(VOID_ELEMENTS)\n  if (isVoid) s = s.replace(/>$/, ' />')\n\n  let pieces = []\n  if (html) {\n    // if multiline, indent.\n    if (pretty && isLargeString(html)) {\n      html = '\\n' + indentChar + indent(html, indentChar)\n    }\n    s += html\n  } else if (vnode.children) {\n    let hasLarge = pretty && ~s.indexOf('\\n')\n    for (let i = 0; i < vnode.children.length; i++) {\n      let child = vnode.children[i]\n      if (child != null && child !== false) {\n        let childSvgMode =\n            nodeName === 'svg'\n              ? true\n              : nodeName === 'foreignObject'\n                ? false\n                : isSvgMode,\n          ret = _renderToString(child, opts, store, childSvgMode, css)\n        if (pretty && !hasLarge && isLargeString(ret)) hasLarge = true\n        if (ret) pieces.push(ret)\n      }\n    }\n    if (pretty && hasLarge) {\n      for (let i = pieces.length; i--; ) {\n        pieces[i] = '\\n' + indentChar + indent(pieces[i], indentChar)\n      }\n    }\n  }\n\n  if (pieces.length) {\n    s += pieces.join('')\n  } else if (opts && opts.xml) {\n    return s.substring(0, s.length - 1) + ' />'\n  }\n\n  if (!isVoid) {\n    if (pretty && ~s.indexOf('\\n')) s += '\\n'\n    s += `</${nodeName}>`\n  }\n\n  return s\n}\n\nfunction assign(obj, props) {\n  for (let i in props) obj[i] = props[i]\n  return obj\n}\n\nfunction getNodeProps(vnode) {\n  let props = assign({}, vnode.attributes)\n  props.children = vnode.children\n\n  let defaultProps = vnode.nodeName.defaultProps\n  if (defaultProps !== undefined) {\n    for (let i in defaultProps) {\n      if (props[i] === undefined) {\n        props[i] = defaultProps[i]\n      }\n    }\n  }\n\n  return props\n}\n","const ARR = [];\n\n// This API is completely unnecessary for Preact, so it's basically passthrough.\nlet Children = {\n\tmap(children, fn, ctx) {\n\t\tif (children == null) return null;\n\t\tchildren = Children.toArray(children);\n\t\tif (ctx && ctx!==children) fn = fn.bind(ctx);\n\t\treturn children.map(fn);\n\t},\n\tforEach(children, fn, ctx) {\n\t\tif (children == null) return null;\n\t\tchildren = Children.toArray(children);\n\t\tif (ctx && ctx!==children) fn = fn.bind(ctx);\n\t\tchildren.forEach(fn);\n\t},\n\tcount(children) {\n\t\treturn children && children.length || 0;\n\t},\n\tonly(children) {\n\t\tchildren = Children.toArray(children);\n\t\tif (children.length!==1) throw new Error('Children.only() expects only one child.');\n\t\treturn children[0];\n\t},\n\ttoArray(children) {\n\t\tif (children == null) return [];\n\t\treturn ARR.concat(children);\n\t}\n};\n\nexport default Children","// @flow\nimport Component from './component';\nconst MAX_SIGNED_31_BIT_INT = 1073741823;\n\n// Inlined Object.is polyfill.\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\nfunction objectIs(x, y) {\n  if (x === y) {\n    return x !== 0 || 1 / x === 1 / (y);\n  } else {\n    return x !== x && y !== y;\n  }\n}\nlet id = 0\nfunction createEventEmitter(value) {\n  let handlers = [];\n  return {\n    on(handler) {\n      handlers.push(handler);\n    },\n\n    off(handler) {\n      handlers = handlers.filter(h => h !== handler);\n    },\n\n    get() {\n      return value;\n    },\n\n    set(newValue, changedBits) {\n      value = newValue;\n      handlers.forEach(handler => handler(value, changedBits));\n    }\n  };\n}\n\nfunction onlyChild(children) {\n  return Array.isArray(children) ? children[0] : children;\n}\n\nfunction createContext(\n  defaultValue,\n  calculateChangedBits\n){\n  const contextProp = '__create-react-context-' + id++ + '__';\n\n  class Provider extends Component {\n    emitter = createEventEmitter(this.props.value);\n\n    // static childContextTypes = {\n    //   [contextProp]: PropTypes.object.isRequired\n    // };\n\n    getChildContext() {\n      return {\n        [contextProp]: this.emitter\n      };\n    }\n\n    componentWillReceiveProps(nextProps) {\n      if (this.props.value !== nextProps.value) {\n        let oldValue = this.props.value;\n        let newValue = nextProps.value;\n        let changedBits;\n\n        if (objectIs(oldValue, newValue)) {\n          changedBits = 0; // No change\n        } else {\n          changedBits =\n            typeof calculateChangedBits === 'function'\n              ? calculateChangedBits(oldValue, newValue)\n              : MAX_SIGNED_31_BIT_INT;\n          if (process.env.NODE_ENV !== 'production') {\n            // warning(\n            //   (changedBits & MAX_SIGNED_31_BIT_INT) === changedBits,\n            //   'calculateChangedBits: Expected the return value to be a ' +\n            //     '31-bit integer. Instead received: %s',\n            //   changedBits\n            // );\n          }\n\n          changedBits |= 0;\n\n          if (changedBits !== 0) {\n            this.emitter.set(nextProps.value, changedBits);\n          }\n        }\n      }\n    }\n\n    render() {\n      return this.props.children;\n    }\n  }\n\n  class Consumer extends Component {\n    // static contextTypes = {\n    //   [contextProp]: PropTypes.object\n    // };\n\n    observedBits\n\n    state = {\n      value: this.getValue()\n    };\n\n    componentWillReceiveProps(nextProps) {\n      let { observedBits } = nextProps;\n      this.observedBits =\n        observedBits === undefined || observedBits === null\n          ? MAX_SIGNED_31_BIT_INT // Subscribe to all changes by default\n          : observedBits;\n    }\n\n    componentDidMount() {\n      if (this.context && this.context[contextProp]) {\n        this.context[contextProp].on(this.onUpdate);\n      }\n      let { observedBits } = this.props;\n      this.observedBits =\n        observedBits === undefined || observedBits === null\n          ? MAX_SIGNED_31_BIT_INT // Subscribe to all changes by default\n          : observedBits;\n    }\n\n    componentWillUnmount() {\n      if (this.context && this.context[contextProp]) {\n        this.context[contextProp].off(this.onUpdate);\n      }\n    }\n\n    getValue() {\n      if (this.context && this.context[contextProp]) {\n        return this.context[contextProp].get();\n      } else {\n        return defaultValue;\n      }\n    }\n\n    onUpdate = (newValue, changedBits) => {\n      const observedBits = this.observedBits | 0;\n      if ((observedBits & changedBits) !== 0) {\n        this.setState({ value: this.getValue() });\n      }\n    };\n\n    render() {\n      return onlyChild(this.props.children)(this.state.value);\n    }\n  }\n\n  return {\n    Provider,\n    Consumer\n  };\n}\n\nexport default createContext;","import { h, h as createElement } from './h'\nimport { cloneElement } from './clone-element'\nimport Component from './component'\nimport { render, merge } from './render'\nimport { rerender } from './render-queue'\nimport options from './options'\nimport { define } from './define'\nimport { rpx } from './rpx'\nimport { tag } from './tag'\nimport ModelView from './model-view'\nimport { classNames, extractClass } from './class'\nimport { getHost } from './get-host'\nimport { renderToString } from './render-to-string'\nimport htm from 'htm'\nimport Children from './children'\nimport { extend } from './util'\nimport createContext from './create-context'\nimport { VNode } from './vnode'\n\nconst html = htm.bind(h)\n\nconst WeElement = Component\nconst defineElement = define\nfunction createRef() {\n  return {}\n}\n\nconst REACT_ELEMENT_TYPE = (typeof Symbol !== 'undefined' && Symbol.for && Symbol.for('react.element')) || 0xeac7;\n\nfunction isValidElement(element) {\n  return element && ((element instanceof VNode) || element.$$typeof === REACT_ELEMENT_TYPE);\n}\n\nclass ContextProvider {\n\tgetChildContext() {\n\t\treturn this.props.context;\n\t}\n\trender(props) {\n\t\treturn props.children[0];\n\t}\n}\n\n\nfunction renderSubtreeIntoContainer(parentComponent, vnode, container, callback) {\n\tlet wrap = h(ContextProvider, { context: parentComponent.context }, vnode);\n\tlet renderContainer = render(wrap, container);\n\tlet component = renderContainer._component || renderContainer.base;\n\tif (callback) callback.call(component, renderContainer);\n\treturn component;\n}\n\nconst unstable_renderSubtreeIntoContainer = renderSubtreeIntoContainer\n\nfunction Portal(props) {\n\trenderSubtreeIntoContainer(this, props.vnode, props.container);\n}\n\nfunction createPortal(vnode, container) {\n\treturn h(Portal, { vnode, container });\n}\n\nfunction findDOMNode(component) {\n\treturn component && (component.base || component.nodeType === 1 && component) || null;\n}\n\nfunction unmountComponentAtNode(container) {\n\tlet existing = container._preactCompatRendered && container._preactCompatRendered.base;\n\tif (existing && existing.parentNode===container) {\n\t\trender(h(EmptyComponent), container, existing);\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n\n\nfunction shallowDiffers(a, b) {\n\tfor (let i in a) if (!(i in b)) return true;\n\tfor (let i in b) if (a[i]!==b[i]) return true;\n\treturn false;\n}\n\n\nfunction callMethod(ctx, m, args) {\n\tif (typeof m==='string') {\n\t\tm = ctx.constructor.prototype[m];\n\t}\n\tif (typeof m==='function') {\n\t\treturn m.apply(ctx, args);\n\t}\n}\n\nfunction multihook(hooks, skipDuplicates) {\n\treturn function() {\n\t\tlet ret;\n\t\tfor (let i=0; i<hooks.length; i++) {\n\t\t\tlet r = callMethod(this, hooks[i], arguments);\n\n\t\t\tif (skipDuplicates && r!=null) {\n\t\t\t\tif (!ret) ret = {};\n\t\t\t\tfor (let key in r) if (r.hasOwnProperty(key)) {\n\t\t\t\t\tret[key] = r[key];\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (typeof r!=='undefined') ret = r;\n\t\t}\n\t\treturn ret;\n\t};\n}\n\n\nfunction newComponentHook(props, context) {\n\tpropsHook.call(this, props, context);\n\tthis.componentWillReceiveProps = multihook([propsHook, this.componentWillReceiveProps || 'componentWillReceiveProps']);\n\tthis.render = multihook([propsHook, beforeRender, this.render || 'render', afterRender]);\n}\n\n\nfunction propsHook(props, context) {\n\tif (!props) return;\n\n\t// React annoyingly special-cases single children, and some react components are ridiculously strict about this.\n\tlet c = props.children;\n\tif (c && Array.isArray(c) && c.length===1 && (typeof c[0]==='string' || typeof c[0]==='function' || c[0] instanceof VNode)) {\n\t\tprops.children = c[0];\n\n\t\t// but its totally still going to be an Array.\n\t\tif (props.children && typeof props.children==='object') {\n\t\t\tprops.children.length = 1;\n\t\t\tprops.children[0] = props.children;\n\t\t}\n\t}\n\n\t// add proptype checking\n\tif (options.DEV) {\n\t\tlet ctor = typeof this==='function' ? this : this.constructor,\n\t\t\tpropTypes = this.propTypes || ctor.propTypes;\n\t\tconst displayName = this.displayName || ctor.name;\n\n\t\t// if (propTypes) {\n\t\t// \tPropTypes.checkPropTypes(propTypes, props, 'prop', displayName);\n\t\t// }\n\t}\n}\n\nlet currentComponent\n\nfunction beforeRender(props) {\n\tcurrentComponent = this;\n}\n\nfunction afterRender() {\n\tif (currentComponent===this) {\n\t\tcurrentComponent = null;\n\t}\n}\n\nconst BYPASS_HOOK = {}\n\nfunction _Component(props, context, opts) {\n\tComponent.call(this, props, context);\n\tthis.state = this.getInitialState ? this.getInitialState() : {};\n\tthis.refs = {};\n\tthis._refProxies = {};\n\tif (opts!==BYPASS_HOOK) {\n\t\tnewComponentHook.call(this, props, context);\n\t}\n}\nextend(_Component.prototype = new Component(), {\n\tconstructor: _Component,\n\n\treplaceState(state, callback) {\n\t\tthis.setState(state, callback);\n\t\tfor (let i in this.state) {\n\t\t\tif (!(i in state)) {\n\t\t\t\tdelete this.state[i];\n\t\t\t}\n\t\t}\n\t},\n\n\tgetDOMNode() {\n\t\treturn this.base;\n\t},\n\n\tisMounted() {\n\t\treturn !!this.base;\n\t}\n});\n\n\nfunction F(){}\n\nfunction PureComponent(props, context) {\n\t_Component.call(this, props, context);\n}\nF.prototype = _Component.prototype;\nPureComponent.prototype = new F();\nPureComponent.prototype.isPureReactComponent = true;\nPureComponent.prototype.shouldComponentUpdate = function(props, state) {\n\treturn shallowDiffers(this.props, props) || shallowDiffers(this.state, state);\n};\n\noptions.root.Omi = {\n  h,\n  createElement,\n  cloneElement,\n  createRef,\n  Component,\n  render,\n  rerender,\n  options,\n  WeElement,\n  define,\n  rpx,\n  ModelView,\n  defineElement,\n  classNames,\n  extractClass,\n  getHost,\n  renderToString,\n  tag,\n  merge,\n  html,\n  htm,\n  Children,\n  isValidElement,\n  createPortal,\n  findDOMNode,\n  unmountComponentAtNode,\n  unstable_renderSubtreeIntoContainer,\n  PureComponent,\n  createContext\n}\noptions.root.omi = options.root.Omi\noptions.root.Omi.version = 'reomi-1.0.0'\n\nexport default {\n  h,\n  createElement,\n  cloneElement,\n  createRef,\n  Component,\n  render,\n  rerender,\n  options,\n  WeElement,\n  define,\n  rpx,\n  ModelView,\n  defineElement,\n  classNames,\n  extractClass,\n  getHost,\n  renderToString,\n  tag,\n  merge,\n  html,\n  htm,\n  Children,\n  isValidElement,\n  createPortal,\n  findDOMNode,\n  unmountComponentAtNode,\n  unstable_renderSubtreeIntoContainer,\n  PureComponent,\n  createContext\n}\n\nexport {\n  h,\n  createElement,\n  cloneElement,\n  createRef,\n  Component,\n  render,\n  rerender,\n  options,\n  WeElement,\n  define,\n  rpx,\n  ModelView,\n  defineElement,\n  classNames,\n  extractClass,\n  getHost,\n  renderToString,\n  tag,\n  merge,\n  html,\n  htm,\n  Children,\n  isValidElement,\n  createPortal,\n  findDOMNode,\n  unmountComponentAtNode,\n  unstable_renderSubtreeIntoContainer,\n  PureComponent,\n  createContext\n}\n","export const VNode = function VNode() {};","function getGlobal() {\n  if (\n    typeof global !== 'object' ||\n    !global ||\n    global.Math !== Math ||\n    global.Array !== Array\n  ) {\n    if (typeof self !== 'undefined') {\n      return self\n    } else if (typeof window !== 'undefined') {\n      return window\n    } else if (typeof global !== 'undefined') {\n      return global\n    }\n    return (function() {\n      return this\n    })()\n  }\n  return global\n}\n\n/** Global options\n *\t@public\n *\t@namespace options {Object}\n */\nexport default {\n  scopedStyle: true,\n  mapping: {},\n  isWeb: true,\n  staticStyleMapping: {},\n  doc: typeof document === 'object' ? document : null,\n  root: getGlobal(),\n  //styleCache :[{ctor:ctor,ctorName:ctorName,style:style}]\n  styleCache: []\n  //componentChange(component, element) { },\n  /** If `true`, `prop` changes trigger synchronous component updates.\n   *\t@name syncComponentUpdates\n   *\t@type Boolean\n   *\t@default true\n   */\n  //syncComponentUpdates: true,\n\n  /** Processes all created VNodes.\n   *\t@param {VNode} vnode\tA newly-created VNode to normalize/process\n   */\n  //vnode(vnode) { }\n\n  /** Hook invoked after a component is mounted. */\n  //afterMount(component) { },\n\n  /** Hook invoked after the DOM is updated with a component's latest render. */\n  //afterUpdate(component) { }\n\n  /** Hook invoked immediately before a component is unmounted. */\n  // beforeUnmount(component) { }\n}\n","// render modes\n\nexport const NO_RENDER = 0\nexport const SYNC_RENDER = 1\nexport const FORCE_RENDER = 2\nexport const ASYNC_RENDER = 3\n\nexport const ATTR_KEY = '__omiattr_'\n\n// DOM properties that should NOT have \"px\" added when numeric\nexport const IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|ows|mnc|ntw|ine[ch]|zoo|^ord/i\n","import { define } from './define'\n\nexport function tag(name) {\n  return function(target) {\n    define(name, target)\n  }\n}\n","export function getHost(component) {\n  let base = component.base\n  if (base) {\n    while (base.parentNode) {\n      if (base.parentNode._component) {\n        return base.parentNode._component\n      } else {\n        base = base.parentNode\n      }\n    }\n  }\n}\n","var n=function(t,r,u,e){for(var p=1;p<r.length;p++){var s=r[p++],a=\"number\"==typeof s?u[s]:s;1===r[p]?e[0]=a:2===r[p]?(e[1]=e[1]||{})[r[++p]]=a:3===r[p]?e[1]=Object.assign(e[1]||{},a):e.push(r[p]?t.apply(null,n(t,a,u,[\"\",null])):a)}return e},t=function(n){for(var t,r,u=1,e=\"\",p=\"\",s=[0],a=function(n){1===u&&(n||(e=e.replace(/^\\s*\\n\\s*|\\s*\\n\\s*$/g,\"\")))?s.push(n||e,0):3===u&&(n||e)?(s.push(n||e,1),u=2):2===u&&\"...\"===e&&n?s.push(n,3):2===u&&e&&!n?s.push(!0,2,e):4===u&&r&&(s.push(n||e,2,r),r=\"\"),e=\"\"},f=0;f<n.length;f++){f&&(1===u&&a(),a(f));for(var h=0;h<n[f].length;h++)t=n[f][h],1===u?\"<\"===t?(a(),s=[s],u=3):e+=t:p?t===p?p=\"\":e+=t:'\"'===t||\"'\"===t?p=t:\">\"===t?(a(),u=1):u&&(\"=\"===t?(u=4,r=e,e=\"\"):\"/\"===t?(a(),3===u&&(s=s[0]),u=s,(s=s[0]).push(u,4),u=0):\" \"===t||\"\\t\"===t||\"\\n\"===t||\"\\r\"===t?(a(),u=2):e+=t)}return a(),s},r=\"function\"==typeof Map,u=r?new Map:{},e=r?function(n){var r=u.get(n);return r||u.set(n,r=t(n)),r}:function(n){for(var r=\"\",e=0;e<n.length;e++)r+=n[e].length+\"-\"+n[e];return u[r]||(u[r]=t(n))};export default function(t){var r=n(this,e(t),arguments,[]);return r.length>1?r:r[0]}\n"]}