{"version":3,"sources":["../src/h.js","../src/util.js","../src/clone-element.js","../src/render-queue.js","../src/vdom/index.js","../src/dom/index.js","../src/style.js","../src/vdom/diff.js","../src/define.js","../src/vdom/component-recycler.js","../src/obaa.js","../src/tick.js","../src/observe.js","../src/vdom/component.js","../src/component.js","../src/render.js","../src/rpx.js","../src/model-view.js","../src/class.js","../src/render-to-string.js","../src/children.js","../src/create-context.js","../src/omi.js","../src/vnode.js","../src/options.js","../src/constants.js","../src/tag.js","../src/get-host.js","../node_modules/htm/dist/htm.mjs"],"names":["h","nodeName","attributes","lastSimple","child","simple","i","children","arguments","length","stack","push","pop","undefined","String","p","VNode","key","options","vnode","extend","obj","props","applyRef","ref","value","current","isArray","Object","prototype","toString","call","getUse","data","paths","forEach","path","index","isPath","getTargetByPath","keys","tempPath","tempVal","args","apply","origin","arr","replace","split","len","cloneElement","slice","enqueueRender","component","_dirty","mapping","hydrating","isSameNodeType","node","splitText","_componentConstructor","normalizedNodeName","toLowerCase","defaultProps","doc","createElementNS","createElement","_ref","createNode","a","b","cssTxt","isSvg","rule","map","o","x","trim","s","Array","Symbol","iterator","_ref3","properties","next","done","_ref2","property","style","parseCSSText","match","cssText","parentNode","removeChild","setAccessor","name","old","className","IS_NON_DIMENSIONAL$1","test","oldJson","currentJson","changed","ckey","result","setStyles","substring","addEventListener","eventProxy","useCapture","touchStart","touchEnd","_listeners","removeEventListener","removeAttribute","ns","removeAttributeNS","setAttributeNS","setAttribute","e","this","event","___touchY","touches","pageY","Math","abs","changedTouches","pageX","___touchX","document","body","scrollTop","___scrollTop","styleCache","item","ctor","attrName","getCtorName","styleId","prefix","re","css","g0","g1","g2","g3","appendClass","addStyle","id","ele","head","getElementsByTagName","appendChild","someThingStyles","getElementById","textContent","window","ActiveXObject","styleSheet","addStyleWithoutId","attr","scopeVdom","addStyleToHead","scopedStyle","addScopedAttrStatic","vdom","staticStyleMapping","scoper","diffLevel","c","mounts","shift","isSvgMode","afterMount","installed","diff","dom","context","mountAll","parent","componentRoot","ret","out","prevSvgMode","vnodeName","_component","buildComponentFromVNode","createTextNode","replaceChild","recollectNodeTree","vchildren","ATTR_KEY","fc","nodeValue","innerDiffNode","isHydrating","j","originalChildren","keyed","keyedLen","childrenLen","vlen","_child","f","__key","vchild","min","nextSibling","idiff","removeNode","insertBefore","unmountOnly","removeChildren","previousSibling","attrs","use","getPath","updatePath","getUpdatePath","ARRAYTYPE","dataToPath","type","OBJECTTYPE","_objToPath","_arrayToPath","recyclerComponents","Ctor","render","createComponent","constructor","inst","store","Component","initUse","_updatePath","instances","exec","fn","scope","size","nextItem","timeout","fireTick","callbacks","nextTickCallback","update","proxyUpdate","obaa","renderMode","_disable","__ref","setComponentProps","base","beforeInstall","install","componentWillMount","receiveProps","componentWillReceiveProps","prevProps","renderComponent","isChild","state","previousProps","initialChildComponent","previousState","previousContext","prevContext","getDerivedStateFromProps","isUpdate","skip","snapshot","cbase","componentWillUpdate","beforeUpdate","prevState","nextBase","beforeRender","rendered","getChildContext","getSnapshotBeforeUpdate","scopeHost","childComponent","childProps","getNodeProps","toUnmount","_parentComponent","initialBase","baseParent","unmountComponent","t","componentRef","componentDidUpdate","updated","afterUpdate","_renderCallbacks","flushMounts","oldDom","originalComponent","isDirectOwner","isOwner","beforeUnmount","componentWillUnmount","inner","empty","merge","querySelector","Element","nodeType","obsStore","firstChild","extendStoreUpate","prop","val","fixPath","patchs","patch","_this","updateAll","matchGlobalData","globalData","needUpdate","instance","onChange","diffResult","keyA","includePath","indexOf","keyB","pathB","pathA","substr","mpPath","rpx","isNaN","innerWidth","Number","target","define","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","enumerable","writable","configurable","setPrototypeOf","__proto__","ModelView","hasOwn","hasOwnProperty","classNames","arg","classes","argType","join","extractClass","_Array$prototype$slic","unshift","class","VOID_ELEMENTS","isLargeString","str","JS_TO_CSS","opts","assign","scopedCSS","_renderToString","values","html","pretty","encodeEntities","isComponent","indentChar","__x","cssStr","cssAttr","scopedCSSAttr","v","sortAttributes","hooked","styleObjToCss","attributeHook","sub","isVoid","pieces","indent","childSvgMode","hasLarge","assign$1","htm","r","n","_classCallCheck$1","ARR","concat","y","MAX_SIGNED_31_BIT_INT","on","handler","handlers","off","get","set","newValue","changedBits","onlyChild","createContext","id$1","Provider","_temp","_ret","_len","_inherits$1","_Component","contextProp","emitter","nextProps","process","env","NODE_ENV","oldValue","calculateChangedBits","Consumer","_temp2","_this2","_ret2","_len2","_key2","getValue","onUpdate","observedBits","setState","_possibleConstructorReturn$1","_Component2","componentDidMount","_classCallCheck$2","renderContainer","callback","wrap","ContextProvider","container","existing","_preactCompatRendered","renderSubtreeIntoContainer","EmptyComponent","findDOMNode","unmountComponentAtNode","callMethod","ctx","m","shallowDiffers","skipDuplicates","multihook","hooks","propsHook","afterRender","DEV","propTypes","displayName","getInitialState","refs","newComponentHook","PureComponent","isWeb","root","global","runListeners","oEvent","iLstId","iElId","oEvtListeners","oListeners","aEls","aEvts","sEventType","fListener","nElIdx","aElListeners","splice","proto","propertiesObject","F","Error","usePromise","Promise","__config__","platform","systemVersion","defer","resolve","then","bind","setTimeout","_observe","doRender","$observer","eventPropArr","isInArray","isString","$observeProps","$observerPath","watch","propertyChangedHandler","propChanged","onPropertyChanged","rootName","mock","methods","all","RegExp","triggerStr","cprop","isFunction","toUpperCase","currentValue","defineProperty","_getRootName","isReactComponent","elementId","fire","componentChange","_willUpdate","detail","forceUpdate","is","_classCallCheck","ignoreLines","u","Map","Children","toArray","only","WeElement","REACT_ELEMENT_TYPE","for","isValidElement","element","unstable_renderSubtreeIntoContainer","getDOMNode","isPureReactComponent","isMounted","shouldComponentUpdate","defineElement","createRef","rerender","createPortal","getHost","tag","omi","Omi","version","module","exports"],"mappings":";;IAiCO,SAASA,EAAEC,UAAUC;QAC1B,IACEC,YACAC,OACAC,QACAC,GAJEC;QAKJ,KAAKD,IAAIE,UAAUC,QAAQH,MAAM,KAC/BI,MAAMC,KAAKH,UAAUF;QAEvB,IAAIJ,cAAqC,QAAvBA,WAAWK,UAAkB;YAC7C,KAAKG,MAAMD,QAAQC,MAAMC,KAAKT,WAAWK;mBAClCL,WAAWK;;QAEpB,OAAOG,MAAMD,QACX,KAAKL,QAAQM,MAAME,eAAwBC,MAAdT,MAAMQ,KACjC,KAAKN,IAAIF,MAAMK,QAAQH,OAAOI,MAAMC,KAAKP,MAAME,UAC1C;YACL,IAAqB,oBAAVF,OAAqBA,QAAQ;YAExC,IAAKC,SAA6B,qBAAbJ,UACnB,IAAa,QAATG,OAAeA,QAAQ,SACtB,IAAqB,mBAAVA,OAAoBA,QAAQU,OAAOV,aAC9C,IAAqB,mBAAVA,OAAoBC,UAAS;YAG/C,IAAIA,UAAUF,YACZI,SAASA,SAASE,SAAS,MAAML,YAC5B,IAAwB,MAApBG,SAASE,QAClBF,aAAYH,cAEZG,SAASI,KAAKP;YAGhBD,aAAaE;;QAIjB,IAAIU,IAAI,IAAIC;QACZD,EAAEd,WAAWA;QACbc,EAAER,WAAWA;QACbQ,EAAEb,aAA2B,QAAdA,kBAAqBW,IAAYX;QAChDa,EAAEE,MAAoB,QAAdf,kBAAqBW,IAAYX,WAAWe;QAGpD,SAAsBJ,MAAlBK,QAAQC,OAAqBD,QAAQC,MAAMJ;QAE/C,OAAOA;;ICsFF,SAASK,OAAOC,KAAKC;QAC1B,KAAK,IAAIhB,KAAKgB,OAAOD,IAAIf,KAAKgB,MAAMhB;QACpC,OAAOe;;IAOF,SAASE,SAASC,KAAKC;QAC5B,IAAW,QAAPD,KACF,IAAkB,qBAAPA,KAAmBA,IAAIC,aAC7BD,IAAIE,UAAUD;;IAqChB,SAASE,QAAQN;QACtB,OAA+C,qBAAxCO,OAAOC,UAAUC,SAASC,KAAKV;;IAYjC,SAASW,OAAOC,MAAMC;QAC3B,IAAMb;QACNa,MAAMC,QAAQ,SAACC,MAAMC;YACnB,IAAMC,SAAyB,mBAATF;YACtB,IAAIE,QACFjB,IAAIgB,SAASE,gBAAgBN,MAAMG,YAC9B;gBACL,IAAMnB,MAAMW,OAAOY,KAAKJ,MAAM;gBAC9B,IAAMX,QAAQW,KAAKnB;gBACnB,IAAqB,mBAAVQ,OACTJ,IAAIgB,SAASE,gBAAgBN,MAAMR,aAC9B;oBACL,IAAMgB,WAAWhB,MAAM;oBACvB,IAAwB,mBAAbgB,UAAuB;wBAChC,IAAMC,UAAUH,gBAAgBN,MAAMQ;wBACtCpB,IAAIgB,SAASZ,MAAM,KAAKA,MAAM,GAAGiB,WAAWA;2BACvC;wBACL,IAAMC;wBACNF,SAASN,QAAQ,SAAAC;4BACfO,KAAKhC,KAAK4B,gBAAgBN,MAAMG;;wBAElCf,IAAIgB,SAASZ,MAAM,GAAGmB,MAAM,MAAMD;;;gBAGtCtB,IAAIJ,OAAOI,IAAIgB;;;QAGnB,OAAOhB;;IAGF,SAASkB,gBAAgBM,QAAQT;QACtC,IAAMU,MAAMV,KACTW,QAAQ,MAAM,IACdA,QAAQ,OAAO,KACfC,MAAM;QACT,IAAItB,UAAUmB;QACd,KAAK,IAAIvC,IAAI,GAAG2C,MAAMH,IAAIrC,QAAQH,IAAI2C,KAAK3C,KACzCoB,UAAUA,QAAQoB,IAAIxC;QAExB,OAAOoB;;IC/PF,SAASwB,aAAa/B,OAAOG;QAClC,OAAOtB,EACLmB,MAAMlB,UACNmB,OAAOA,WAAWD,MAAMjB,aAAaoB,QACrCd,UAAUC,SAAS,OAAO0C,MAAMpB,KAAKvB,WAAW,KAAKW,MAAMZ;;;;;;;QCDxD,OAAS6C,IAAAA,MAAAA,OACd,IACGC,EAAAA,KAAUC,gBACVD;;aCdCE,eAAkBA,MAAxBpC,OAAAqC;QACA,IAAA,mBAAArC,SAAA,mBAAAA;;;oFAQO,QAASsC,KAAAA,yBAA4BD,YAAWE,MAAAvC,MAAAlB;;QAEnD,OAAAuD,aAAYG,KAALC,0BAAPzC,MAAAlB;;IASF,SAAOuD,YAAAA,MAAkBI;QAC1B,OAAAF,KAAAG,QAAA5D,YAAAyD,KAAAzD,SAAA6D,kBAAA7D,SAAA6D;;;QAeD,IAAAxC,QAAAF,WAAAD,MAAAjB;;;;QAYE,OAAI6D;;;QASJ,IAAAL,OAAOpC,QAAPJ,QAAA8C,IAAAC,gBAAA,8BAAAhE,YAAAiB,QAAA8C,IAAAE,cAAAjE;QACDyD,KAAAG,MAAA5D;;;;;wBCpDMkE,OAASC,OAAWnE,MAAAA,2BAAiBoE,GAAAC,GAAAC,UACtCb,IAAAA,KAAOc,IAGXd,IAAKG,KAAAA,IACLY,OAAAN,KAAA;QAKI,IACDE,aADCI,KAAAzB,MAAA,KAAA0B,IAAA,SAAAC;YAAA,OAAAA,EAAA3B,MAAA,KAAA0B,IAAA,SAAAE;gBACKH,OADLG,KAAAA,EAAAC;;;QAEU,KAAA,IAAKC,IAAE/B,YAAQzC,IAAUyE,MAAApD,QAAArB,IAAAA,IAAA,GAAAA,IAAAA,IAAAA,IAAAA,EAAA0E,OAAAC,gBAAA;YAAA,IAAAC;YAAvC,IAAA5E,GAAA;gBACI6E,IAAAA,KAAAA,EAAAA,QACDnC;gBACIkC,QAAOlC,EAAAA;mBAAe;gBAAtB1C,IAAAA,EAAA8E;gBAFP,IAAA9E,EAAA+E,MAAA;gBAGAH,QAAA5E,EAAAmB;;YAAA,IAAA6D,QAAAJ;YAAA,IAAAK,WAAAD,MAAA;YAAA,IAAA7D,QAAA6D,MAAA;YAAAE;gBARF,OAASC,EAAAA,QAAT,UAA+B,SAAAC;oBACzBnB,OAAAA,MAASoB,OAAQ5C,GAAAA;;cAOrBwC,aAAA9D;;QAAA,OAAA+D;;IAAA,SAAUD,WAAV7B;QAAA,IAAAkC,aAAAlC,KAAAkC;QAA0CJ,IAAAA,YAAcD,WAAdM,YAAAnC;;IAY5C,SAAAoC,YAAApC,MAAAqC,MAAAC,KAAAvE,OAAA+C;;;;;+CASOd,KAASoC,YAAYpC,SAAMqC,SAC5BA,IAAS,YAATA;YAEAA,KAAAA,SAAgB,mBAAAtE,SAAA,mBAAAuE,KAClBtC,KAAA8B,MAAAG,UAAAlE,SAAA;YAEAF,IAAAA,SAAA,mBAAAE,OAAA;gBACAF,IAAA,mBAAAyE,KACK,KAAID,IAAAA,KAASC,KACbC,MAAL3F,KAAiBmB,QAASiC,KAA1B8B,MAAAlF,KAAA;gBAGE,KAAKmB,IAADnB,KAAUmB,OACZiC,KAAK8B,MAAMG,KAAX,mBAAqBlE,MAASnB,OAA9B,MAAA4F,qBAAAC,KAAA7F,KAAAmB,MAAAnB,KAAA,OAAAmB,MAAAnB;;eAGA;YACE,IAAA8F,UAAAJ,KAAmBK,cAAW5E;YAA9B,IAAA,mBAAAuE,KACDI,UAAAX,aAAAO;YAECtC,IAAA,mBAAK8B,OAINa,cAAAZ,aAAAhE;YAGH,IAAI2E,aACFC,WAAAA;YAEAD,IAAAA,SAAUX;gBACX,KAAA,IAAAxE,OAAAmF,SACG,IAA0B,mBAAnB3E,iBAAmBR,OAAAoF,cAAA;oBAC5BA,OAAAA,OAAcZ;oBACfa,WAAA;;8CAKGF,IAAAA,YAASG,UAAAH,QAAAG,OAAA;oBACXC,OAASvF,QAAOmF,YAASG;oBACvBD,WAAWD;;gBAIZ,IAAAC;mBAIGE,KAAAA,UAAAH;eAGH,IAAA,8BAAAN;;eAED,IAAa,OAATO,KAAAA,MAAS,OAAAP,KAAA,IAAA;YACXrC,IAAAA,aAAK+C,UAALV,OAAAA,KAAAhD,QAAA,YAAA;YACDgD,OAAAA,KAAAjC,cAAA4C,UAAA;YACF,IAlBDjF;gBAmBEiC,KAAAA,KAAK+C;oBACN/C,KAAAiD,iBAAAZ,MAAAa,YAAAC;oBACF,IAAA,SAAAd,MAAA;wBACIrC,KAAIqC,iBAAS,cAAAe,YAA2BD;wBACzCpF,KAAOiC,iBAAiBjC,YAAAsF,UAAjBF;;;mBAGJd;gBACPrC,KAAIjC,oBAAOsE,MAAAa,YAAAC;gBACT,IAAU,SAANd,MAAM;oBACRrC,KAAKiD,oBAAiBZ,cAAtBe,YAAAD;oBACAnD,KAAIqC,oBAAe,YAAAgB,UAAAF;;;aAGlBnD,KAAAsD,QAAAtD,KAAAsD,WAAAjB,QAAAtE;eACF,IAAA,WAAAsE,QAAA,WAAAA,SAAAvB,SAAAuB,QAAArC,MAAA;YAGD;gBACEA,KAAAA,QAAKuD,QAAAA,QAAoB,KAAAxF;cACzBiC,OAAKuD;YACN,KAAA,QAAAxF,UAAA,MAAAA,UAAA,gBAAAsE,MAAArC,KAAAwD,gBAAAnB;eACF;YACCrC,IAAKsD,KAAAA,SAAetD,UAAKsD,OAAajB,KAAKA,QAAQtE,YAApD;YAlBI,IAmBIsE,QAnBJtE,UAmBuBsE,MAAVtE,OAClB,IAAA0F,IAAAzD,KAAA0D,kBAAA,gCAAArB,KAAAjC,qBAAAJ,KAAAwD,gBAAAnB,YACA,IAAA,qBAAAtE,OACA,IAAI0F,IAAAzD,KAAA2D,eAAA,gCAAAtB,KAAAjC,eAAArC,aAAAiC,KAAA4D,aAAAvB,MAAAtE;;;IAcH,SAPDmF,WAOWW;QACT,OAAAC,KACE9D,IAAK2D,EAAAA,MAALnG,QACEuG,SAAAvG,QAAAuG,MADFF,MAEExB;;IAMT,SAAAe,WAAAS;;QAEDC,KAAAE,IAAAH,EAAAI,QAAA,GAAAC;;;IAIE,SAAOb,SAAKC;QACb,IAAAa,KAAAC,IAAAP,EAAAQ,eAAA,GAAAC,QAAAR,KAAAS,KAAA,MAAAJ,KAAAC,IAAAP,EAAAQ,eAAA,GAAAH,QAAAJ,KAAAE,KAAA,MAAAG,KAAAC,IAAAI,SAAAC,KAAAC,YAAAZ,KAAAa,KAAA;;;;;QAQD,KAAA,IAAStB,IAAAA,GAASQ,MAAGrG,QAAAoH,WAAA7H,QAAAH,IAAA2C,KAAA3C,KAAA;YACnB,IACEuH,OAASN,QAAEQ,WAAFzH;YAKV,IAAAiI,KAAAC,SAAAA,MACF,OAAAD,KAAAE;;QC9KM,IAAAA,WAASC,MAAYF;QAC1BtH,QAAKoH,WAAWrF;YAAM/B,MAAQoH;YAAAA,UAA9BG;;QACEE;QAEA,OAAIJ;;;QAKNK,SAAIH,MAAWG,OAAMD,gBAArB;QAEAA,MAAAA,IAAAA,QAAAA,mCAAAA;QAEA,IAAAE,KAAOJ,IAAAA,OAAP,mDAAA;QAUAK,MAAAA,IAAA/F,QAAA8F,IAAA,SAAAE,IAAAC,IAAAC,IAAAC;;;YAUE,IAAIC,cAAcH,GAAAjG,QAAlB,UAA+B,MAAA6F,SAAAK;;;QAW9B,OAAAH;;IAGD,SAAAM,SAAAzD,SAAA0D;;QAEA,IAAAC,MAAOH,SAAAA,eAAPE;QACA,IAAAE,OAAArB,SAAAsB,qBAAA,QAAA;QACD,IAnBDF,OAAAA,IAAA1D,eAAA2D;;QAwBKA,KAAAE,YAAkB9D;QACvB0D,gBAAQvF,aAAR,QAAA;QACA4F,gBAAUxB,aAASyB,MAAeN;QAClC,IAAIE,OAAOrB,eACXwB,gBAAe9D,WAAJD,UAAyBA,cAEnC+D,gBAAAE,cAAAjE;;IAID+D,SAAAA,kBAAgBpC;QAChBoC,IAAAA,OAAAA,SAAgBpC,qBAAhB,QAAA;QACA,IAAIuC,kBAAOC,SAAe5F,cAAA;QACxBwF,KAAAA,YAAAA;QACDA,gBAAMpC,aAAA,QAAA;QAEN,IAAAuC,OAAAC,eACFJ,gBAAAK,WAAApE,UAAAA,cAEM+D,gBAASM,cAATrE;;IAIL+D,SAAAA,oBAAgBpC,MAAa2C;iCAE7BC,UAAWJ,MAAAA;;IAIV,SAAAK,eAAA3E,OAAAyE;QACF,IAAA/I,QAAAkJ;;gBAEMhB,SAASiB,OAAAA,OAAoBC,OAAML;gBACpC/I,QAAQkJ,mBAAaH,SAAA;;eAExB,KAAA/I,QAAAqJ,mBAAAN,OAAA;YACFD,kBAAAxE;;;;IAKK4D,SAAAA,UAASoB,MAAOhF;QAChBtE,IAAQqJ,mBAARrJ,MAAA;YACDoJ,KAAApK,aAAAoK,KAAApK;YAJHoK,KAKOpK,WAAKgB,QAAQqJ;YAClBP,KAAAA,MAAAA,KAAAA;YACA9I,KAAAA,IAAQqJ,QAAAA;YACTD,KAAA/J,SAAA4B,QAAA,SAAA/B;gBACF,OAAA8J,UAAAD,MAAA7J;;;;IAKGkK,SAAKpK,UAALoK,MAAAxB;QACAwB,IAAgBxB,mBAAhBwB,QAAAxB,KAAA;YACAwB,KAAKxB,aAAYwB,KAAjBpK;YACAoK,KAAK/J,IAAAA,OAAS4B,KAAQmI,KAAApK,WAASgK,OAAgB9J;;;ICtG5C,SAAIqK;;QAEX,OAAAC,IAAAC,OAAAC,SAAA;YACIC,IAAAA,QAAYC,YAAhB5J,QAAA4J,WAAAJ;;YAEA,IAAAA,EAAAK,WAAAL,EAAAK;YACIvH,IAAAA,EAAAA,YAAJsF,OAAA4B,EAAA5B;;;IAmBG,SAAAkC,KAAAC,KAAA9J,OAAA+J,SAAAC,UAAAC,QAAAC;;;;;QASI,IAAAC;QAEL,IAAI3J,QAAC8I,QACHtJ;YACA0J,UAAYO;;;QAKdE,MAAIA,MAAAA,KAAJnK,OAAA+J,SAAAC,UAAAE;QAEA,IAAI1J,UAAQR,IAAZyE,eAAoBwF,QAAAA,OAAA3B,YAAA6B;QAGhB/K,OAAAA,WAAUY;YAFJqC,aAAR;;;QAQF,OAAI4H;;IAIF5H,SAAAA,MAAAA,KAAYrC,OAAZ+J,SAAAC,UAAAE;QACA,IAAAE,MAAAN,KACAO,cAAKH;QAGP,IAAA,QAAAlK,SAAA,oBAAAA,OAAAA,QAAA;QAGF,IAAAsK,YAAAtK,MAAAlB;QACA,IAAAiB,QAAAqC,QAAoBpC,YAApB;YACEA,MAAIoK,WAAJrK,QAAAqC,QAAAkI;YAAA,OACED,wBADFP,KAAA9J,OAAA+J,SAAAC;;;YAOA,IAAIM,YAAJ5K,MAAI4K,IAAYtK,aAAhB8J,IAAArF,gBAAAqF,IAAAS,cAAAL;gBAEElK,IAAMlB,IAAAA,aAAWiB,OACjB+J,IAAOU,YAAAA;;gBAILJ,MAAArD,SAAA0D,eAA6BzK;gBAC/B,IAAA8J,KAAA;oBAEEA,IAAAA,IACAA,YAAAA,IAAArF,WADAiG,aAEIjG,KAFJqF;oBAKAa,kBAAAb,MAAA;;;YAKA;gBACAM,IAAeK,cAAAA;cACf,OAAArE;YAEEuE,OAAAA;;4CAIJ,OAAAH,wBAAAV,KAAA9J,OAAA+J,SAAAC;;;QAQF,KAAIF,QAAOQ,YAAcR,KAAAQ,YAAY;YACnCF,MAAAnH,WAAOuH,WAAAA;;gBAITd,OAAAA,IACEY;gBAOFA,IAAAA,IAAY3K,YAAO2K,IAAP7F,WAAZiG,aAAAN,KAAAN;;;;QAM2BM,IAAAA,KAAAA,IAAI9B,YAA3BnI,QAFOiK,IAAA,YAKPQ,YAAQnG,MAARrF;QAEA,IAAA,QAAAe,OAAA;YACAwK,QAAAA,IAAA;YACD,KAAA,IAAAzH,IAAAkH,IAAArL,YAAAI,IAAA+D,EAAA5D,QAAAH,OACFgB,MAAA+C,EAAA/D,GAAAyF,QAAA1B,EAAA/D,GAAAmB;;;YAMD,IAAIH,GAAAA,aAAeyK,UAAA,IACjBzK,GAAAA,YAAY0K,UAAZ;eAGD,IAAAD,aAAAA,UAAAtL,UAAA,QAAAwL;QAaGA,eAAGC,KAAYH,MAAAA,YAAfzK;QAGJuJ,YAAAW;QAEEW,OAAAA;;IAgBH,SAAAA,cAAAlB,KAAAc,WAAAb,SAAAC,UAAAiB;YASDC,GACMC,GACF/L,GACAgM,QACAC,0CAXJjM;QAQE,IAMEkM,MAAAA,KANF,KAOEC,IAAOX,IAAAA,GAAAA,IAAAA,KAAYA,KAAAA;YACnBM,IAAAA,SARFC,iBAAAhM,IASEoK,QATFiC,OAAA,YAUEC,MAVFF,QAAApL,QAAAqL,OAAAjB,aAAAiB,OAAAjB,WAAAmB,MAAAvL,MAAAL,MAAA;YAWE6L,IAAAA,QAAAA,KAXF;gBAYE1M;;mBAEF,IAAAkB,eAAAT,MAAA8L,OAAAhJ,YAAAyI,cAAAO,OAAAT,UAAArH,UAAA,IAAAuH,cACInJ,SAAWwJ,iBAAAE;;QAUX,IAAI1L,MAAJyL,MACEF,KAAAA,IAAAA,IAAAA,GAAAA,IAAAA,MAAAA,KAAAA;YACAD,SAAMtL,UAAOb;YACdA,QAAM;YAUR,IAAAa,MAAA6L,OAAA7L;YACF,IAAA,QAAAA;;oBAEGyL,QAAYH,MAAAtL;oBACTsL,MAAIjM,YAAOA;oBACdwM;;mBAII7L,IAAAA,MAAM6L,aACN7L,KAAAA,IAAO8L,KAAMV,IAAAI,aAAAJ,KACXG,SAAkBvL,MAAlBuL,SAAYD,MAAe1L,eAAW6J,IAAAnK,SAAA8L,IAAAS,QAAAV,cAAA;gBACxChM,QAAQmM;gBACRA,SAAAF,UAAaxL;gBACb2L,IAAAA,MAAAA,cAAAA,GAAAA;gBACD,IAAAH,MAAAU,KAAAA;gBACF;;YASKxM,QAAAA,MAAAA,OAAAuM,QAAcjM,SAAdsK;YAEAyB,IAAAN,iBAAAhM;YACA,IAAAF,SAAAA,UAAA6K,OAAA7K,UAAAwM,GACD,IAAA,QAAAA,GACF3B,IAAAxB,YAAArJ,aACF,IAAAA,UAAAwM,EAAAI,iCAGD5M,IAAQ6M,aAAaH,OAAbF;;QAOJM,IAAAA,UACD,KAFM,IAAA5M,KAEAiM,OACLtB,SAAIkC,MAAJlC,MAAIkC,IAAoBP,kBAAxBL,MAAAjM,KAAA;mCAMR,SAAAO,OAAAT,QAAAG,SAAAkM,iBAAAX,kBAAA1L,QAAA;;IAOA,SAAO2M,kBAAPrJ,MAA2B0J;QACzB,IAAA/J,YAAa9C,KAAAA;QAEd,IAAA8C,6CAGH;;YAKE,KAAqBqI,MAAjBrI,eAAJ,QAAAK,KAAA,YACIL,WAAWK;YAAf2J,eAGO3J;;;;QASL2J,OAAAA,KAAAA;QACD,OAAA3J,MAAA;YACF,IAAA0B,OAAA1B,KAAA4J;;YAED5J,OAAA0B;;;IASI1B,SAAAA,eAAAuH,KAAAsC,OAAAvH;QACD,IAAAD;QAGH,KAAAA,QAAAC;4BAQE,MAAA,eAAAD,QAAA,gBAAAA,QAAAA,QAAAC,OAAAuH,MAAAxH,WAAA,YAAAA,QAAA,cAAAA,OAAAkF,IAAAlF,QAAAC,IAAAD,SACAD,YAAAmF,KAAkBlF,MAAAC,IAAAD,OAAAC,IAAAD,QAAAwH,MAAAxH,OAAA8E;;;QAMlB3J,QAAAqC,QAAAwC,QAAAyC;QACA,IAAAA,KAAAgF,KACEhF,KACEzC,aAAS0H,QAATjF,KACAzC,WAKAD,IAAAA,KAAYmF,MAEfzC,KAAAkF,aAAAC,cAAAnF,KAAAvG;;IC5WH,SAAM2L,QAAYvM;;YAEX,IAAAmF;YACLtF,IAAAA,QAAQqC,SAAgBiF;gBACpBA,IAAU,mBAAAD,MACZC,OAAKkF,SAAaD,QACTjF;oBACT,IAAA/F,WAAA8F,KAAA3G,OAAAY,KAAA+F,MAAA;oBACAC,IAAkBmF,mBAAlBlL,UACD+D,OAAA/D,aAAA,4CAGagL,OAAQpM,SAAK,OAAA,QAEnBmF,SAAN,GAAArE,QAAA,SAAAC;wBACID,OAAQqE,OAAApE,SAAQ;;;;YAMdoE,OAAAA;eAEA,OAAAmH,cAAWlL;;IAGW,SAAAkL,cAASnH;QAAT,IAAAA;QACrBqH,WAAA5L,MAAAuE;QACF,OAAAA;;IAGL,SAAAqH,WAAA5L,MAAAuE;QACD5E,OAAMY,KAAAP,MAAAE,QAAA,SAAAlB;YACLuF,OAAOmH,QAAAA;YACR,IAAAG,OAAAlM,OAAAC,UAAAC,SAAAC,KAAAE,KAAAhB;YACF,IAAA,sBAAA6M,+CAEeH,IAAc1L,qBAAd0L,MACRnH,aAANvE,KAAAhB,MAAAA,KAAAuF;;;IAKF,SAASqH,WAAW5L,MAAMuE,MAA1BA;QACE5E,OAAOY,KAAKP,MAAME,QAAQ,SAAAlB;YACxBuF,OAAOvF,OAAO,MAAdA,QAAA;mBACM6M,OAAOlM;YACb,IAAIkM,OAAAA,OAASC,UAAYjM,SAAAC,KAAAE,KAAAhB;YACvB+M,IAAW/L,sBAAX+L,MADFA,WAEWF,KAAAA,MAASF,OAAW,MAAA3M,KAAAuF,cAC7ByH,IAAkBhN,qBAAlBgN,MACDA,aAAAhM,KAAAhB,MAAAmB,OAAA,MAAAnB,KAAAuF;;;IAKH5E,SAAOY,aAAWL,MAAQC,MAAAoE;QACxBA,KAAAA,QAAOpE,SAAanB,MAAOoB;YAC3BmE,OAAOA,OAAOpE,MAAdC,QAAA,QAAA;mBACMyL,OAAOlM;YACb,IAAIkM,OAAAA,OAASC,UAAYjM,SAAAC,KAAAwG;YACvByF,IAAW/L,sBAAX+L,MADFA,WAEWF,MAAAA,OAASF,MAAWvL,QAAA,KAAAmE,cAC7ByH,IAAkBhN,qBAAlBgN,MACDA,aAAA1F,MAAAnG,OAAA,MAAAC,QAAA,KAAAmE;;;;kBC1DQ0H,IAAAA,mBAANzN;QAEP,IAAA0N,KAAAtM,aAAAsM,KAAAtM,UAAAuM,QAAA;;;;;;;;QAQOjN,UAASkN,KAAAA,gBAAsB/M,MAAO4J;QAC3C,IACE5K,KAAI4N,SAAAA,KAAAA,MAAmBzN;YAErB0N,KAAKtM,MAAAA,OAAasM,KAAKtM,MAAAA,MAAUuM,KAArCE,YAA6Cd;YAC3Ce,KAAOC,MAAIL,UAAYjD,KAAAA;eACvBuD,IAAU1M,KAAKwM,SAAMjN;YAFvB,IAGOkM,MAAAe,KAAAG;YACLH,KAAOI,IAAcrN,QAAO4J;YAC5BqD,KAAKD,MAAAA,OAAcH,KAAnBK,MAAAvM,MAAAuL;YACAe,KAAKH,MAALQ,UAAAjO,KAAA4N;;QAIF,OAAIA,KACF,IAAIA,mBAAiBf,GAAKc,gBAAAH,MAAA;YACxBI,KAAKf,MAAMxL,mBAAwBuM,GAAAA;YACnCA,mBAAWK,OAAeL,GAAAA;YAF5B,OAGOA;;QAILA,OAAAA;;IAIJ,SAAOjO,SAAKgB,OAAAW,MAAAiJ;QACV,OAAIgD,KAAAA,YAAAA,OAAsBI;;ICiM5B,SAAIO;QACFxN,UAAAc,QAAYV,SAAZ8G;YACDA,KAAAuG,GAAA/M,KAAAwG,KAAAwG;;QAGHhK,iBAAgBiK,QAAO,SAASvO;YAC9BwO,SAAAH,GAAcrO,KAAAA,SAAdsO;;;;;QC9OK,IAAAG,UAASC;QACdC,KAAAA,IAAAA,MAAUjN;YACRoG,KAAAA,IAAQxG,GAGVsN,IAAAA,IAAAA,YAAiBlN,aAAQ;gBACvB8M,aAAYlN;gBAEdsN,UAAAA,WAAA;oBACD/F,IAAAgG;;mBCbeC;mBACVL;gBACJM,IAAKlG;gBACH6F;;;;IAWE7F,SAAAA,kBAAAjG,WAAA/B,OAAAmO,YAAAvE,SAAAC;QACAgE,KAAAA,UAAAA,KAAAA;YACD9L,UAAAqM,OAAA;YAEJrM,UAAAsM,MAAArO,MAAAE;;;;;;mBCSeoO,IAAAA,UAAAA,2BAOVvM,UAAUqM,0BAAUpO,OAAA4J;YAIxB7H,KAAAA,UAAAwM,QAAkBvO,UAAlB;gBACA,IAAA+B,UAAAyM,eAAAzM,UAAAyM;gBACA,IAAAzM,UAAA0M,SAAA1M,UAAA0M;mDAEIR,YAAOlM;mBAEP,IAAIA,UAAU2M,cACf3M,UAAM4M,aAAcC,OAAAA,SAAAA,UAA2B5O;YAGjD,IAAA4J,WAAAA,YAAA7H,UAAA6H,SAAA;;gBAED7H,UAAKA,UAAD6H;;YAGF,KAAA7H,UAAIA,KAAUiL,UAAd6B,MAAmC9M,UAAA/B;YACjCiO,UAAAA,QAAYlM;YAEfA,UAAMqM,OAAcO;YAEpB,IAAA,MAAAR,4FAEGvE,gBAAWA,WAAY7H,GAAAA,gBAEzBA,cAAU6H;YAIZ7H,SAAAA,UAAkB/B,KAAlB+B;;;IAaG,SAAA+M,gBAAA/M,WAAAoM,YAAAtE,UAAAkF;QACF,KAAAhN,UAAAqM,KAAA;YAEDnO,IAqCID,UACFgP,MACApF,OAvCF3J,QAAS8B,UAAUsM,OACpBW,QAAAjN,UAAAiN,oCA2BDC,gBAAAlN,UAAA8M,OAAA7O,oLAMOkP,wBAAyBnN,UAAWoM,YACrCpM,QAAAA;YAEJ,IAIEoN,UAAAA,YAAgBpN,0BAJlB;gBAAAiN,QAKEI,OAAAA,WAAkBrN,QAAUsN,UAAVrC,YALpBsC,yBAAAtP,OAAAgP;gBAAAjN,UAMEwN,QAAWxN;;YANb,IAUEyN,UAAO;gBAVTzN,UAWE0N,QAAWL;gBAXbrN,UAaEkL,QAbFkC;gBAAApN,UAcE2N,UAdFN;0IAgBIrN,QAAAA,QACFiN;oBAIAjN,IAAAA,UAAA4N,qBACD5N,UAAA4N,oBAAA3P,OAAAgP,OAAApF;oBAGG2F,IAAAA,UAAUK,cACZ7N,UAAU/B,aAAQiP,OAAlBD,OAAApF;;gBAgBI7H,UAAAA,QAAU6N;gBACX7N,UAAAiN,QAAAA;;;YAKHjN,UAAA8M,MAAA9M,UAAA8N,MAAA9N,UAAAsN,MAAAtN,UAAA+N,MAAA;YACA/N,UAAAC,OAAA;YAEA,KAAAwN,MAAA;gBACAzN,UAAAgO,gBAAAhO,UAAAgO;gBACAC,WAAAjO,UAAA+K,OAAA9M,OAAAgP,OAAApF;gBAGA,IAAA7H,UAAAiL,YAAAxF,OAAAzF,UAAAyF,KACAzF,oBAAoB6H,UAApB,OAAAxC,YAAArF,UAAAiL;gBAGFjL,UAAU8M,UAAY9M,UAAU8N;gBAGhC,IAAKL,UAAMS,iBACTlO,UAAUgO,OAAAA,WAAgBhO,UAAUgO,UAApCE;gBAGA,IAAAV,YAAAxN,UAAAmO,yBACAT,WAAI1N,UAAUiL,wBAAdiC,eAAgDE;oBAIhDgB,iEAEAjJ,OAAAtH,QAAAqC,QAAAmO;gBACA,IAAA,qBAAIrO,gBACF6H,OAAAA;;oBAKD,IAAAyG,aAAAC,aAAAN;;oBAED,IACEO,QAAAA,KAAAA,gBADFrJ,QAAAmJ,WAAA1Q,OAAAsN,KAAA1B,KAEEgD,kBAFFtB,MAAAoD,YAAA,GAAAzG,UAAA,SAGE1C;wBACEqJ,YAAOH;wBAEVrO,UAAAqI,aAAA6C,OAAAF,gBAAA7F,MAAAmJ,YAAAzG;wBACG1C,KAAJ4I,MAAU7C,KAAA6C,OAAAA;wBACR7C,KAAAuD,MAAAzO;;wBAEA+M,gBAAiBwB,MAAAA,GAAAA,WAAaN;;oBAG9BzB,OAAItB,KAAQA;uBACVqB;oBACDoB,QAAMe;oBAGL1O,YAAUqI;oBACV6C,IAAAA,WACAA,QAAKuD,UAAAA,aAAmBzO;oBAGzB,IAAA0O,eAAA,MAAAtC,YAAA;;wBAEDI,OAAOtB,KAAKsB,OAAZyB,UAAApG,SAAAC,aAAA0F,UAAAkB,eAAAA,YAAAnM,aAAA;;;gBAIA,IAAAmM,eAAAlC,SAAAkC,eAAAxD,SAAAiC,uBAAA;oBACAqB,IAAAA,aAAYrB,YAAAA;oBACZ,IAAIqB,cAAWhC,SAAAmC,YAAA;wBACbhB,WAAQ3N,aAAUqI,MAAVqG;;4BAGNA,YAAAA,aAAetC;4BACjB3D,kBAAiBJ,cAAa;;;;gBAYlC,IAAIqG,WACFE,iBAAiBF;;gBAIf,IAAAlC,SAAKgC,SAAW;oBACdE,IAAAA,eAAYrG,WACZI,IAAAA;oBACD,OAAAoG,IAAAA,EAAAJ,MACFK,eAAAD,GAAArC,OAAAA;;oBAGHA,KAAIgC,wBAAWM,aAAA7D;;;YAIfjL,KAAAA,YAAA8H,UACAR,OAAIkF,KAAQxM,iBACV,KAAI8O,MAAAA;gBAMJtC,IAAAA,UAAKjM,oBACNP,UAAA+O,mBAAA7B,eAAAE,eAAAM;uCAGC1N,UAAAgP,QAAalH,eAAUsF,eAAAM;gBAA3B,IAAA7P,QAEY4P,aAAM5P,QAAAoR,YAAAjP;;YAGhB,IAAA,QAAAA,UAAAkP,KACA,OAAAlP,UAAAkP,IAAA9R;YAKA,KAAAgK,cAAc4H,SAASG;;;IAWzB,SAAK/H,wBAAuB+H,KAAAA,OAAAA,SAAAA;QAC7B,IAAA9H,IAAAO,OAAAA,IAAAS,mCAED+G,SAAAxH;;;YASO2E,kBAASjE,GAAAA,OAAT,GAAiCV,SAAjCE;YACLF,MAAQA,EAAAA;eACNyH;YADF,IAEED,sBAFFE,eAAA;gBAGEA,iBAAgBjI;gBAChBkI,MAAAA,SAAUD;;YAGVC,IAAAA,gBAAYtE,MAAFrO,UAAwBA,OAAlCiL,SAAA/J;YACD,IAAA8J,QAAAP,EAAA0G,KAAA;;gBAGCxB,SAAAA;;YADFA,kBAGOlF,GAAApJ,OAAA,GAAA4J,SAAAC;YACLF,MAAIyH,EAAAA;YAEFzH,IAAAA,UAAMwH,QAANA,QAAA;gBACDA,OAAA/G,aAAA;;;;QAKC,OAAAT;;IAQAa,SAAAA,iBAAkB2G;QACnB,IAAAvR,QAAA2R,eAAA3R,QAAA2R,cAAAxP;;QAIJA,UAAAqM,OAAA;QAED,IAAArM,UAAAyP,sBAAAzP,UAAAyP;;0DAKO,KAASb,IAAAA,IAAAA,GAAAA,MAAiB5O,UAA1BmL,MAAqCI,UAAAnO,QAAAH,IAAA2C,KAAA3C,KACtCY,IAAAA,UAAQ2R,MAAAA,UAAe3R,OAAQ2R,WAAcxP;;YAE7CwM;;;QAQJ,IAAIxM,QAAAA,UAAAqI;QACF,IAAAqH,OACEd,iBAAczD,aACZnL,IAAAA,MAAUmL;YACV,IAAA,QAAAqB,KAAA,YAAAtO,SAAAsO,KAAA,WAAArO,KAAA;YAEH6B,UAAA+N,MAAAvB;;YAGHxM,mBAAA1C,KAAA0C;YAEAgK,eAAAwC;;QAGEoC,SAAAA,UAAiBc,KAAjB;;;;;;;;;;QC1WJvL,KAAI6B,QAAJmF;;;IAkDG,SAlCyBJ,OAAAjN,OAAAiK,QAAAoD,OAAAwE,OAAAC;QAoC1B7E,SAAS,mBApCiBhD,SAoCjBlD,SAAAgL,cAAA9H,UAAAA;QApCX,IAAAoD,UAAA,mBAAAA,SAAA,MAAAhO,UAAAC,eAAAI,aAAAsS,YAAA3E,iBAAA2E,WAAA,MAAA3E,MAAA4E;;;QC1BEhI,IAAAA,OACA6H,QAEG,mBAAAA,QAAiB/K,SACf1H,cAAAyS,SACCA;QAKNI,OAAAA,KAAS7E,OAATrN,OAAAqN,QAAA,GAAApD,SAAA;;IAGE,SAAAiI,SAAcC;QACZlI,IAAAA,SAAOvF,MAAAA,MAAYuF;YACpBoD,MAAAI;YACF2E,iBAAA/E;YAEDgB,KAAIyD,MAAOhR,MAAA,SAAAuR,MAAAC,KAAAzN,KAAA5D;gBACT6Q,IAAAA;gBACD,IAAAhS,MAAAyS,QAAAtR,OAAA,MAAAoR;;gBAEDhF,MAAOxD,OAAA2I;;;;IAKLnF,SAAAA,MAAMI,OAAYqE,OAAlBzE;QACA+E,SAAAA;QAEA/D,QAAiB,mBAANvN,QAAawR,SAAUrR,cAAS6Q,SAAAA;QAEzC,OAAAjI,KAAM/J,OAAMyS,OAAQtR;;IAGrB,SALDmR,iBAAA/E;QAMDA,MAAAc,SAAA,SAAAsE;YACF,IAAAC,QAAArM;YAEM,IAAAsM,YAAAC,gBAAoCvM,KAAAwM,YAAAJ;YACzCP,IAAAA,OAAS7E,KAAToF,OAAAnT,SAAA,GAAA;;oBAEAwS,IAAQa,aAAAD,MAAiBC,aAAW5L,SAASgL,YAAcD,cAA3DgB,WAAAL,OAAAM,SAAA5F,YAAAZ,eAAAwG,SAAAvF,KAAAsF,WAAAL,OAAAM,SAAAvF,IAAA;wBAEO3D,IAAKiI,SAAO9R,YAAnBqM,KACD0G,SAAA1G,MAAAxL,OAAAwM,MAAAvM,MAAAiS,SAAA5F,YAAAd,iCAEQ+F,SAAAA,MAAiB/E,OAAOA,MAAAvM,MAAAiS,SAAAxF;;;;gBAI3BlH,KAAKoH,YAAUzM,KAAfgS,SAAuBP;;;;IAWlB,SAAAG,gBAAUG,YAAJE;QACLF,KAAAA,YAAAA,QAAA;QACD,KAAA,IAAAG,QAAAD,YAAA;+CAEDF,QAAAA;YAEH,KAjBD,IAAA5T,IAAA,GAAA2C,MAAA+Q,WAAAvT,QAAAH,IAAA2C,KAAA3C,KAkBA,IAAAgU,YAAAD,MAAsBF,WAASP,KAChC,QAAA;;QAIE,QAASG;;IAGZ,SAAIC,WAAWO,YAAX7G;QACF,KAAA,IAAA2G,QAAAD,YAAA;YACD,IAAA1G,WAAA2G,OACD,QAAS/T;YAEL,KAAA,IAAAkU,QAAA9G,YACD,IAAA4G,YAAAD,MAAAG,OACF,QAAA;;;;IAOD,SAAI9G,YAAW2G,OAAOI;QACpB,IAAA,MAAAC,MAAAH,QAAAE,QAAA;YACD,IAAArP,OAAAsP,MAAAC,OAAAF,MAAAhU,QAAA;YACD,IAAA,QAAA2E,QAA6B,QAAZsI,MACf,QAAI4G;;QAGL,QAAA;;IAGJ,SAAAZ,QAAAtR;;QAED,IAAAU,MAASwR,KAAAA,QAAYI,MAAOD,IAAOzR,MAAA;QACjCF,IAAI4R,QAAMH,SAAQE,MAAdpS;YACF,IAAM+C,OACN,IAAIA,MAAAA,OAAAmD,QACFqM,UAAA,MAAArM,WAEHqM,UAAA,MAAArM,OAAA;;QAMD,OAAMzF;;IAGF,SAAA+R,IAAIC;QACFF,OAAAA,IAAAA,QAAU,4BAAV,SAAAvQ,GAAAC;YACD,OAFDuF,OAEOkL,aAAAC,OAAA1Q,KAAA,MAAA;;;IAIPsQ,SAAAA,IAAAA;QACD,OAAA,SAAAK;YATHC,OAAAnP,MAAAkP;;;IC/HK,SAASJ,gBAASX,UAAAiB;QAAA,MAAAjB,oBAAAiB,cAAA,MAAA,IAAAC,UAAA;;IAErB,SAAAC,2BAA4BL,MAArBjT;QAAwC,KAA/CuT,MAAA,MAAA,IAAAC,eAAA;QAAA,OAAAxT,SAAA,mBAAAA,QAAA,qBAAAA,QAAAA,OAAAuT;;IAEH,SAAAE,UAAAC,UAAAC;QAAA,IAAA,qBAAAA,cAAA,SAAAA,YAAA,MAAA,IAAAN,UAAA,oEAAAM;QAAAD,SAAA5T,YAAAD,OAAA+T,OAAAD,cAAAA,WAAA7T;YAAAyM;gBAAA7M,OAAAgU;gBAAAG,aAAA;gBAAAC,WAAA;gBAAAC,eAAA;;;QAAA,IAAAJ,YAAA9T,OAAAmU,iBAAAnU,OAAAmU,eAAAN,UAAAC,cAAAD,SAAAO,YAAAN;;ICFoBO,SAAAA;;;;;;kECMjBC,QAASvV,KAAGwV;oBAET,IAASC,QAAAA,WAAaxT,MAAA,MAAAyT;oBACvBC,IAAAA;uBAGED,IAAJ,aAAU7V,SACV,KAAK6V,IAAKpV,OAAAoV,4CAENE,QAAU5V,KAAAM;;;QAMZ,OAAAqV,QAAWE,KAAA;;IAGZ,SALMC;QAML,IAAAC,wBAAqB3R,MAAAlD,UAAAsB,MAAApB,KAAAvB,WAAA,IACnBc,QAAI4U,sBAAA,IACFI,OAAAA,sBAAAnT,MAAA;QAEH,IAAA7B,OACF,IAAAA,MAAA,OAAA;YACFqB,KAAAgU,QAAArV,MAAA;;eAEMgV,IAAAA,MAAArQ,WAAP;YACDtD,KAAAgU,QAAArV,MAAA2E;;;QAE8B,IACtB3E,KADsBb,SAAA,GAAA;YAAAmW,OAAAR,WAAAxT,MAAA,MAAAD;;;IAIzBA,SAAAA,QAAKgU;QACL,IAAA9G,OAAOvO,UAAMuO;QACd,IAHDA,MAIElN,OAAKgU,KAAAA,YACL,IAAA9G,KAAOvO,WAAM2E,YACd,OAAA4J,KAAAjK,WAAA8F,iBAEC/I,OAAKlC,KAASmF;;;QC3BpB,IAAMrC,MAAAA;;YAEAsT,IAAAA,MAAAA,EAAAA;;gBAEAC,IAAAA,KAAAA,OAAgB;gBAAtBC,OAAAC,UAAAxD,UAAAwD,UAAAxD,QAAAA,KAAAzQ,QAAA,YAAA,OAAAe;;gBAKMkT,OAAAA;oFAEND,OAAA;gBAEMA,OAAM;;;QAGR,OAAItD,YAAO5S;;IAGTkW,SAAAA,eACYvD,OAAVyD,MACCD,OAAUxD;QACbuD,QAAAA;QACAA,OAAAA,OAAAG;YACAC,YAAI;WACFJ;QACD,IAAAjO;QACDiO,IAAAA,OAAOK,gBAAPjW,OAAA8V,MAAAzI,OAAA3D,WAAA/B;QACD;YACFA,KAAAlH,OAAAyV,OAAAvO;YACDwO,MAAOP;;;IAKPE,SAAOrV,gBACLT,OAAA8V,MAAAzI,OAAA3D,WAAA/B;QACEqO,IAAW,QAAXA,SAAW,oBAAAhW,OAFR,OAAP;QAQA,IAAAlB,WAAOkB,MAAAlB,UACL6I,aAAYuO,MAAOvO,YACnBwO,eAAMA;QAET,IAAAC,SAAAN,KAAAM;QAIC,IAAqB,mBAAjBpW,UAAiBlB,UACnB,OAAOuX,eAAPrW;QAGF,IACEjB,OAAAA,UAAaiB;QADf,IAEEsW,MAAAA;;YAEF,cACEC,QAAAA,eAAuBvW;YAGzB,IAAIuJ,IAAA,IAAOvJ,KAAPG,OAAiBkN;YAEpB9D,EAAAgF,MAAAhF,EAAAiN,KAAA;;YAEDjN,EAAA8D,QAAAA;YACA,IAAMhG,EAAAA,SAAOjF,EAAAA;YACb,IAAIiF,EAAJ6I,cAAU3G,EAAA2G;YACRoG,WAAAA,EAAAA,OAAA/M,EAAApJ,OAAAoJ,EAAAzI,MAAAyI,EAAA8D;YAEA,IAAIlN,KAAAA,WAAQsQ;gBAAZ,IACEN,EAAAA,YAAAA,OADF5G,EAAA5B,KAAA;oBAEA,IAAA8O,SAAAlN,EAAA4D,YAAAxF,MAAA4B,EAAA4D,YAAAxF,MAAA,qBAAA4B,EAAA5B,MAAA4B,EAAA5B,QAAA4B,EAAA5B;oBACI4B,IAAImN,UAASvW,OAAOkN,YAAxB9D,EAAA4D;oBACAxF,IAAA+O;wBACEnI,IAAFmI;wBACEvW,KAAQA,OAAVsW,QAAAC;;oBAEInN,oBAAW4G,UAAAuG;;;gBAIfpG,UAAS0F,UAAWzM,EAAAoN;;YAOhB,OAAAV,gBAAgB9F,UAAO5I,MAAc4F,QAAAA,GAArCxF;;QACe,IAIfuB,MAJevF,IAAf;;YAOF4F,IAAEoN,QAAAA,OAAFtV,KAAkBrB;;YAKrB,KAAA,IAAAb,IAAA,GAAAA,IAAAiN,MAAA9M,QAAAH,KAAA;qCAEDyX,IAAA7X,WAAA6F;gBACIjB,IAAJ,eAAQiB,4CAIN,IAAIwH,QAAQ3L,KAAOY,iBAAnB,UAAAuD,QAAA,UAAAA,MAAA;oBAEA,IAAA,gBAAAA,MAAA;wBACIkR,IAAAA,WAAae,OAAAA;;2BAER1X,IAAIuK,aAAapK,KAAAA,MAA1B,cACEsF,OAAIA,KAAOwH,cAAXxK,QAAA,YAAA;uEAIAgV,IAAIhS,cAAWgS;;oBAKf,KAAIhS,UAAJ,OAAakS;wBAKZ,IAAA,8BAAAlS,iCAEGA,KAAAA,KAAA,MAASgS,KAAgB,OAAzBA,MAAgD,qBAAVA,GAAU;4BAClDA,KAAIG,MAAAA,KAAJ,OAAkBH,GAAlB;gCACDA,IAAAhS;gCAEGkS,KAAAA,SACGE,KAAAA,KAAAA;oCAEHF,KAAAA,MAAUA;oCACZnT;;;;;2BAdAA,KAAI5E;;;;QAuBF,IAAAqX,QAAA;YACA,IAAAa,MAAItT,EAACmS,QAASA,UAAU;YACtBnS,IAAAA,QAAAA,OAAWiB,IAAXwO,QAAA,OAAAzP,IAAAsT,UAAA,IAAAb,WAAAzS,EAAAyP,QAAA,OAAAzP,KAAA;;QAGHA,IAAA,MAAA7E,WAAA6E,IAAA;QACDA,IAAAA,OAAAA,UAAAY,MAAA,sBAAA,MAAAZ;QAEH,IAAAuT,SAAAvX,OAAAb,UAAAyF,MAAAmR;QACF,IAAAwB,QAAAvT,IAAAA,EAAA/B,QAAA,MAAA;QAED,IAAAuV;QACA,IAAIf,MAAJ;YAEE,IAAIa,UAAAtB,cAAmBvC,OAExB+C,OAAA,OAAAI,aAAAa,OAAAjB,MAAAI;YAED5S,KAAAA;eACIhE,IAAOb,MAAAA,UAAgB;;YAE3B,KAAIoY,IAAAA,IAASvX,GAAAA,IAAOb,MAAPM,SAAuBsW,QAAAA,KAApC;gBACIwB,IAAAA,QAAYvT,MAAE/B,SAAFzC;;oBAEZgY,IAAAA,eAAJ,UAAArY,YAAA,IAAA,oBAAAA,YAAA,IAAA4K,WACUS,MAAA8L,gBAAAhX,OAAA6W,MAAAzI,OAAAgK,cAAA1P;oBACR,IAAAyO,WAAAkB,YAAA3B,cAAAxL,MAAAmN,YAAA;oBACIlB,IAAAA,KAAAA,OAAUT,KAAAA;;;YAGdhS,IAAAA,UAAA2T,UALF,KAMO,IAAItX,IAAMZ,OAAAA,QAAUD,OACrBmY,OAAAA,KAAWlB,OAAAA,aAAqBgB,OAApCD,OAAAhY,IAAAoX;;QAII,IAAAY,OAMEhN,QACFxG,KAAAwT,OAAIf,KAAAA,UACJ,IAAIjM,QAAKgN,KAAO3X,KACjB,OAAAmE,EAAA4B,UAAA,GAAA5B,EAAArE,SAAA,KAAA;QAGD,KAAA4X,QAAS/X;YACPgY,IAAAA,WAAAxT,EAAAyP,QAAmBmD,OAAAA,KAAP;YACb5S,KAAA,OAAA7E,WAAA;;;;IAMJ,SAAMyY,SAAIzB,KAAQA;QACjB,KAAA,IAAOnS,KAAE4B,OACVrF,IAAAf,KAAAgB,MAAAhB;;;IAICwE,SAAAA,eAAA3D;QACD,IAAAG,QAAAoX,aAAAvX,MAAAjB;;QAGF,IAAA6D,eAAA5C,MAAAlB,SAAA8D;qCAED,KAASmT,IAAAA,KAAO7V,cACd,SAAAR,MAAKS,MAASA,IAAWhB,MAAKgB,KAAMhB,aAAfA;QAKrB,OAAIgB;;IAGJ,SAAAqX,IAAAzG;QAAA,IAAA0G,IAAAC,EAAArR,MAAAD,EAAA2K,IAAA1R;QAAA,OAAAoY,EAAAnY,SAAA,IAAAmY,IAAAA,EAAA;;ICvOA,SAfaE,kBAAA5E,UAAAiB;QAAA,MAAAjB,oBAAAiB,cAAA,MAAA,IAAAC,UAAA;;IAiBb7U,SAAAA,6BAAW+U,MAAXvT;QAAA,KAAAuT,MAAA,MAAA,IAAAC,eAAA;QAAA,OAAAxT,SAAA,mBAAAA,QAAA,qBAAAA,QAAAA,OAAAuT;;IAEA,SAAO/U,YAAPkV,UAAAC;QAAA,IAAA,qBAAAA,cAAA,SAAAA,YAAA,MAAA,IAAAN,UAAA,oEAAAM;QAAAD,SAAA5T,YAAAD,OAAA+T,OAAAD,cAAAA,WAAA7T;YAAAyM;gBAAA7M,OAAAgU;gBAAAG,aAAA;gBAAAC,WAAA;gBAAAC,eAAA;;;QAAA,IAAAJ,YAAA9T,OAAAmU,iBAAAnU,OAAAmU,eAAAN,UAAAC,cAAAD,SAAAO,YAAAN;;IAIA,SAAOqD,SAAIC,GAAOzY;QAClB,IAAAqE,MAAAqU,GAxBF,OAAA,MAAArU,KAAA,IAAAA,KAAA,IAAAqU;;;QCDA,IAAMC;;YAENC,IAAA,SAAAC;gBACAC,SAAA1Y,KAAAyY;;YAEEE,KAAI1U,SAASwU;gBACXC,WAAaA,SAASzU,OAAM,SAA5B5E;oBADF,OAEOA,MAAAoZ;;;YAGRG,KAAA;gBACGlQ,OAAJ5H;;YAEE+X,KAAIH,SAAJI,UAAAC;gBACAjY,QAAOgY;gBAAAJ,SAAAlX,QACFiX,SAASA;oBACVC,OAAS1Y,QAAKyY,OAAdM;;;;;IAKD,SAPIC,UAAApZ;QASLgZ,OATKxU,MAAApD,QAAApB,YASCA,SAAA,KAAAA;;IAINiZ,SAbKI,cAaDH,cAAUC;QACZjY,IAAAA,cAAQgY,4BAARI,SAAA;QACiB,IAAAC,WAAWV,SAAQ3X;YAfxC,SAAAqY;gBAkBD,IAAAC,OAAAlG,OAAAmG;gBAEDlB,kBAAmBvY,MAAUuZ;gBAE5B,KAAA,IAAAG,OAAAzZ,UAAAC,QAAAkC,OAAAoC,MAAAkV,OAAAhZ,MAAA,GAAAA,MAAAgZ,MAAAhZ;;;;YAPsBiZ,YAAjBJ,UAAAK;YAYLL,SAAAjY,UAAA0P,kBAAA;;gBAAA,OAAApN,WAAAA,KAAAiW,eAAA5S,KAAA6S,SAAAlW;;YAAA2V,SAAAjY,UAAAqO,4BAAA,SAAAoK;gBAAA,IAAA9S,KAAAlG,MAAAG,UAAA6Y,UAAA7Y,OAAA;;oBAMG,IAAAgY,WAAAa,UAAA7Y;oBACA,IAAAiY;sDAPHA,cAUGnI,QAAkB;;wBAChB,IACG6I,iBADHG,QAAAC,IAAAC;wBAWEf,eAAagB;wBAAb,IAEO,MAFPhB,aAGEA,KAAAA,QACEF,IAAAc,UAAOK,OAAAA;;;;YAQPb,SAAAjY,UAAAuM,SAAA;gBACA,OAAA5G,KAAAlG,MAAAf;;YAGFmZ,OAAAA;;QAGE,IAAAkB,WAAKP,SAAQb;YAGlB,SAAAoB;gBA5CN,IAAAC,QAAAC,QAAAC;gBAAAjC,kBA+CG1K,MA/CHwM;gBAAA,KAAA,IAAAI,QAAAxa,UAAAC,QAAAkC,OAAAoC,MAAAiW,QAAAC,QAAA,GAAAA,QAAAD,OAAAC;;;oBAoDOL,OApDPE,OAAAI;mBAAAJ,OAAAK,WAAA,SAAA1B,UAAAC;;oBAAA,IAAA,MAAA0B,eAAA1B,cAAAoB,OAAAO;wBAAA5Z,OAAAqZ,OAAAI;;mBAAAL,SAAAS,6BAAAR,QAAAC;;YA0CUb,YAAAU,UAAAW;YA1CVX,SAAA/Y,UAAAqO,4BAAA,SAAAoK;gBA4DK7Y,IAAAA,eAAYyZ,UAALE;gBAqCP5T,KAAA4T,oBAA0BA,MAApBA,gBAAN,SAAAA,eAAA,aACAA;;YAGDR,SArGJ/Y,UAAA2Z,oBAAA;gBAAA,IAAAhU,KAAA0D,WAAA1D,KAAA0D,QAAAkP,cAqDG5S,KAAA0D,QAAAkP,aAAAjB,GAAA3R,KAAA2T;gBAEA,IAAAC,eAAA5T,KAAAlG,MAAA8Z;gBAvDH5T,KAAA4T,oBA+DGlL,MAAAA,gBA/DH,SAAAkL,eAAA,aA+DwCA;;YAGjCR,SAEIQ,UAHNtI,uBAAA;gBAjEL,IAAAtL,KAAA0D,WAAA1D,KAAA0D,QAAAkP;;YA0EMQ,SAAA/Y,UAAAqZ,WAAA;gBAHiB,IAIZE,KAAAA,WAAiB5T,KAAKlG,QAAtB8Z,2DAIAA,OAAAA;;YAINR,SAAI/Y,UAAAuM,SAAqBlD;gBACvB,OAAKA,UAAQkP,KAAAA,MAAad,UAAS6B,KAAAA,MAAnC1Z;;;UApFPgN;QA0FO;YACDqL,UAAMA;YACLc,UAAAA;;;IA5FP,SAAAa,kBAuGGrN,UAvGH+G;QAuGY,MAAAjB,oBAAAiB,cAAA,MAAA,IAAAC,UAAA;;;QAKX;;;;;;;;;qCCrHD7D,MAAAA;QACC,IAAAlO,YAAY/B,gBAAZoK,cAAAgQ,gBAAA7L;QACA,IAAA8L,UAAAA,SAAA5Z,KAAAsB,WAAAqY;;;;;;IAQD,SAAIE,aAASC,OAAFC;QACX,OAAIJ,EAAAA;YAAAA,OAAkBtN;YAAA0N,WAAAA;;;IAGtB,SAAOzY,YAAPA;QACA,OAAAA,cAAAA,UAAAwM,QAAA,MAAAxM,UAAA+P,YAAA/P,cAAA;;;QAID,IAAA0Y,WAAgBza,UAAO0a,KAAAF,UAAAE,EAAAnM;QACtBoM,IAAAA,YAAAA,SAAAA,eAAuC9a,WAAOG;YAC9C8M,OAAApO,EAAAkc,iBAAAJ,WAAAC;;;QAGA,QAAO/b;;IAGR,SAASmc,eAAY9Y,GAAAA;QACpB,KAAA,IAAOA,KAAAA,GACP,MAAA/C,KAAAgE,IAAA,QAAA;yBAED,IAAAD,EAAA/D,OAAS8b,EAAAA,IAAAA,QAAAA;QACR,QAAIL;;IAGH,SAAOM,WAAPC,KAAAC,GAAA5Z;QACA,IAAA,mBAAA4Z,GACDA,IAAAD,IAAOhO,YAAPzM,UAAA0a;oCAKD,OAASC,EAAAA,MAAAA,KAAAA;;IAES,SAAMlc,UAAOA,OAAImc;QAAlC,OACA;YACA,IAAAnR;;gBAGD,IAAAsN,IAASyD,WAAWC,MAAQ3Z,MAAMrC,IAAAE;gBAEhC+b,IAAID,kBAAgBza,QAAAA,GAApB;oBACA,KAAAyJ,KAAAA;oBACD,KAAI,IAAArK,OAAW2X,GACd,IAAO2D,EAAE3Z,eAAF3B,MACPqK,IAAArK,OAAA2X,EAAA3X;uBAGOyb,SAAiBD,MAAPE,GAAnBrR,MAA0CsN;;YAExC,OAAItN;;;IAIH,SAAImR,iBAAkB7D,OAAG1N;QACxB0R,UAAKtR,KAAKA,MAAAhK,OAAA4J;QACV1D,KAAA0I,4BAAAwM,YAAAE,WAAApV,KAAA0I,6BAAA;QAAmB1I,KAAA4G,SAAM+H,YAAelV,WAAMoQ,cAAA7J,KAAA4G,UAAA,UAAAyO;;IAA9C,SAAAD,UAAAtb,OAAA4J;QAGA,IALD5J,OAKC;YAIF,IAdDoJ,IAAApJ,MAAAf;YAeA,IAAAmK,KAAA3F,MAAApD,QAAA+I,MAAA,MAAAA,EAAAjK,WAAA,mBAAAiK,EAAA,MAAA,qBAAAA,EAAA,MAAAA,EAAA,cAAA1J,QAAA;;gBAKA,IAAKkP,MAAAA,YAAuC0M,mBAA5Ctb,MAAiCob,UAAsB;oBACvDpb,MAAK8M,SAASsO,SAAWE;oBACzBtb,MAAAf,SAAA,KAAAe,MAAAf;;;YAMA,IAAAW,QAAA4b,KAAA;gBACA,IAAIpS,OAAJ,qBAAcnK,OAAdiH,OAAAA,KAAA8G;gBACe3M,KAANob,aAAsBtc,KAAFsc;gBACXrS,KAAjBsS,eAAAxU,KAAAzC;;;;;IAWA,SAAIyC;IAKJ,SAAA2R,WAAA7Y,OAAA4J,SAAA+L;QACAxI,UAAA1M,KAAAyF,MAAAlG,OAAA4J;QACA1D,KAAA8I,QAAA9I,KAAAyV,kBAAAzV,KAAAyV;QACDzV,KAAA0V;;QAID,IAAAjG,SAAS5F,aAER8L,iBAAApb,KAAAyF,MAAAlG,OAAA4J;;IAyBE,SAAM5K;IAEL,SAAA8c,cAAA9b,OAAA4J;QACDiP,WAAApY,KAAAyF,MAAAlG,OAAA4J;;ICjLI,IAAMlK,QAAQ;ICyBrB,IAAAE;QACEkJ,cAAa;QACb7G;QACA8Z,QAAO;QACP9S;QACAvG,KAAyB,mBAAbkE,WAAwBA,WAAW;QAC/CoV,MA/BF;YACE,IACoB,mBAAXC,WACNA,UACDA,OAAO1V,SAASA,QAChB0V,OAAOxY,UAAUA,OACjB;gBACA,IAAoB,sBAATuQ,MACT,OAAOA,WACF,IAAsB,sBAAXzL,QAChB,OAAOA,aACF,IAAsB,sBAAX0T,QAChB,OAAOA;gBAET,OAAQ;oBACN,OAAO/V;;;YAGX,OAAO+V;;QAePjV;;QxB9BI5H;QCsCiB,sBAAZyS,YAA4BA,QAAQtR,UAAU8E,kBAAkB;QAAA,IAEhE6W,eAAT,SAAsBC;YACpB,KAAKA,QACHA,SAAS5T,OAAOpC;YAElB,KACE,IAAIiW,SAAS,GAAGC,QAAQ,GAAGC,gBAAgBC,WAAWJ,OAAO3P,OAC7D6P,QAAQC,cAAcE,KAAKrd,QAC3Bkd,SAEA,IAAIC,cAAcE,KAAKH,WAAWnW,MAAM;gBACtC,KAAKkW,QAAQA,SAASE,cAAcG,MAAMJ,OAAOld,QAAQid,UACvDE,cAAcG,MAAMJ,OAAOD,QAAQ3b,KAAKyF,MAAMiW;gBAEhD;;;QAdN,IAAII;QAkBJ1K,QAAQtR,UAAU8E,mBAAmB,SACnCqX,YACAC;YAEA,IAAIJ,WAAW1H,eAAe6H,aAAa;gBACzC,IAAIJ,gBAAgBC,WAAWG;gBAC/B,KACE,IAAIE,UAAU,GAAGP,QAAQ,GACzBA,QAAQC,cAAcE,KAAKrd,QAC3Bkd,SAEA,IAAIC,cAAcE,KAAKH,WAAWnW,MAAM;oBACtC0W,SAASP;oBACT;;gBAGJ,KAAgB,MAAZO,QAAe;oBACjBN,cAAcE,KAAKnd,KAAK6G;oBACxBoW,cAAcG,MAAMpd,OAAMsd;oBAC1BzW,KAAK,OAAOwW,cAAcR;uBACrB;oBACL,IAAIW,eAAeP,cAAcG,MAAMG;oBACvC,IAAI1W,KAAK,OAAOwW,gBAAgBR,cAAc;wBAC5CW,aAAaC,OAAO;wBACpB5W,KAAK,OAAOwW,cAAcR;;oBAE5B,KAAK,IAAIE,SAAS,GAAGA,SAASS,aAAa1d,QAAQid,UACjD,IAAIS,aAAaT,YAAYO,WAC3B;oBAGJE,aAAaxd,KAAKsd;;mBAEf;gBACLJ,WAAWG;oBAAgBF,QAAOtW;oBAAOuW,WAASE;;gBAClDzW,KAAK,OAAOwW,cAAcR;;;QAG9BrK,QAAQtR,UAAUoF,sBAAsB,SACtC+W,YACAC;YAEA,IAAKJ,WAAW1H,eAAe6H,aAA/B;gBAGA,IAAIJ,gBAAgBC,WAAWG;gBAC/B,KACE,IAAIE,UAAU,GAAGP,QAAQ,GACzBA,QAAQC,cAAcE,KAAKrd,QAC3Bkd,SAEA,IAAIC,cAAcE,KAAKH,WAAWnW,MAAM;oBACtC0W,SAASP;oBACT;;gBAGJ,KAAgB,MAAZO,QAGJ,KACE,IAAIR,SAAS,GAAGS,eAAeP,cAAcG,MAAMG,SACnDR,SAASS,aAAa1d,QACtBid,UAEA,IAAIS,aAAaT,YAAYO,WAC3BE,aAAaC,OAAOV,QAAQ;;;;IAMpC,IAA6B,qBAAlB9b,OAAO+T,QAChB/T,OAAO+T,SAAS,SAAS0I,OAAOC;QAa9B,SAASC;QAZT,IAAqB,mBAAVF,SAAuC,qBAAVA,OACtC,MAAM,IAAIjJ,UAAU,6CAA6CiJ,aAC5D,IAAc,SAAVA,OACT,MAAM,IAAIG,MACR;QASJD,EAAE1c,YAAYwc;QAEd,OAAO,IAAIE;;IAIf,KAAKzd,OAAOe,UAAUgD,MACpB/D,OAAOe,UAAUgD,OAAO;QACtB,OAAO2C,KAAKzE,QAAQ,sCAAsC;;IAmC9D,IAAI0b,aAA+B,qBAAXC;IAGxB,IACsB,mBAAbxW,YACW,sBAAXqV,UACPA,OAAOoB,GAEP,IAAmC,cAA/BpB,OAAOoB,EAAWC,UACpBH,cAAa,QACR;QACL,IAAII,gBACDtB,OAAOoB,EAAWE,iBACjBtB,OAAOoB,EAAWE,cAAc7b,MAAM,KAAK,MAC7C;QACF,IAAI6b,gBAAgB,GAClBJ,cAAa;;IAKZ,IAAMK,QAAQL,aACjBC,QAAQK,UAAUC,KAAKC,KAAKP,QAAQK,aACpCG;;IwB7MG,IAAMlT;;IpBgKX,IAAArD,UAAKN;IC9CL,IAAAsC;IAGIL,IAAAA,YAAKpK;IAGV,IAAA2K,aAAA;ICpHM,IAAMF,aAAN;ICkEDqD,IAAAA;;QCrBN,IAAAmR,WAAA,SAAAlK,QAAAnS,KAAA6Y;YACA,KAASyD,OAAAA,WAAgBnd,OAAMiJ,YAAS1D;YACtC,IAAA6X,YAAY/Q,OAAYhN;YACzB,IAAAge;;gBC3DD,IAAA,MAAArK,OAAAxU,QAAA;;;;;;YAMI+O,KAAAA,IAAOgE,QAAPhE,QACE2P,IAAAA,OAAWhJ,eAAXgJ,OACE,IAAClK;gBACDoK,IAAAA,KAAAA,QAAmBA,QAAAA,KAAvBE,UAAAzc,KAAA0Q,OAAA;oBACI8L,aAAJ3e,KAAA6S;oBACIhE,UAAayF,MAAjBA,QAA0BzB;uBACb/S,IAAAA,KAAP+e,SAAqB1c,QAAA0Q,QAAA1Q,KAAA;oBACvBmS,aAAOwK,KAAPjM;oBACAyB,UAAOwK,MAAPxK,QAAqByK;;mBAEvBL;gBACDC,aAAA3e,KAAA6S;gBACI6L,UAALM,MAAiB1K,QAAQzB;;YAIjB8L,UAAAA,SAAAA;YACAD,KAAAA,UAAAA,wBAAAA,UAAAO;YACD,IAAAC,cAAUrQ,WAAKgQ,WAAiBhM;YAC/B8L,UAAAA,uBAAA3e;gBACA0e,MAAAA;gBACDQ,aAAAA;gBACFP,cAAMA;;;QAGNH,SAAAtd;YACFie,mBAAA,SAAAtM,MAAA/R,OAAAiZ,UAAAzF,QAAA7S;gBACF,IAAAX,UAAAiZ,YAAAlT,KAAAoY,wBAAA;oBACDP,IAAAA,WAAmBpK,KAAAA,EAAnBzB,MAAApR;oBACI,KAACid,IAAAA,IAAUO,GAAAA,MAAAA,KAAAA,uBAAkCA,QAAAA,IAAAA,KAAVtf,KAAA;wBACnCuf,IAAAA,UAAclE,KAAAA,uBAAlBrb;wBACA+e,IAAUO,QAAAA,OAAAA,KAAAA,UAA4BxG,QAAAkG,cAAAS,aAAA,MAAAA,SAAAxL,QAAA,WAC9BoH,QAD8BkE,YAAA9d,KAAAyF,KAAAyN,QAAAzB,MAAA/R,OAAAiZ,UAAAtY;;;gBA9BxC,IAAA,MAAAoR,KAAAe,QAAA,aAAA,mBAAA9S,OAoCA0d,KAAStd,MAAAA,QAAY2R,MAAAyB,OAAAwK,cAAAC;;YAGfM,MAAA,SAAexQ;gBACf,IAAA8F,OACMhV;gBAIJkP,KAAAyQ,QAAI7G,QAAU,SAAKwG;oBACnB3K,OACEmE,QAAQ8G;wBAIR9G,IAAAA,MAAQyG,MAAAA,UAAR1c,MAA8B8R,KAAAA,MAAQzB;wBACvC,IAAAhN,SAAAzB,MAAAlD,UAAA0G,MAAA3F,MAAA4E,MAAAzC,MAAAlD,UAAAsB,MAAApB,KAAAvB;wBACF,IAAA,IAAA2f,OAAA,QAAA5X,OAAA,OAAApC,KAAAqJ,KAAA4Q,aAAA;4BACF,KAAA,IAAAC,SAAA7Y,MACGgM,IAAKe,KAAQ4B,eAAbkK,WAAuC5e,KAAP6e,WAAiB9Y,KAAU6Y,SACxDV,KAAM1K,MAAQzB,MAAMyB,OAAOwK,KAAAA,cAAcC;4BAI5CpK,KAAOwK,kBAAX,WAAAvX,MAAAf,MAAAxB,KAAAwB,MAAAA,KAAAiY,cAAAC;;wBAEEzK,OAAO1M;;oBAEL0M,OAAIzO,SAASzB,KAAMlD,UAAU0G,GAAAA,GAAM3F,gBAEjCmC,KAAMlD,UAAUsB,MAAMpB;wBAExB,OAAIgD,MAAIob,UAAe5X,MAAR3F,MAAX4E,MAAAzC,MAA2Cqb,UAA3Cjd,MAAwDpB,KAAAvB;;;;YAIvDmf,OAAA,SAAA1K,QAAAzB,MAAApR;gBACF,IAAA,oBAAAoR,QAAA,gBAAAA,MACD,KAAAhE,KAAA8Q,WAAArL,OAAAzB,QAAA;oBACA8B,KAAAA,OAAKwK,eAAAA,OACHL;oBAMH,SAAA5e,MAAAuB,MACD6S,OAAAwK,cAAAC,gBAAAtd,WAEF6S,OACEwK,cAAc/Y,gBAAgB6Z;oBAM/B,IAPDjL,OAAA9N;oBAQD,IAhCDgZ,eAAAvL,OAAAwK,cAAAjM,QAAAyB,OAAAzB;oBAzBiB5R,OAAA6e,eAAAxL,QAAAzB;wBA2DnBmM,KAAO;4BACDnM,OAAAA,KAASiM,cAATjM;;wBAEJgG,KAAKvE,SAAOwK;4BACRrd,IAAAA,MAASvB,KAAAA,cAAW2S;4BACtByB,KAAOwK,cAAcC,QAAAA;4BADvBpK,KAEOwK,kBAAAtM,MAAA/R,OAAAuE,KAAAwB,MAAAyN,OAAAwK,cAAAC;;;oBAGP,IAAA,mBAAWc,cAAX;wBACA,IAAIA,KAAAA,QAAgBvL,eAAOwK;4BAC3B7d,KAAO6e,KAAAA;4BACLlH,IAAgB,MAAXiH,aAAA/f,QAAW;gCACd,KAAO+f,aAAKf,eAAZe,aAAAf;gCAFgC,SAAA5e,MAAAuB,MAI7Boe,aAAS/e,cAAOie,gBAAAtd,WAEnBoe,aAAKf,cAAsBhe,gBAA3B;;;wBAUJ,KAAI,IAAO+e,SAAAA,cACT,IAAIhR,aAAagR,eAAeH,QAC9B7Y,KAAKwY,MAAKQ,cAAVH,OAAApL,OAAAwK,cAAAC,gBAAA,MAAAlM;;;;;QAMIgN,OAAAA,IAAAA,SAAAA,QAAaf,KAAAA;;IAGlBjQ,KAAAyQ,YAAA,UAAA,cAAA,WAAA,SAAA,QAAA,UAAA,QAAA,aAAA,WAAA,YAAA,WAAA,QAAA,QAAA,eAAA,OAAA,OAAA,QAAA,UAAA,eAAA,WAAA,SAAA,SAAA,QAAA,QAAA,UAAA,kBAAA,YAAA,WAAA,UAAA;IACDzQ,KAAA4Q,eAASC,UAASG,cAAc,QAAA,OAAA,QAAA,WAAA,SAAA,QAAA,UAAA,WAAA,SAAAhK,KAAA;IAE5BhH,KAAA7N,UAAA,SACE6e;QAIH,OAAA,qBAAA5e,OAAAC,UAAAC,SAAAC,KAAAV;;IAGNmO,KAAAgQ,WAAA,SAAAne;QA5GkB,OAArB,mBAAAA;;;QAiHFmO,KAAKyQ,IAAAA,IAAUnd,IACbrC,UACAH,KAAA,KA8BFkP,IAAK4Q,SAALtd,IACExC,IAAA,QACA;QAYFkP,QAAK7N;;;QAIL6N,OAA8B,uBAAzBgQ,OAAW3d,UAASR,SAAKU,KAAAV;;;QAI9BmO,IAAA,QAAK+P,MACH,OAASjf,WAER,OAAA8B,KAAAY,MAAA,KAAA;;;QAIHwM,IAAK8Q,YAAajf,IAAAge;QAChBA,UAAOzd,MAAOC,KAAAA;;IAGhB2N,KAAKkR,MAAAA,SAAerf,KAAAmS,MAASA,OAAMpR;QACjC,KAAIA,MACFf,IAAAmS,QAAA/R;QAEF,IAAA4d,YAAYrc,IAAMqc;QAJpBA,UAAAM,MAAAte,KAAAmS;kBAOAhE,IAAAgE,QAAW/R;;;QAKX+N,KAAKgK,SAAM/Y;;IAGR,IAAA2O;IACD,IAAAC;;IIpNAjO,OAAK8J,UAAUsD;QACfmS;QAEArR,QAAKsR,SAALjF;YACAnU,KAAK8I,KAAaA;YAClB,IAAKrO,WAAYA,KAALsQ,MAAZ/K,KAAA+K,WAAA5R,KAAAgb;YACAvL,gBAAe5I,MAAf;;YAEAA,KAAKgH,KAAL;;QAED6M,UAAA,SAAA/K,OAAAqL;;YAEDva,KAAOqN,QAAU5M,OAAAA,WAAW2F,KAAA8I,QAAA,qBAAAA,QAAAA,MAAA9I,KAAA8I,OAAA9I,KAAAlG,SAAAgP;YAC1BqQ,IAAAA,UAAAA,KAD0BpO,IAAA5R,KAAAgb;;;QAIxBkF,MAAA,SAAA/S,MAAA7L;YACA,IAAI0Z,QAAJnU;YAGA5F,OAAIV,KAAQ4f,KAAAA,OAAAA,MAAiB5f,SAAQ4f;gBACrC,IAAKC,OAAAA,KAALjd,kBAAA7C,IAAA6C,eAAA;oBATwB+P,MAAAvS,MAAAL;wBAAA+f,QAAA/e;;oBAW1BoZ,QAX0B;;gBAaxB,QAAK/K;;;QAMN2Q,aAnByB,SAAAtF;YAqB1BkF,IArB0BlF,UAAAnU,KAqBrBsG,IAAYnN,KAAAgb;YAAAvL,gBAAA5I,MAAA;;QACf5F,QAAAA;;IAGI6M,UAAAyS,KAAO;oBY5DKnb,SAAMoU;QAGvB,SAFDlE;YAGDkL,gBAAA3Z,MAAAyO;;;QAHCT,UAAOS,WAAShB;;;;;;;;;ICOf,IAAAuC,iBAAA,SAAA1S;QACF,OAAAhE,OAAAgE,GAAA/B,QAAA,MAAA,SAAAA,QAAA,MAAA,QAAAA,QAAA,MAAA,QAAAA,QAAA,MAAA;;;;;;;IRED,IAAMyU,gBAAAA,SAAAA,GAAiB/W,QAAA2gB;QAAA,OACrBtgB,OAAOgE,GACJ/B,UAAQtC,UAAM,QACdsC,gBAEAA,MAJHjC,OAGGiC,GAAQwR,QAAM,UAJI,MAKVzT,OAAMgE,GAAAyP,QALI;;IAOvB,IAAMgE;IAqOJ,IAAAM,IAAI9U,SAAAA,GAAAA,GAAAA,GAAe5C;QAAAA,KAAMlB,IAAAA,IAAAA,GAAS8D,IAAAA,EAAAA,QAAAA,KAAlC;YAAA,IAAAe,IAAA8T,EAAA7X,MAAAsD,IAAA,mBAAAS,IAAAuc,EAAAvc,KAAAA;YAAA,MAAA8T,EAAA7X,KAAAwG,EAAA,KAAAlD,IAAA,MAAAuU,EAAA7X,MAAAwG,EAAA,KAAAA,EAAA,UAAAqR,IAAA7X,MAAAsD,IAAA,MAAAuU,EAAA7X,KAAAwG,EAAA,KAAA3F,OAAAsV,OAAA3P,EAAA,UAAAlD,KAAAkD,EAAA5G,KAAAiY,EAAA7X,KAAAmR,EAAAtP,MAAA,MAAAiW,EAAA3G,GAAA7N,GAAAgd,KAAA,IAAA,WAAAhd;;QAAA,OAAAkD;OAAA2K,IAAA,SAAA2G;QAAA,KAAA,IAAA3G,GAAA0G,GAAAyI,IAAA,GAAA9Z,IAAA,IAAAxG,IAAA,IAAA+D,MAAA,KAAAT,IAAA,SAAAwU;YAAA,MAAAwI,MAAAxI,MAAAtR,IAAAA,EAAAxE,QAAA,wBAAA,QAAA+B,EAAAnE,KAAAkY,KAAAtR,GAAA,KAAA,MAAA8Z,MAAAxI,KAAAtR,MAAAzC,EAAAnE,KAAAkY,KAAAtR,GAAA;YAAA8Z,IAAA,KAAA,MAAAA,KAAA,UAAA9Z,KAAAsR,IAAA/T,EAAAnE,KAAAkY,GAAA,KAAA,MAAAwI,KAAA9Z,MAAAsR,IAAA/T,EAAAnE,MAAA,GAAA,GAAA4G,KAAA,MAAA8Z,KAAAzI,MAAA9T,EAAAnE,KAAAkY,KAAAtR,GAAA,GAAAqR;YAAAA,IAAA,KAAArR,IAAA;WAAAqF,IAAA,GAAAA,IAAAiM,EAAApY,QAAAmM,KAAA;YAAAA,MAAA,MAAAyU,KAAAhd,KAAAA,EAAAuI;YAAA,KAAA,IAAA5M,IAAA,GAAAA,IAAA6Y,EAAAjM,GAAAnM,QAAAT,KAAAkS,IAAA2G,EAAAjM,GAAA5M,IAAA,MAAAqhB,IAAA,QAAAnP,KAAA7N,KAAAS,MAAAA,KAAAuc,IAAA,KAAA9Z,KAAA2K,IAAAnR,IAAAmR,MAAAnR,IAAAA,IAAA,KAAAwG,KAAA2K,IAAA,QAAAA,KAAA,QAAAA,IAAAnR,IAAAmR,IAAA,QAAAA,KAAA7N;YAAAgd,IAAA,KAAAA,MAAA,QAAAnP,KAAAmP,IAAA,GAAAzI,IAAArR,GAAAA,IAAA,MAAA,QAAA2K,KAAA7N,KAAA,MAAAgd,MAAAvc,IAAAA,EAAA,KAAAuc,IAAAvc,IAAAA,IAAAA,EAAA,IAAAnE,KAAA0gB,GAAA;YAAAA,IAAA,KAAA,QAAAnP,KAAA,SAAAA,KAAA,SAAAA,KAAA,SAAAA,KAAA7N,KAAAgd,IAAA,KAAA9Z,KAAA2K;;QAAA,OAAA7N,KAAAS;OAAA8T,IAAA,qBAAA0I,KAAAD,IAAAzI,IAAA,IAAA0I,YAAA/Z,IAAAqR,IAAA,SAAAC;QAAA,IAAAD,IAAAyI,EAAA9H,IAAAV;QAAA,OAAAD,KAAAyI,EAAA7H,IAAAX,GAAAD,IAAA1G,EAAA2G,KAAAD;QAAA,SAAAC;QAAA,KAAA,IAAAD,IAAA,IAAArR,IAAA,GAAAA,IAAAsR,EAAApY,QAAA8G,KAAAqR,KAAAC,EAAAtR,GAAA9G,SAAA,MAAAoY,EAAAtR;QAAA,OAAA8Z,EAAAzI,OAAAyI,EAAAzI,KAAA1G,EAAA2G;;IAEE,IAAAE;IAGG,IAAAwI;QACF7c,KAAA,SAAAnE,UAAAuO,IAAAwN;YACF,IAAA,QAAA/b,UAAA,OAAA;;YAED,IAAA+b,OAAOhb,QAAPf,UAAAuO,KAAAA,GAAAmQ,KAAA3C;YACD,OAAA/b,SAAAmE,IAAAoK;;QSnQD3M,SAAM,SAAkB5B,UAAauO,IAAGwN;;YRAxC/b,WAAAghB,SAAAC,QAAAjhB;;YAEAA,SAAA4B,QAAA2M;;QAECpK,OADc,SACVnE;YACH,OAAIA,YAAYA,SAAME,UAAA;;QAEtBghB,MAAInF,SAAa/b;YACjBA,WAAOA,SAAauO,QAApBvO;YALa,IAAA,MAAAA,SAAAE,QAAA,MAAA,IAAA+d,MAAA;YAOdrc,OAPc5B,SAAA;;QASbA,SAAAA,SAAoBihB;YACpB,IAAWlF,QAAPA,UAAa/b,gBACjBA,OAAAA,IAAS4B,OAAQ2M;;;;ICsId,IAAAwI,OAzGJqB,IAAAsG,KAAAjf;IAAA,IAAA0hB,YAAAjT;IAAA,IAoDwBA,gBApDxByG;IA4GQ,IAAPyM,qBAAA,sBAAA3c,UAAAA,OAAA4c,OAAA5c,OAAA4c,IAAA,oBAAA;;QClIF,SAAMF;YACNjG,kBAAsBvG,MAAtB2G;;QAGCA,gBAAAha,UAAA0P,kBAAA;;;QAIDsK,gBAASgG,UAAeC,SAAS,SAAAxgB;YAC/B,OAAOwgB,MAAAA,SAAaA;;eAGhBjG;;IAMJ,IAAAkG,sCAAA9F;;IAoHD7a,OAAA+Y,WAAAtY,YAAA,IAAA4M;;;YAIDjH,KAAA6T,SAASlB,OAAW7Y;YACnBmN,KAAAA,IAAU1M,KAAKyF,KAAf8I,OACA,MAAKA,KAAQA,eACb9I,KAAA8I,MAAAhQ;;QAIC0hB,YAAA;YACD,OAAAxa,KAAAqI;;QAEAvB,WAAAA;;;;IAWA0T,EAAAA,YAZ8C7H,WAAAtY;IAa7Cub,cAAYvN,YAAZ,IAAA0O;IACAnB,cAd6Cvb,UAAAogB,wBAAA;IAgB9CC,cAhB8CrgB,UAAAsgB,wBAgBlC,SAAA7gB,OAAAgP;QACX,OAAAkM,eAAAhV,KAAAlG,OAAAA,UAAAkb,eAAAhV,KAAA8I,OAAAA;;;QAKFtQ,GAAAA;;QAEAkD,cAASka;QACRjD,WAAWpY;QACX0M,WAAAA;QACD8P,QAAE1c;QACFub,UAAAA;QACAA,SAAAA;QACAA,WAAAA;QACClI,QAAOsH;QADR3H,KAAAA;;QAIA3T,eAAAkhB;QACEpiB,YADiBoW;QAEjBlS,cAAAA;QACAhB,SAAAA;QACAmf,gBAAAA;QACA5T,KAAAA;QACAL,OAAAA;QACAkU,MAAAA;QACAphB,KAAAA;QACAwgB,UAAAA;QACAxM,gBAViB2M;QAWjBhN,cAXiB0N;QAYjBtM,aAAAA;QACAmM,wBAAAA;QACAhM,qCAdiB2L;QAejBtL,eAAAA;QACA+L,eAAAA;;IAEAC,QAAAA,KAlBiBC,MAAAxhB,QAAAoc,KAAAqF;IAmBjB1P,QAAAA,KAnBiB0P,IAAAC,UAAA;IAqBjBjK,IAAAA;QACA4I,GAAAA;QACAM,eAAAA;QACAU,cAAAA;QACApG,WAAAA;QACAC,WAAAA;QACA2F,QAAAA;QACA3E,UAAAA;QACAxD,SAAAA;QA7BF8H,WAAAA;QA+BAxgB,QAAQoc;QACRpc,KAAAA;;QAEAkhB,eAAeA;QACbpiB,YADaoW;QAEblS,cAAAA;QACAhB,SAAAA;QACAmf,gBAAAA;QACA5T,KAAAA;QACAL,OAAAA;QACAkU,MAAAA;QACAphB,KAAAA;QACAwgB,UAAAA;QACAxM,gBAVa2M;QAWbhN,cAXa0N;QAYbtM,aAAAA;QACAmM,wBAAAA;QACAhM,qCAda2L;QAebtL,eAAAA;QACA+L,eAAAA;;IAGAvP,IAnBa,sBAmBbA,QAnBa4P,OAAAC,UAAAH,UAAArN,KAAAqN,MAAAA","file":"omi.js","sourcesContent":["import { VNode } from './vnode'\nimport options from './options'\n\nconst stack = []\n\n/**\n * JSX/hyperscript reviver.\n * @see http://jasonformat.com/wtf-is-jsx\n * Benchmarks: https://esbench.com/bench/57ee8f8e330ab09900a1a1a0\n *\n * Note: this is exported as both `h()` and `createElement()` for compatibility reasons.\n *\n * Creates a VNode (virtual DOM element). A tree of VNodes can be used as a lightweight representation\n * of the structure of a DOM tree. This structure can be realized by recursively comparing it against\n * the current _actual_ DOM structure, and applying only the differences.\n *\n * `h()`/`createElement()` accepts an element name, a list of attributes/props,\n * and optionally children to append to the element.\n *\n * @example The following DOM tree\n *\n * `<div id=\"foo\" name=\"bar\">Hello!</div>`\n *\n * can be constructed using this function as:\n *\n * `h('div', { id: 'foo', name : 'bar' }, 'Hello!');`\n *\n * @param {string} nodeName\tAn element name. Ex: `div`, `a`, `span`, etc.\n * @param {Object} attributes\tAny attributes/props to set on the created element.\n * @param rest\t\t\tAdditional arguments are taken to be children to append. Can be infinitely nested Arrays.\n *\n * @public\n */\nexport function h(nodeName, attributes) {\n  let children = [],\n    lastSimple,\n    child,\n    simple,\n    i\n  for (i = arguments.length; i-- > 2; ) {\n    stack.push(arguments[i])\n  }\n  if (attributes && attributes.children != null) {\n    if (!stack.length) stack.push(attributes.children)\n    delete attributes.children\n  }\n  while (stack.length) {\n    if ((child = stack.pop()) && child.pop !== undefined) {\n      for (i = child.length; i--; ) stack.push(child[i])\n    } else {\n      if (typeof child === 'boolean') child = null\n\n      if ((simple = typeof nodeName !== 'function')) {\n        if (child == null) child = ''\n        else if (typeof child === 'number') child = String(child)\n        else if (typeof child !== 'string') simple = false\n      }\n\n      if (simple && lastSimple) {\n        children[children.length - 1] += child\n      } else if (children.length === 0) {\n        children = [child]\n      } else {\n        children.push(child)\n      }\n\n      lastSimple = simple\n    }\n  }\n\n  let p = new VNode()\n  p.nodeName = nodeName\n  p.children = children\n  p.attributes = attributes == null ? undefined : attributes\n  p.key = attributes == null ? undefined : attributes.key\n\n  // if a \"vnode hook\" is defined, pass every created VNode to it\n  if (options.vnode !== undefined) options.vnode(p)\n\n  return p\n}\n","'use strict'\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols\nvar hasOwnProperty = Object.prototype.hasOwnProperty\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable\n\nfunction toObject(val) {\n  if (val === null || val === undefined) {\n    throw new TypeError('Object.assign cannot be called with null or undefined')\n  }\n\n  return Object(val)\n}\n\nexport function assign(target, source) {\n  var from\n  var to = toObject(target)\n  var symbols\n\n  for (var s = 1; s < arguments.length; s++) {\n    from = Object(arguments[s])\n\n    for (var key in from) {\n      if (hasOwnProperty.call(from, key)) {\n        to[key] = from[key]\n      }\n    }\n\n    if (getOwnPropertySymbols) {\n      symbols = getOwnPropertySymbols(from)\n      for (var i = 0; i < symbols.length; i++) {\n        if (propIsEnumerable.call(from, symbols[i])) {\n          to[symbols[i]] = from[symbols[i]]\n        }\n      }\n    }\n  }\n\n  return to\n}\n\nif (typeof Element !== 'undefined' && !Element.prototype.addEventListener) {\n  var oListeners = {}\n  function runListeners(oEvent) {\n    if (!oEvent) {\n      oEvent = window.event\n    }\n    for (\n      var iLstId = 0, iElId = 0, oEvtListeners = oListeners[oEvent.type];\n      iElId < oEvtListeners.aEls.length;\n      iElId++\n    ) {\n      if (oEvtListeners.aEls[iElId] === this) {\n        for (iLstId; iLstId < oEvtListeners.aEvts[iElId].length; iLstId++) {\n          oEvtListeners.aEvts[iElId][iLstId].call(this, oEvent)\n        }\n        break\n      }\n    }\n  }\n  Element.prototype.addEventListener = function(\n    sEventType,\n    fListener /*, useCapture (will be ignored!) */\n  ) {\n    if (oListeners.hasOwnProperty(sEventType)) {\n      var oEvtListeners = oListeners[sEventType]\n      for (\n        var nElIdx = -1, iElId = 0;\n        iElId < oEvtListeners.aEls.length;\n        iElId++\n      ) {\n        if (oEvtListeners.aEls[iElId] === this) {\n          nElIdx = iElId\n          break\n        }\n      }\n      if (nElIdx === -1) {\n        oEvtListeners.aEls.push(this)\n        oEvtListeners.aEvts.push([fListener])\n        this['on' + sEventType] = runListeners\n      } else {\n        var aElListeners = oEvtListeners.aEvts[nElIdx]\n        if (this['on' + sEventType] !== runListeners) {\n          aElListeners.splice(0)\n          this['on' + sEventType] = runListeners\n        }\n        for (var iLstId = 0; iLstId < aElListeners.length; iLstId++) {\n          if (aElListeners[iLstId] === fListener) {\n            return\n          }\n        }\n        aElListeners.push(fListener)\n      }\n    } else {\n      oListeners[sEventType] = { aEls: [this], aEvts: [[fListener]] }\n      this['on' + sEventType] = runListeners\n    }\n  }\n  Element.prototype.removeEventListener = function(\n    sEventType,\n    fListener /*, useCapture (will be ignored!) */\n  ) {\n    if (!oListeners.hasOwnProperty(sEventType)) {\n      return\n    }\n    var oEvtListeners = oListeners[sEventType]\n    for (\n      var nElIdx = -1, iElId = 0;\n      iElId < oEvtListeners.aEls.length;\n      iElId++\n    ) {\n      if (oEvtListeners.aEls[iElId] === this) {\n        nElIdx = iElId\n        break\n      }\n    }\n    if (nElIdx === -1) {\n      return\n    }\n    for (\n      var iLstId = 0, aElListeners = oEvtListeners.aEvts[nElIdx];\n      iLstId < aElListeners.length;\n      iLstId++\n    ) {\n      if (aElListeners[iLstId] === fListener) {\n        aElListeners.splice(iLstId, 1)\n      }\n    }\n  }\n}\n\nif (typeof Object.create !== 'function') {\n  Object.create = function(proto, propertiesObject) {\n    if (typeof proto !== 'object' && typeof proto !== 'function') {\n      throw new TypeError('Object prototype may only be an Object: ' + proto)\n    } else if (proto === null) {\n      throw new Error(\n        \"This browser's implementation of Object.create is a shim and doesn't support 'null' as the first argument.\"\n      )\n    }\n\n    // if (typeof propertiesObject != 'undefined') {\n    //     throw new Error(\"This browser's implementation of Object.create is a shim and doesn't support a second argument.\");\n    // }\n\n    function F() {}\n    F.prototype = proto\n\n    return new F()\n  }\n}\n\nif (!String.prototype.trim) {\n  String.prototype.trim = function() {\n    return this.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '')\n  }\n}\n\n/**\n *  Copy all properties from `props` onto `obj`.\n *  @param {Object} obj\t\tObject onto which properties should be copied.\n *  @param {Object} props\tObject from which to copy properties.\n *  @returns obj\n *  @private\n */\nexport function extend(obj, props) {\n  for (let i in props) obj[i] = props[i]\n  return obj\n}\n\n/** Invoke or update a ref, depending on whether it is a function or object ref.\n *  @param {object|function} [ref=null]\n *  @param {any} [value]\n */\nexport function applyRef(ref, value) {\n  if (ref != null) {\n    if (typeof ref == 'function') ref(value)\n    else ref.current = value\n  }\n}\n\n/**\n * Call a function asynchronously, as soon as possible. Makes\n * use of HTML Promise to schedule the callback if available,\n * otherwise falling back to `setTimeout` (mainly for IE<11).\n *\n * @param {Function} callback\n */\n\nlet usePromise = typeof Promise == 'function'\n\n// for native\nif (\n  typeof document !== 'object' &&\n  typeof global !== 'undefined' &&\n  global.__config__\n) {\n  if (global.__config__.platform === 'android') {\n    usePromise = true\n  } else {\n    let systemVersion =\n      (global.__config__.systemVersion &&\n        global.__config__.systemVersion.split('.')[0]) ||\n      0\n    if (systemVersion > 8) {\n      usePromise = true\n    }\n  }\n}\n\nexport const defer = usePromise\n  ? Promise.resolve().then.bind(Promise.resolve())\n  : setTimeout\n\nexport function isArray(obj) {\n  return Object.prototype.toString.call(obj) === '[object Array]'\n}\n\nexport function nProps(props) {\n  if (!props || isArray(props)) return {}\n  const result = {}\n  Object.keys(props).forEach(key => {\n    result[key] = props[key].value\n  })\n  return result\n}\n\nexport function getUse(data, paths) {\n  const obj = []\n  paths.forEach((path, index) => {\n    const isPath = typeof path === 'string'\n    if (isPath) {\n      obj[index] = getTargetByPath(data, path)\n    } else {\n      const key = Object.keys(path)[0]\n      const value = path[key]\n      if (typeof value === 'string') {\n        obj[index] = getTargetByPath(data, value)\n      } else {\n        const tempPath = value[0]\n        if (typeof tempPath === 'string') {\n          const tempVal = getTargetByPath(data, tempPath)\n          obj[index] = value[1] ? value[1](tempVal) : tempVal\n        } else {\n          const args = []\n          tempPath.forEach(path => {\n            args.push(getTargetByPath(data, path))\n          })\n          obj[index] = value[1].apply(null, args)\n        }\n      }\n      obj[key] = obj[index]\n    }\n  })\n  return obj\n}\n\nexport function getTargetByPath(origin, path) {\n  const arr = path\n    .replace(/]/g, '')\n    .replace(/\\[/g, '.')\n    .split('.')\n  let current = origin\n  for (let i = 0, len = arr.length; i < len; i++) {\n    current = current[arr[i]]\n  }\n  return current\n}\n","import { extend } from './util'\nimport { h } from './h'\n\n/**\n * Clones the given VNode, optionally adding attributes/props and replacing its\n * children.\n * @param {import('./vnode').VNode} vnode The virtual DOM element to clone\n * @param {object} props Attributes/props to add when cloning\n * @param {Array<import('./vnode').VNode>} [rest] Any additional arguments will be used as replacement\n *  children.\n */\nexport function cloneElement(vnode, props) {\n  return h(\n    vnode.nodeName,\n    extend(extend({}, vnode.attributes), props),\n    arguments.length > 2 ? [].slice.call(arguments, 2) : vnode.children\n  )\n}\n","import options from './options'\nimport { defer } from './util'\nimport { renderComponent } from './vdom/component'\n\n/**\n * Managed queue of dirty components to be re-rendered\n * @type {Array<import('./component').Component>}\n */\nlet items = []\n\n/**\n * Enqueue a rerender of a component\n * @param {import('./component').Component} component The component to rerender\n */\nexport function enqueueRender(component) {\n  if (\n    !component._dirty &&\n    (component._dirty = true) &&\n    items.push(component) == 1\n  ) {\n    ;(options.debounceRendering || defer)(rerender)\n  }\n}\n\n/** Rerender all enqueued dirty components */\nexport function rerender() {\n  let p\n  while ((p = items.pop())) {\n    if (p._dirty) renderComponent(p)\n  }\n}\n","import { extend } from '../util'\nimport options from '../options'\n\nconst mapping = options.mapping\n/**\n * Check if two nodes are equivalent.\n *\n * @param {Node} node\t\t\tDOM Node to compare\n * @param {VNode} vnode\t\t\tVirtual DOM node to compare\n * @param {boolean} [hydrating=false]\tIf true, ignores component constructors when comparing.\n * @private\n */\nexport function isSameNodeType(node, vnode, hydrating) {\n  if (typeof vnode === 'string' || typeof vnode === 'number') {\n    return node.splitText !== undefined\n  }\n  if (typeof vnode.nodeName === 'string') {\n    var ctor = mapping[vnode.nodeName]\n    if (ctor) {\n      return hydrating || node._componentConstructor === ctor\n    }\n    return !node._componentConstructor && isNamedNode(node, vnode.nodeName)\n  }\n  return hydrating || node._componentConstructor === vnode.nodeName\n}\n\n/**\n * Check if an Element has a given nodeName, case-insensitively.\n *\n * @param {Element} node\tA DOM Element to inspect the name of.\n * @param {String} nodeName\tUnnormalized name to compare against.\n */\nexport function isNamedNode(node, nodeName) {\n  return (\n    node.normalizedNodeName === nodeName ||\n    node.nodeName.toLowerCase() === nodeName.toLowerCase()\n  )\n}\n\n/**\n * Reconstruct Component-style `props` from a VNode.\n * Ensures default/fallback values from `defaultProps`:\n * Own-properties of `defaultProps` not present in `vnode.attributes` are added.\n *\n * @param {VNode} vnode\n * @returns {Object} props\n */\nexport function getNodeProps(vnode) {\n  let props = extend({}, vnode.attributes)\n  props.children = vnode.children\n\n  let defaultProps = vnode.nodeName.defaultProps\n  if (defaultProps !== undefined) {\n    for (let i in defaultProps) {\n      if (props[i] === undefined) {\n        props[i] = defaultProps[i]\n      }\n    }\n  }\n\n  return props\n}\n","import { IS_NON_DIMENSIONAL } from '../constants'\nimport { applyRef } from '../util'\nimport options from '../options'\n\n/** Create an element with the given nodeName.\n *\t@param {String} nodeName\n *\t@param {Boolean} [isSvg=false]\tIf `true`, creates an element within the SVG namespace.\n *\t@returns {Element} node\n */\nexport function createNode(nodeName, isSvg) {\n  let node = isSvg\n    ? options.doc.createElementNS('http://www.w3.org/2000/svg', nodeName)\n    : options.doc.createElement(nodeName)\n  node.normalizedNodeName = nodeName\n  return node\n}\n\nfunction parseCSSText(cssText) {\n  let cssTxt = cssText.replace(/\\/\\*(.|\\s)*?\\*\\//g, ' ').replace(/\\s+/g, ' ')\n  let style = {},\n    [a, b, rule] = cssTxt.match(/ ?(.*?) ?{([^}]*)}/) || [a, b, cssTxt]\n  let cssToJs = s => s.replace(/\\W+\\w/g, match => match.slice(-1).toUpperCase())\n  let properties = rule\n    .split(';')\n    .map(o => o.split(':').map(x => x && x.trim()))\n  for (let [property, value] of properties) style[cssToJs(property)] = value\n  return style\n}\n\n/** Remove a child node from its parent if attached.\n *\t@param {Element} node\t\tThe node to remove\n */\nexport function removeNode(node) {\n  let parentNode = node.parentNode\n  if (parentNode) parentNode.removeChild(node)\n}\n\n/** Set a named attribute on the given Node, with special behavior for some names and event handlers.\n *\tIf `value` is `null`, the attribute/handler will be removed.\n *\t@param {Element} node\tAn element to mutate\n *\t@param {string} name\tThe name/key to set, such as an event or attribute name\n *\t@param {any} old\tThe last value that was set for this name/node pair\n *\t@param {any} value\tAn attribute value, such as a function to be used as an event handler\n *\t@param {Boolean} isSvg\tAre we currently diffing inside an svg?\n *\t@private\n */\nexport function setAccessor(node, name, old, value, isSvg) {\n  if (name === 'className') name = 'class'\n\n  if (name === 'key') {\n    // ignore\n  } else if (name === 'ref') {\n    applyRef(old, null)\n    applyRef(value, node)\n  } else if (name === 'class' && !isSvg) {\n    node.className = value || ''\n  } else if (name === 'style') {\n    if (options.isWeb) {\n      if (!value || typeof value === 'string' || typeof old === 'string') {\n        node.style.cssText = value || ''\n      }\n      if (value && typeof value === 'object') {\n        if (typeof old !== 'string') {\n          for (let i in old) if (!(i in value)) node.style[i] = ''\n        }\n        for (let i in value) {\n          node.style[i] =\n            typeof value[i] === 'number' && IS_NON_DIMENSIONAL.test(i) === false\n              ? value[i] + 'px'\n              : value[i]\n        }\n      }\n    } else {\n      let oldJson = old,\n        currentJson = value\n      if (typeof old === 'string') {\n        oldJson = parseCSSText(old)\n      }\n      if (typeof value == 'string') {\n        currentJson = parseCSSText(value)\n      }\n\n      let result = {},\n        changed = false\n\n      if (oldJson) {\n        for (let key in oldJson) {\n          if (typeof currentJson == 'object' && !(key in currentJson)) {\n            result[key] = ''\n            changed = true\n          }\n        }\n\n        for (let ckey in currentJson) {\n          if (currentJson[ckey] !== oldJson[ckey]) {\n            result[ckey] = currentJson[ckey]\n            changed = true\n          }\n        }\n\n        if (changed) {\n          node.setStyles(result)\n        }\n      } else {\n        node.setStyles(currentJson)\n      }\n    }\n  } else if (name === 'dangerouslySetInnerHTML') {\n    if (value) node.innerHTML = value.__html || ''\n  } else if (name[0] == 'o' && name[1] == 'n') {\n    let useCapture = name !== (name = name.replace(/Capture$/, ''))\n    name = name.toLowerCase().substring(2)\n    if (value) {\n      if (!old) {\n        node.addEventListener(name, eventProxy, useCapture)\n        if (name == 'tap') {\n          node.addEventListener('touchstart', touchStart, useCapture)\n          node.addEventListener('touchend', touchEnd, useCapture)\n        }\n      }\n    } else {\n      node.removeEventListener(name, eventProxy, useCapture)\n      if (name == 'tap') {\n        node.removeEventListener('touchstart', touchStart, useCapture)\n        node.removeEventListener('touchend', touchEnd, useCapture)\n      }\n    }\n    ;(node._listeners || (node._listeners = {}))[name] = value\n  } else if (name !== 'list' && name !== 'type' && !isSvg && name in node) {\n    // Attempt to set a DOM property to the given value.\n    // IE & FF throw for certain property-value combinations.\n    try {\n      node[name] = value == null ? '' : value\n    } catch (e) {}\n    if ((value == null || value === false) && name != 'spellcheck')\n      node.removeAttribute(name)\n  } else {\n    let ns = isSvg && name !== (name = name.replace(/^xlink:?/, ''))\n    if (value == null || value === false) {\n      if (ns)\n        node.removeAttributeNS(\n          'http://www.w3.org/1999/xlink',\n          name.toLowerCase()\n        )\n      else node.removeAttribute(name)\n    } else if (typeof value !== 'function') {\n      if (ns)\n        node.setAttributeNS(\n          'http://www.w3.org/1999/xlink',\n          name.toLowerCase(),\n          value\n        )\n      else node.setAttribute(name, value)\n    }\n  }\n}\n\n/** Proxy an event to hooked event handlers\n *\t@private\n */\nfunction eventProxy(e) {\n  return this._listeners[e.type]((options.event && options.event(e)) || e)\n}\n\nfunction touchStart(e) {\n  this.___touchX = e.touches[0].pageX\n  this.___touchY = e.touches[0].pageY\n  this.___scrollTop = document.body.scrollTop\n}\n\nfunction touchEnd(e) {\n  if (\n    Math.abs(e.changedTouches[0].pageX - this.___touchX) < 30 &&\n    Math.abs(e.changedTouches[0].pageY - this.___touchY) < 30 &&\n    Math.abs(document.body.scrollTop - this.___scrollTop) < 30\n  ) {\n    this.dispatchEvent(new CustomEvent('tap', { detail: e }))\n  }\n}\n","import options from './options'\n\nlet styleId = 0\n\nexport function getCtorName(ctor) {\n  for (let i = 0, len = options.styleCache.length; i < len; i++) {\n    let item = options.styleCache[i]\n\n    if (item.ctor === ctor) {\n      return item.attrName\n    }\n  }\n\n  let attrName = 's' + styleId\n  options.styleCache.push({ ctor, attrName })\n  styleId++\n\n  return attrName\n}\n\n// many thanks to https://github.com/thomaspark/scoper/\nexport function scoper(css, prefix) {\n  prefix = '[' + prefix.toLowerCase() + ']'\n  // https://www.w3.org/TR/css-syntax-3/#lexical\n  css = css.replace(/\\/\\*[^*]*\\*+([^/][^*]*\\*+)*\\//g, '')\n  // eslint-disable-next-line\n    let re = new RegExp('([^\\r\\n,{}:]+)(:[^\\r\\n,{}]+)?(,(?=[^{}]*{)|\\s*{)', 'g')\n  /**\n   * Example:\n   *\n   * .classname::pesudo { color:red }\n   *\n   * g1 is normal selector `.classname`\n   * g2 is pesudo class or pesudo element\n   * g3 is the suffix\n   */\n  css = css.replace(re, (g0, g1, g2, g3) => {\n    if (typeof g2 === 'undefined') {\n      g2 = ''\n    }\n\n    /* eslint-ignore-next-line */\n    if (\n      g1.match(\n        /^\\s*(@media|\\d+%?|@-webkit-keyframes|@keyframes|to|from|@font-face)/\n      )\n    ) {\n      return g1 + g2 + g3\n    }\n\n    let appendClass = g1.replace(/(\\s*)$/, '') + prefix + g2\n    //let prependClass = prefix + ' ' + g1.trim() + g2;\n\n    return appendClass + g3\n    //return appendClass + ',' + prependClass + g3;\n  })\n\n  return css\n}\n\nexport function addStyle(cssText, id) {\n  id = id.toLowerCase()\n  let ele = document.getElementById(id)\n  let head = document.getElementsByTagName('head')[0]\n  if (ele && ele.parentNode === head) {\n    head.removeChild(ele)\n  }\n\n  let someThingStyles = document.createElement('style')\n  head.appendChild(someThingStyles)\n  someThingStyles.setAttribute('type', 'text/css')\n  someThingStyles.setAttribute('id', id)\n  if (window.ActiveXObject) {\n    someThingStyles.styleSheet.cssText = cssText\n  } else {\n    someThingStyles.textContent = cssText\n  }\n}\n\nexport function addStyleWithoutId(cssText) {\n  let head = document.getElementsByTagName('head')[0]\n  let someThingStyles = document.createElement('style')\n  head.appendChild(someThingStyles)\n  someThingStyles.setAttribute('type', 'text/css')\n\n  if (window.ActiveXObject) {\n    someThingStyles.styleSheet.cssText = cssText\n  } else {\n    someThingStyles.textContent = cssText\n  }\n}\n\nexport function addScopedAttrStatic(vdom, attr) {\n  if (options.scopedStyle) {\n    scopeVdom(attr, vdom)\n  }\n}\n\nexport function addStyleToHead(style, attr) {\n  if (options.scopedStyle) {\n    if (!options.staticStyleMapping[attr]) {\n      addStyle(scoper(style, attr), attr)\n      options.staticStyleMapping[attr] = true\n    }\n  } else if (!options.staticStyleMapping[attr]) {\n    addStyleWithoutId(style)\n    options.staticStyleMapping[attr] = true\n  }\n}\n\nexport function scopeVdom(attr, vdom) {\n  if (typeof vdom === 'object') {\n    vdom.attributes = vdom.attributes || {}\n    vdom.attributes[attr] = ''\n    vdom.css = vdom.css || {}\n    vdom.css[attr] = ''\n    vdom.children.forEach(child => scopeVdom(attr, child))\n  }\n}\n\nexport function scopeHost(vdom, css) {\n  if (typeof vdom === 'object' && css) {\n    vdom.attributes = vdom.attributes || {}\n    for (let key in css) {\n      vdom.attributes[key] = ''\n    }\n  }\n}\n","import { ATTR_KEY } from '../constants'\nimport { isSameNodeType, isNamedNode } from './index'\nimport { buildComponentFromVNode } from './component'\nimport { createNode, setAccessor } from '../dom/index'\nimport { unmountComponent } from './component'\nimport options from '../options'\nimport { applyRef } from '../util'\nimport { removeNode } from '../dom/index'\nimport { isArray } from '../util'\nimport { addStyleToHead, getCtorName } from '../style'\n/** Queue of components that have been mounted and are awaiting componentDidMount */\nexport const mounts = []\n\n/** Diff recursion count, used to track the end of the diff cycle. */\nexport let diffLevel = 0\n\n/** Global flag indicating if the diff is currently within an SVG */\nlet isSvgMode = false\n\n/** Global flag indicating if the diff is performing hydration */\nlet hydrating = false\n\n/** Invoke queued componentDidMount lifecycle methods */\nexport function flushMounts() {\n  let c\n  while ((c = mounts.shift())) {\n    if (options.afterMount) options.afterMount(c)\n    if (c.componentDidMount) c.componentDidMount()\n    if (c.installed) c.installed()\n    if (c.constructor.css || c.css) {\n      addStyleToHead(\n        c.constructor.css\n          ? c.constructor.css\n          : typeof c.css === 'function'\n            ? c.css()\n            : c.css,\n        '_s' + getCtorName(c.constructor)\n      )\n    }\n  }\n}\n\n/** Apply differences in a given vnode (and it's deep children) to a real DOM Node.\n *\t@param {Element} [dom=null]\t\tA DOM node to mutate into the shape of the `vnode`\n *\t@param {VNode} vnode\t\t\tA VNode (with descendants forming a tree) representing the desired DOM structure\n *\t@returns {Element} dom\t\t\tThe created/mutated element\n *\t@private\n */\nexport function diff(dom, vnode, context, mountAll, parent, componentRoot) {\n  // diffLevel having been 0 here indicates initial entry into the diff (not a subdiff)\n  if (!diffLevel++) {\n    // when first starting the diff, check if we're diffing an SVG or within an SVG\n    isSvgMode = parent != null && parent.ownerSVGElement !== undefined\n\n    // hydration is indicated by the existing element to be diffed not having a prop cache\n    hydrating = dom != null && !(ATTR_KEY in dom)\n  }\n  let ret\n\n  if (isArray(vnode)) {\n    vnode = {\n      nodeName: 'span',\n      children: vnode\n    }\n  }\n\n  ret = idiff(dom, vnode, context, mountAll, componentRoot)\n  // append the element if its a new parent\n  if (parent && ret.parentNode !== parent) parent.appendChild(ret)\n\n  // diffLevel being reduced to 0 means we're exiting the diff\n  if (!--diffLevel) {\n    hydrating = false\n    // invoke queued componentDidMount lifecycle methods\n    if (!componentRoot) flushMounts()\n  }\n\n  return ret\n}\n\n/** Internals of `diff()`, separated to allow bypassing diffLevel / mount flushing. */\nfunction idiff(dom, vnode, context, mountAll, componentRoot) {\n  let out = dom,\n    prevSvgMode = isSvgMode\n\n  // empty values (null, undefined, booleans) render as empty Text nodes\n  if (vnode == null || typeof vnode === 'boolean') vnode = ''\n\n  // If the VNode represents a Component, perform a component diff:\n  let vnodeName = vnode.nodeName\n  if (options.mapping[vnodeName]) {\n    vnode.nodeName = options.mapping[vnodeName]\n    return buildComponentFromVNode(dom, vnode, context, mountAll)\n  }\n\n  // Fast case: Strings & Numbers create/update Text nodes.\n  if (typeof vnode === 'string' || typeof vnode === 'number') {\n    // update if it's already a Text node:\n    if (\n      dom &&\n      dom.splitText !== undefined &&\n      dom.parentNode &&\n      (!dom._component || componentRoot)\n    ) {\n      /* istanbul ignore if */ /* Browser quirk that can't be covered: https://github.com/developit/preact/commit/fd4f21f5c45dfd75151bd27b4c217d8003aa5eb9 */\n      if (dom.nodeValue != vnode) {\n        dom.nodeValue = vnode\n      }\n    } else {\n      // it wasn't a Text node: replace it with one and recycle the old Element\n      out = document.createTextNode(vnode)\n      if (dom) {\n        if (dom.parentNode) dom.parentNode.replaceChild(out, dom)\n        recollectNodeTree(dom, true)\n      }\n    }\n\n    //ie8 error\n    try {\n      out[ATTR_KEY] = true\n    } catch (e) {}\n\n    return out\n  }\n\n  if (typeof vnodeName === 'function') {\n    return buildComponentFromVNode(dom, vnode, context, mountAll)\n  }\n\n  // Tracks entering and exiting SVG namespace when descending through the tree.\n  isSvgMode =\n    vnodeName === 'svg'\n      ? true\n      : vnodeName === 'foreignObject'\n      ? false\n      : isSvgMode\n\n  // If there's no existing element or it's the wrong type, create a new one:\n  vnodeName = String(vnodeName)\n  if (!dom || !isNamedNode(dom, vnodeName)) {\n    out = createNode(vnodeName, isSvgMode)\n\n    if (dom) {\n      // move children into the replacement node\n      while (dom.firstChild) out.appendChild(dom.firstChild)\n\n      // if the previous Element was mounted into the DOM, replace it inline\n      if (dom.parentNode) dom.parentNode.replaceChild(out, dom)\n\n      // recycle the old element (skips non-Element node types)\n      recollectNodeTree(dom, true)\n    }\n  }\n\n  let fc = out.firstChild,\n    props = out[ATTR_KEY],\n    vchildren = vnode.children\n\n  if (props == null) {\n    props = out[ATTR_KEY] = {}\n    for (let a = out.attributes, i = a.length; i--; )\n      props[a[i].name] = a[i].value\n  }\n\n  // Optimization: fast-path for elements containing a single TextNode:\n  if (\n    !hydrating &&\n    vchildren &&\n    vchildren.length === 1 &&\n    typeof vchildren[0] === 'string' &&\n    fc != null &&\n    fc.splitText !== undefined &&\n    fc.nextSibling == null\n  ) {\n    if (fc.nodeValue != vchildren[0]) {\n      fc.nodeValue = vchildren[0]\n    }\n  }\n  // otherwise, if there are existing or new children, diff them:\n  else if ((vchildren && vchildren.length) || fc != null) {\n    innerDiffNode(\n      out,\n      vchildren,\n      context,\n      mountAll,\n      hydrating || props.dangerouslySetInnerHTML != null\n    )\n  }\n\n  // Apply attributes/props from VNode to the DOM Element:\n  diffAttributes(out, vnode.attributes, props)\n\n  // restore previous SVG mode: (in case we're exiting an SVG namespace)\n  isSvgMode = prevSvgMode\n\n  return out\n}\n\n/** Apply child and attribute changes between a VNode and a DOM Node to the DOM.\n *\t@param {Element} dom\t\t\tElement whose children should be compared & mutated\n *\t@param {Array} vchildren\t\tArray of VNodes to compare to `dom.childNodes`\n *\t@param {Object} context\t\t\tImplicitly descendant context object (from most recent `getChildContext()`)\n *\t@param {Boolean} mountAll\n *\t@param {Boolean} isHydrating\tIf `true`, consumes externally created elements similar to hydration\n */\nfunction innerDiffNode(dom, vchildren, context, mountAll, isHydrating) {\n  let originalChildren = dom.childNodes,\n    children = [],\n    keyed = {},\n    keyedLen = 0,\n    min = 0,\n    len = originalChildren.length,\n    childrenLen = 0,\n    vlen = vchildren ? vchildren.length : 0,\n    j,\n    c,\n    f,\n    vchild,\n    child\n\n  // Build up a map of keyed children and an Array of unkeyed children:\n  if (len !== 0) {\n    for (let i = 0; i < len; i++) {\n      let child = originalChildren[i],\n        props = child[ATTR_KEY],\n        key =\n          vlen && props\n            ? child._component\n              ? child._component.__key\n              : props.key\n            : null\n      if (key != null) {\n        keyedLen++\n        keyed[key] = child\n      } else if (\n        props ||\n        (child.splitText !== undefined\n          ? isHydrating\n            ? child.nodeValue.trim()\n            : true\n          : isHydrating)\n      ) {\n        children[childrenLen++] = child\n      }\n    }\n  }\n\n  if (vlen !== 0) {\n    for (let i = 0; i < vlen; i++) {\n      vchild = vchildren[i]\n      child = null\n\n      // attempt to find a node based on key matching\n      let key = vchild.key\n      if (key != null) {\n        if (keyedLen && keyed[key] !== undefined) {\n          child = keyed[key]\n          keyed[key] = undefined\n          keyedLen--\n        }\n      }\n      // attempt to pluck a node of the same type from the existing children\n      else if (min < childrenLen) {\n        for (j = min; j < childrenLen; j++) {\n          if (\n            children[j] !== undefined &&\n            isSameNodeType((c = children[j]), vchild, isHydrating)\n          ) {\n            child = c\n            children[j] = undefined\n            if (j === childrenLen - 1) childrenLen--\n            if (j === min) min++\n            break\n          }\n        }\n      }\n\n      // morph the matched/found/created DOM child to match vchild (deep)\n      child = idiff(child, vchild, context, mountAll)\n\n      f = originalChildren[i]\n      if (child && child !== dom && child !== f) {\n        if (f == null) {\n          dom.appendChild(child)\n        } else if (child === f.nextSibling) {\n          removeNode(f)\n        } else {\n          dom.insertBefore(child, f)\n        }\n      }\n    }\n  }\n\n  // remove unused keyed children:\n  if (keyedLen) {\n    for (let i in keyed)\n      if (keyed[i] !== undefined) recollectNodeTree(keyed[i], false)\n  }\n\n  // remove orphaned unkeyed children:\n  while (min <= childrenLen) {\n    if ((child = children[childrenLen--]) !== undefined)\n      recollectNodeTree(child, false)\n  }\n}\n\n/** Recursively recycle (or just unmount) a node and its descendants.\n *\t@param {Node} node\t\t\t\t\t\tDOM node to start unmount/removal from\n *\t@param {Boolean} [unmountOnly=false]\tIf `true`, only triggers unmount lifecycle, skips removal\n */\nexport function recollectNodeTree(node, unmountOnly) {\n  let component = node._component\n  if (component) {\n    // if node is owned by a Component, unmount that component (ends up recursing back here)\n    unmountComponent(component)\n  } else {\n    // If the node's VNode had a ref function, invoke it with null here.\n    // (this is part of the React spec, and smart for unsetting references)\n    if (node[ATTR_KEY] != null) applyRef(node[ATTR_KEY].ref, null)\n\n    if (unmountOnly === false || node[ATTR_KEY] == null) {\n      removeNode(node)\n    }\n\n    removeChildren(node)\n  }\n}\n\n/** Recollect/unmount all children.\n *\t- we use .lastChild here because it causes less reflow than .firstChild\n *\t- it's also cheaper than accessing the .childNodes Live NodeList\n */\nexport function removeChildren(node) {\n  node = node.lastChild\n  while (node) {\n    let next = node.previousSibling\n    recollectNodeTree(node, true)\n    node = next\n  }\n}\n\n/** Apply differences in attributes from a VNode to the given DOM Element.\n *\t@param {Element} dom\t\tElement with attributes to diff `attrs` against\n *\t@param {Object} attrs\t\tThe desired end-state key-value attribute pairs\n *\t@param {Object} old\t\t\tCurrent/previous attributes (from previous VNode or element's prop cache)\n */\nfunction diffAttributes(dom, attrs, old) {\n  let name\n\n  // remove attributes no longer present on the vnode by setting them to undefined\n  for (name in old) {\n    if (!(attrs && attrs[name] != null) && old[name] != null) {\n      setAccessor(dom, name, old[name], (old[name] = undefined), isSvgMode)\n    }\n  }\n\n  // add new & update changed attributes\n  for (name in attrs) {\n    if (\n      name !== 'children' &&\n      name !== 'innerHTML' &&\n      (!(name in old) ||\n        attrs[name] !==\n          (name === 'value' || name === 'checked' ? dom[name] : old[name]))\n    ) {\n      setAccessor(dom, name, old[name], (old[name] = attrs[name]), isSvgMode)\n    }\n  }\n}\n","import options from './options'\n\nconst OBJECTTYPE = '[object Object]'\nconst ARRAYTYPE = '[object Array]'\n\nexport function define(name, ctor) {\n  options.mapping[name] = ctor\n  if (ctor.use) {\n    ctor.updatePath = getPath(ctor.use)\n  } else if (ctor.data) {\n    //Compatible with older versions\n    ctor.updatePath = getUpdatePath(ctor.data)\n  }\n}\n\nexport function getPath(obj) {\n  if (Object.prototype.toString.call(obj) === '[object Array]') {\n    const result = {}\n    obj.forEach(item => {\n      if (typeof item === 'string') {\n        result[item] = true\n      } else {\n        const tempPath = item[Object.keys(item)[0]]\n        if (typeof tempPath === 'string') {\n          result[tempPath] = true\n        } else {\n          if (typeof tempPath[0] === 'string') {\n            result[tempPath[0]] = true\n          } else {\n            tempPath[0].forEach(path => (result[path] = true))\n          }\n        }\n      }\n    })\n    return result\n  } else {\n    return getUpdatePath(obj)\n  }\n}\n\nexport function getUpdatePath(data) {\n  const result = {}\n  dataToPath(data, result)\n  return result\n}\n\nfunction dataToPath(data, result) {\n  Object.keys(data).forEach(key => {\n    result[key] = true\n    const type = Object.prototype.toString.call(data[key])\n    if (type === OBJECTTYPE) {\n      _objToPath(data[key], key, result)\n    } else if (type === ARRAYTYPE) {\n      _arrayToPath(data[key], key, result)\n    }\n  })\n}\n\nfunction _objToPath(data, path, result) {\n  Object.keys(data).forEach(key => {\n    result[path + '.' + key] = true\n    delete result[path]\n    const type = Object.prototype.toString.call(data[key])\n    if (type === OBJECTTYPE) {\n      _objToPath(data[key], path + '.' + key, result)\n    } else if (type === ARRAYTYPE) {\n      _arrayToPath(data[key], path + '.' + key, result)\n    }\n  })\n}\n\nfunction _arrayToPath(data, path, result) {\n  data.forEach((item, index) => {\n    result[path + '[' + index + ']'] = true\n    delete result[path]\n    const type = Object.prototype.toString.call(item)\n    if (type === OBJECTTYPE) {\n      _objToPath(item, path + '[' + index + ']', result)\n    } else if (type === ARRAYTYPE) {\n      _arrayToPath(item, path + '[' + index + ']', result)\n    }\n  })\n}\n","import Component from '../component'\nimport { getUse } from '../util'\nimport { getPath } from '../define'\n\n/**\n * Retains a pool of Components for re-use.\n * @type {Component[]}\n * @private\n */\nexport const recyclerComponents = []\n\n/**\n * Create a component. Normalizes differences between PFC's and classful\n * Components.\n * @param {function} Ctor The constructor of the component to create\n * @param {object} props The initial props of the component\n * @param {object} context The initial context of the component\n * @returns {import('../component').Component}\n */\nexport function createComponent(Ctor, props, context, vnode) {\n  let inst,\n    i = recyclerComponents.length\n\n  if (Ctor.prototype && Ctor.prototype.render) {\n    inst = new Ctor(props, context)\n    Component.call(inst, props, context)\n  } else {\n    inst = new Component(props, context)\n    inst.constructor = Ctor\n    inst.render = doRender\n  }\n  vnode && (inst.scopedCssAttr = vnode.css)\n\n  if (inst.store && inst.store.data) {\n    if (inst.constructor.use) {\n      inst.use = getUse(inst.store.data, inst.constructor.use)\n      inst.store.instances.push(inst)\n    } else if (inst.initUse) {\n      const use = inst.initUse()\n      inst._updatePath = getPath(use)\n      inst.use = getUse(inst.store.data, use)\n      inst.store.instances.push(inst)\n    }\n  }\n\n  while (i--) {\n    if (recyclerComponents[i].constructor === Ctor) {\n      inst.nextBase = recyclerComponents[i].nextBase\n      recyclerComponents.splice(i, 1)\n      return inst\n    }\n  }\n\n  return inst\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, data, context) {\n  return this.constructor(props, context)\n}\n","/* obaa 1.0.0\n * By dntzhang\n * Github: https://github.com/Tencent/omi\n * MIT Licensed.\n */\n\nvar obaa = function(target, arr, callback) {\n  var _observe = function(target, arr, callback) {\n    if (!target.$observer) target.$observer = this\n    var $observer = target.$observer\n    var eventPropArr = []\n    if (obaa.isArray(target)) {\n      if (target.length === 0) {\n        target.$observeProps = {}\n        target.$observeProps.$observerPath = '#'\n      }\n      $observer.mock(target)\n    }\n    for (var prop in target) {\n      if (target.hasOwnProperty(prop)) {\n        if (callback) {\n          if (obaa.isArray(arr) && obaa.isInArray(arr, prop)) {\n            eventPropArr.push(prop)\n            $observer.watch(target, prop)\n          } else if (obaa.isString(arr) && prop == arr) {\n            eventPropArr.push(prop)\n            $observer.watch(target, prop)\n          }\n        } else {\n          eventPropArr.push(prop)\n          $observer.watch(target, prop)\n        }\n      }\n    }\n    $observer.target = target\n    if (!$observer.propertyChangedHandler) $observer.propertyChangedHandler = []\n    var propChanged = callback ? callback : arr\n    $observer.propertyChangedHandler.push({\n      all: !callback,\n      propChanged: propChanged,\n      eventPropArr: eventPropArr\n    })\n  }\n  _observe.prototype = {\n    onPropertyChanged: function(prop, value, oldValue, target, path) {\n      if (value !== oldValue && this.propertyChangedHandler) {\n        var rootName = obaa._getRootName(prop, path)\n        for (\n          var i = 0, len = this.propertyChangedHandler.length;\n          i < len;\n          i++\n        ) {\n          var handler = this.propertyChangedHandler[i]\n          if (\n            handler.all ||\n            obaa.isInArray(handler.eventPropArr, rootName) ||\n            rootName.indexOf('Array-') === 0\n          ) {\n            handler.propChanged.call(this.target, prop, value, oldValue, path)\n          }\n        }\n      }\n      if (prop.indexOf('Array-') !== 0 && typeof value === 'object') {\n        this.watch(target, prop, target.$observeProps.$observerPath)\n      }\n    },\n    mock: function(target) {\n      var self = this\n      obaa.methods.forEach(function(item) {\n        target[item] = function() {\n          var old = Array.prototype.slice.call(this, 0)\n          var result = Array.prototype[item].apply(\n            this,\n            Array.prototype.slice.call(arguments)\n          )\n          if (new RegExp('\\\\b' + item + '\\\\b').test(obaa.triggerStr)) {\n            for (var cprop in this) {\n              if (this.hasOwnProperty(cprop) && !obaa.isFunction(this[cprop])) {\n                self.watch(this, cprop, this.$observeProps.$observerPath)\n              }\n            }\n            //todo\n            self.onPropertyChanged(\n              'Array-' + item,\n              this,\n              old,\n              this,\n              this.$observeProps.$observerPath\n            )\n          }\n          return result\n        }\n        target[\n          'pure' + item.substring(0, 1).toUpperCase() + item.substring(1)\n        ] = function() {\n          return Array.prototype[item].apply(\n            this,\n            Array.prototype.slice.call(arguments)\n          )\n        }\n      })\n    },\n    watch: function(target, prop, path) {\n      if (prop === '$observeProps' || prop === '$observer') return\n      if (obaa.isFunction(target[prop])) return\n      if (!target.$observeProps) target.$observeProps = {}\n      if (path !== undefined) {\n        target.$observeProps.$observerPath = path\n      } else {\n        target.$observeProps.$observerPath = '#'\n      }\n      var self = this\n      var currentValue = (target.$observeProps[prop] = target[prop])\n      Object.defineProperty(target, prop, {\n        get: function() {\n          return this.$observeProps[prop]\n        },\n        set: function(value) {\n          var old = this.$observeProps[prop]\n          this.$observeProps[prop] = value\n          self.onPropertyChanged(\n            prop,\n            value,\n            old,\n            this,\n            target.$observeProps.$observerPath\n          )\n        }\n      })\n      if (typeof currentValue == 'object') {\n        if (obaa.isArray(currentValue)) {\n          this.mock(currentValue)\n          if (currentValue.length === 0) {\n            if (!currentValue.$observeProps) currentValue.$observeProps = {}\n            if (path !== undefined) {\n              currentValue.$observeProps.$observerPath = path\n            } else {\n              currentValue.$observeProps.$observerPath = '#'\n            }\n          }\n        }\n        for (var cprop in currentValue) {\n          if (currentValue.hasOwnProperty(cprop)) {\n            this.watch(\n              currentValue,\n              cprop,\n              target.$observeProps.$observerPath + '-' + prop\n            )\n          }\n        }\n      }\n    }\n  }\n  return new _observe(target, arr, callback)\n}\n\nobaa.methods = [\n  'concat',\n  'copyWithin',\n  'entries',\n  'every',\n  'fill',\n  'filter',\n  'find',\n  'findIndex',\n  'forEach',\n  'includes',\n  'indexOf',\n  'join',\n  'keys',\n  'lastIndexOf',\n  'map',\n  'pop',\n  'push',\n  'reduce',\n  'reduceRight',\n  'reverse',\n  'shift',\n  'slice',\n  'some',\n  'sort',\n  'splice',\n  'toLocaleString',\n  'toString',\n  'unshift',\n  'values',\n  'size'\n]\nobaa.triggerStr = [\n  'concat',\n  'copyWithin',\n  'fill',\n  'pop',\n  'push',\n  'reverse',\n  'shift',\n  'sort',\n  'splice',\n  'unshift',\n  'size'\n].join(',')\n\nobaa.isArray = function(obj) {\n  return Object.prototype.toString.call(obj) === '[object Array]'\n}\n\nobaa.isString = function(obj) {\n  return typeof obj === 'string'\n}\n\nobaa.isInArray = function(arr, item) {\n  for (var i = arr.length; --i > -1; ) {\n    if (item === arr[i]) return true\n  }\n  return false\n}\n\nobaa.isFunction = function(obj) {\n  return Object.prototype.toString.call(obj) == '[object Function]'\n}\n\nobaa._getRootName = function(prop, path) {\n  if (path === '#') {\n    return prop\n  }\n  return path.split('-')[1]\n}\n\nobaa.add = function(obj, prop) {\n  var $observer = obj.$observer\n  $observer.watch(obj, prop)\n}\n\nobaa.set = function(obj, prop, value, exec) {\n  if (!exec) {\n    obj[prop] = value\n  }\n  var $observer = obj.$observer\n  $observer.watch(obj, prop)\n  if (exec) {\n    obj[prop] = value\n  }\n}\n\nArray.prototype.size = function(length) {\n  this.length = length\n}\n\nexport default obaa\n","const callbacks = []\nconst nextTickCallback = []\n\nexport function tick(fn, scope) {\n  callbacks.push({ fn, scope })\n}\n\nexport function fireTick() {\n  callbacks.forEach(item => {\n    item.fn.call(item.scope)\n  })\n\n  nextTickCallback.forEach(nextItem => {\n    nextItem.fn.call(nextItem.scope)\n  })\n  nextTickCallback.length = 0\n}\n\nexport function nextTick(fn, scope) {\n  nextTickCallback.push({ fn, scope })\n}\n","import obaa from './obaa'\nimport { fireTick } from './tick'\n\nexport function proxyUpdate(ele) {\n  let timeout = null\n  obaa(ele.data, () => {\n    if (ele._willUpdate) {\n      return\n    }\n    if (ele.constructor.mergeUpdate) {\n      clearTimeout(timeout)\n\n      timeout = setTimeout(() => {\n        ele.update()\n        fireTick()\n      }, 0)\n    } else {\n      ele.update()\n      fireTick()\n    }\n  })\n}\n","import {\n  SYNC_RENDER,\n  NO_RENDER,\n  FORCE_RENDER,\n  ASYNC_RENDER,\n  ATTR_KEY\n} from '../constants'\nimport options from '../options'\nimport { extend, applyRef } from '../util'\nimport { enqueueRender } from '../render-queue'\nimport { getNodeProps } from './index'\nimport {\n  diff,\n  mounts,\n  diffLevel,\n  flushMounts,\n  recollectNodeTree,\n  removeChildren\n} from './diff'\nimport { createComponent, recyclerComponents } from './component-recycler'\nimport { removeNode } from '../dom/index'\nimport { addScopedAttrStatic, getCtorName, scopeHost } from '../style'\nimport { proxyUpdate } from '../observe'\n\n/** Set a component's `props` (generally derived from JSX attributes).\n *\t@param {Object} props\n *\t@param {Object} [opts]\n *\t@param {boolean} [opts.renderSync=false]\tIf `true` and {@link options.syncComponentUpdates} is `true`, triggers synchronous rendering.\n *\t@param {boolean} [opts.render=true]\t\t\tIf `false`, no render will be triggered.\n */\nexport function setComponentProps(\n  component,\n  props,\n  renderMode,\n  context,\n  mountAll\n) {\n  if (component._disable) return\n  component._disable = true\n\n  component.__ref = props.ref\n  component.__key = props.key\n  delete props.ref\n  delete props.key\n\n  if (typeof component.constructor.getDerivedStateFromProps === 'undefined') {\n    if (!component.base || mountAll) {\n      if (component.componentWillMount) component.componentWillMount()\n    } else if (component.componentWillReceiveProps) {\n      component.componentWillReceiveProps(props, context)\n    }\n  }\n\n  if (!component.base || mountAll) {\n    if (component.beforeInstall) component.beforeInstall()\n    if (component.install) component.install()\n    if (component.constructor.observe) {\n      proxyUpdate(component)\n    }\n  } else if (component.receiveProps) {\n    component.receiveProps(props, context, component.props)\n  }\n\n  if (context && context !== component.context) {\n    if (!component.prevContext) component.prevContext = component.context\n    component.context = context\n  }\n\n  if (!component.prevProps) component.prevProps = component.props\n  component.props = props\n\n  component._disable = false\n\n  if (renderMode !== NO_RENDER) {\n    if (\n      renderMode === SYNC_RENDER ||\n      options.syncComponentUpdates !== false ||\n      !component.base\n    ) {\n      renderComponent(component, SYNC_RENDER, mountAll)\n    } else {\n      enqueueRender(component)\n    }\n  }\n\n  applyRef(component.__ref, component)\n}\n\nfunction shallowComparison(old, attrs) {\n  let name\n\n  for (name in old) {\n    if (attrs[name] == null && old[name] != null) {\n      return true\n    }\n  }\n\n  if (old.children.length > 0 || attrs.children.length > 0) {\n    return true\n  }\n\n  for (name in attrs) {\n    if (name != 'children') {\n      let type = typeof attrs[name]\n      if (type == 'function' || type == 'object') {\n        return true\n      } else if (attrs[name] != old[name]) {\n        return true\n      }\n    }\n  }\n}\n\n/** Render a Component, triggering necessary lifecycle events and taking High-Order Components into account.\n *\t@param {Component} component\n *\t@param {Object} [opts]\n *\t@param {boolean} [opts.build=false]\t\tIf `true`, component will build and store a DOM node if not already associated with one.\n *\t@private\n */\nexport function renderComponent(component, renderMode, mountAll, isChild) {\n  if (component._disable) return\n\n  let props = component.props,\n    state = component.state,\n    context = component.context,\n    previousProps = component.prevProps || props,\n    previousState = component.prevState || state,\n    previousContext = component.prevContext || context,\n    isUpdate = component.base,\n    nextBase = component.nextBase,\n    initialBase = isUpdate || nextBase,\n    initialChildComponent = component._component,\n    skip = false,\n    snapshot = previousContext,\n    rendered,\n    inst,\n    cbase\n\n  if (component.constructor.getDerivedStateFromProps) {\n    state = extend(\n      extend({}, state),\n      component.constructor.getDerivedStateFromProps(props, state)\n    )\n    component.state = state\n  }\n\n  // if updating\n  if (isUpdate) {\n    component.props = previousProps\n    //component.data = previousState\n    component.state = previousState\n    component.context = previousContext\n    if (\n      renderMode !== FORCE_RENDER &&\n      component.shouldComponentUpdate &&\n      component.shouldComponentUpdate(props, state, context) === false\n    ) {\n      skip = true\n    } else {\n      if (component.componentWillUpdate) {\n        component.componentWillUpdate(props, state, context)\n      }\n\n      if (component.beforeUpdate) {\n        component.beforeUpdate(props, state, context)\n      }\n    }\n\n    // if (component.store || renderMode == FORCE_RENDER || shallowComparison(previousProps, props)) {\n    //   skip = false\n    //   if (component.beforeUpdate) {\n    //     component.beforeUpdate(props, state, context)\n    //   }\n    // } else {\n    //   skip = true\n    // }\n    component.props = props\n    component.state = state\n    //component.data = state\n    component.context = context\n  }\n\n  component.prevProps = component.prevState = component.prevContext = component.nextBase = null\n  component._dirty = false\n\n  if (!skip) {\n    component.beforeRender && component.beforeRender()\n    rendered = component.render(props, state, context)\n\n    //don't rerender\n    if (component.constructor.css || component.css) {\n      addScopedAttrStatic(rendered, '_s' + getCtorName(component.constructor))\n    }\n\n    scopeHost(rendered, component.scopedCssAttr)\n\n    // context to pass to the child, can be updated via (grand-)parent component\n    if (component.getChildContext) {\n      context = extend(extend({}, context), component.getChildContext())\n    }\n\n    if (isUpdate && component.getSnapshotBeforeUpdate) {\n      snapshot = component.getSnapshotBeforeUpdate(previousProps, previousState)\n    }\n\n    let childComponent = rendered && rendered.nodeName,\n      toUnmount,\n      base,\n      ctor = options.mapping[childComponent]\n    if (typeof childComponent === 'function') {\n      ctor = childComponent\n    }\n    if (ctor) {\n      // set up high order component link\n\n      let childProps = getNodeProps(rendered)\n      inst = initialChildComponent\n\n      if (inst && inst.constructor === ctor && childProps.key == inst.__key) {\n        setComponentProps(inst, childProps, SYNC_RENDER, context, false)\n      } else {\n        toUnmount = inst\n\n        component._component = inst = createComponent(ctor, childProps, context)\n        inst.nextBase = inst.nextBase || nextBase\n        inst._parentComponent = component\n        setComponentProps(inst, childProps, NO_RENDER, context, false)\n        renderComponent(inst, SYNC_RENDER, mountAll, true)\n      }\n\n      base = inst.base\n    } else {\n      cbase = initialBase\n\n      // destroy high order component link\n      toUnmount = initialChildComponent\n      if (toUnmount) {\n        cbase = component._component = null\n      }\n\n      if (initialBase || renderMode === SYNC_RENDER) {\n        if (cbase) cbase._component = null\n        base = diff(\n          cbase,\n          rendered,\n          context,\n          mountAll || !isUpdate,\n          initialBase && initialBase.parentNode,\n          true\n        )\n      }\n    }\n\n    if (initialBase && base !== initialBase && inst !== initialChildComponent) {\n      let baseParent = initialBase.parentNode\n      if (baseParent && base !== baseParent) {\n        baseParent.replaceChild(base, initialBase)\n\n        if (!toUnmount) {\n          initialBase._component = null\n          recollectNodeTree(initialBase, false)\n        }\n      }\n    }\n\n    if (toUnmount) {\n      unmountComponent(toUnmount)\n    }\n\n    component.base = base\n    if (base && !isChild) {\n      let componentRef = component,\n        t = component\n      while ((t = t._parentComponent)) {\n        ;(componentRef = t).base = base\n      }\n      base._component = componentRef\n      base._componentConstructor = componentRef.constructor\n    }\n  }\n\n  if (!isUpdate || mountAll) {\n    mounts.push(component)\n  } else if (!skip) {\n    // Ensure that pending componentDidMount() hooks of child components\n    // are called before the componentDidUpdate() hook in the parent.\n    // Note: disabled as it causes duplicate hooks, see https://github.com/developit/preact/issues/750\n    // flushMounts();\n\n    if (component.componentDidUpdate) {\n      component.componentDidUpdate(previousProps, previousState, snapshot)\n    }\n    if (component.updated) {\n      component.updated(previousProps, previousState, snapshot)\n    }\n    if (options.afterUpdate) options.afterUpdate(component)\n  }\n\n  if (component._renderCallbacks != null) {\n    while (component._renderCallbacks.length)\n      component._renderCallbacks.pop().call(component)\n  }\n\n  if (!diffLevel && !isChild) flushMounts()\n}\n\n/**\n * Apply the Component referenced by a VNode to the DOM.\n * @param {import('../dom').PreactElement} dom The DOM node to mutate\n * @param {import('../vnode').VNode} vnode A Component-referencing VNode\n * @param {object} context The current context\n * @param {boolean} mountAll Whether or not to immediately mount all components\n * @returns {import('../dom').PreactElement} The created/mutated element\n * @private\n */\nexport function buildComponentFromVNode(dom, vnode, context, mountAll) {\n  let c = dom && dom._component,\n    originalComponent = c,\n    oldDom = dom,\n    isDirectOwner = c && dom._componentConstructor === vnode.nodeName,\n    isOwner = isDirectOwner,\n    props = getNodeProps(vnode)\n  while (c && !isOwner && (c = c._parentComponent)) {\n    isOwner = c.constructor === vnode.nodeName\n  }\n\n  if (c && isOwner && (!mountAll || c._component)) {\n    setComponentProps(c, props, ASYNC_RENDER, context, mountAll)\n    dom = c.base\n  } else {\n    if (originalComponent && !isDirectOwner) {\n      unmountComponent(originalComponent)\n      dom = oldDom = null\n    }\n\n    c = createComponent(vnode.nodeName, props, context, vnode)\n    if (dom && !c.nextBase) {\n      c.nextBase = dom\n      // passing dom/oldDom as nextBase will recycle it if unused, so bypass recycling on L229:\n      oldDom = null\n    }\n    setComponentProps(c, props, SYNC_RENDER, context, mountAll)\n    dom = c.base\n\n    if (oldDom && dom !== oldDom) {\n      oldDom._component = null\n      recollectNodeTree(oldDom, false)\n    }\n  }\n\n  return dom\n}\n\n/**\n * Remove a component from the DOM and recycle it.\n * @param {import('../component').Component} component The Component instance to unmount\n * @private\n */\nexport function unmountComponent(component) {\n  if (options.beforeUnmount) options.beforeUnmount(component)\n\n  let base = component.base\n\n  component._disable = true\n\n  if (component.componentWillUnmount) component.componentWillUnmount()\n\n  if (component.uninstall) component.uninstall()\n\n  if (component.store && component.store.instances) {\n    for (let i = 0, len = component.store.instances.length; i < len; i++) {\n      if (component.store.instances[i] === component) {\n        component.store.instances.splice(i, 1)\n        break\n      }\n    }\n  }\n\n  component.base = null\n\n  // recursively tear down & recollect high-order component children:\n  let inner = component._component\n  if (inner) {\n    unmountComponent(inner)\n  } else if (base) {\n    if (base[ATTR_KEY] != null) applyRef(base[ATTR_KEY].ref, null)\n\n    component.nextBase = base\n\n    removeNode(base)\n    recyclerComponents.push(component)\n\n    removeChildren(base)\n  }\n\n  applyRef(component.__ref, null)\n}\n","import { FORCE_RENDER } from './constants'\nimport { extend } from './util'\nimport { renderComponent } from './vdom/component'\nimport options from './options'\nimport { enqueueRender } from './render-queue'\n/**\n * Base Component class.\n * Provides `setState()` and `forceUpdate()`, which trigger rendering.\n * @typedef {object} Component\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components' getChildContext\n * @public\n *\n * @example\n * class MyFoo extends Component {\n *   render(props, state) {\n *     return <div />;\n *   }\n * }\n */\n\nlet id = 0\n\nexport default function Component(props, store) {\n  this._dirty = true\n  this.context = store\n  this.props = props\n\n  this.elementId = id++\n  this.state = this.state || {}\n  this.data = this.data || {}\n  this._preCss = null\n\n  this.store = store\n  this._renderCallbacks = []\n}\n\nextend(Component.prototype, {\n  isReactComponent: {},\n  \n  update(callback) {\n    this._willUpdate = true\n    if (callback)\n      (this._renderCallbacks = this._renderCallbacks || []).push(callback)\n    renderComponent(this, FORCE_RENDER)\n    if (options.componentChange) options.componentChange(this, this.base)\n    this._willUpdate = false\n  },\n  setState(state, callback) {\n    if (!this.prevState) this.prevState = this.state\n    this.state = extend(\n      extend({}, this.state),\n      typeof state === 'function' ? state(this.state, this.props) : state\n    )\n    if (callback) this._renderCallbacks.push(callback)\n    enqueueRender(this)\n  },\n\n  fire(type, data) {\n    Object.keys(this.props).every(key => {\n      if ('on' + type.toLowerCase() === key.toLowerCase()) {\n        this.props[key]({ detail: data })\n        return false\n      }\n      return true\n    })\n  },\n\n  forceUpdate(callback) {\n    if (callback) this._renderCallbacks.push(callback)\n    renderComponent(this, FORCE_RENDER)\n  },\n\n  render() {}\n})\n\nComponent.is = 'WeElement'\n","import { diff } from './vdom/diff'\nimport obaa from './obaa'\nimport { getUse } from './util'\n\n/** Render JSX into a `parent` Element.\n *\t@param {VNode} vnode\t\tA (JSX) VNode to render\n *\t@param {Element} parent\t\tDOM element to render into\n *\t@param {object} [store]\n *\t@public\n */\nexport function render(vnode, parent, store, empty, merge) {\n  parent = typeof parent === 'string' ? document.querySelector(parent) : parent\n  if (\n    store &&\n    (typeof store === 'string' ||\n      (arguments.length === 3 &&\n        typeof Element !== undefined &&\n        (store instanceof Element || store.nodeType === 3)))\n  ) {\n    return diff(store, vnode, {}, false, parent, false)\n  }\n  obsStore(store)\n\n  if (empty) {\n    while (parent.firstChild) {\n      parent.removeChild(parent.firstChild)\n    }\n  }\n\n  if (merge) {\n    merge = typeof merge === 'string' ? document.querySelector(merge) : merge\n  }\n\n  return diff(merge, vnode, store, false, parent, false)\n}\n\nfunction obsStore(store) {\n  if (store && store.data) {\n    store.instances = []\n    extendStoreUpate(store)\n\n    obaa(store.data, (prop, val, old, path) => {\n      const patchs = {}\n      const key = fixPath(path + '-' + prop)\n      patchs[key] = true\n      store.update(patchs)\n    })\n  }\n}\n\nexport function merge(vnode, merge, store) {\n  obsStore(store)\n\n  merge = typeof merge === 'string' ? document.querySelector(merge) : merge\n\n  return diff(merge, vnode, store)\n}\n\nfunction extendStoreUpate(store) {\n  store.update = function(patch) {\n    const updateAll = matchGlobalData(this.globalData, patch)\n    if (Object.keys(patch).length > 0) {\n      this.instances.forEach(instance => {\n        if (\n          updateAll ||\n          this.updateAll ||\n          (instance.constructor.updatePath &&\n            needUpdate(patch, instance.constructor.updatePath)) ||\n          (instance._updatePath && needUpdate(patch, instance._updatePath))\n        ) {\n          //update this.use\n          if (instance.constructor.use) {\n            instance.use = getUse(store.data, instance.constructor.use)\n          } else if (instance.initUse) {\n            instance.use = getUse(store.data, instance.initUse())\n          }\n\n          instance.update()\n        }\n      })\n      this.onChange && this.onChange(patch)\n    }\n  }\n}\n\nexport function matchGlobalData(globalData, diffResult) {\n  if (!globalData) return false\n  for (let keyA in diffResult) {\n    if (globalData.indexOf(keyA) > -1) {\n      return true\n    }\n    for (let i = 0, len = globalData.length; i < len; i++) {\n      if (includePath(keyA, globalData[i])) {\n        return true\n      }\n    }\n  }\n  return false\n}\n\nexport function needUpdate(diffResult, updatePath) {\n  for (let keyA in diffResult) {\n    if (updatePath[keyA]) {\n      return true\n    }\n    for (let keyB in updatePath) {\n      if (includePath(keyA, keyB)) {\n        return true\n      }\n    }\n  }\n  return false\n}\n\nfunction includePath(pathA, pathB) {\n  if (pathA.indexOf(pathB) === 0) {\n    const next = pathA.substr(pathB.length, 1)\n    if (next === '[' || next === '.') {\n      return true\n    }\n  }\n  return false\n}\n\nexport function fixPath(path) {\n  let mpPath = ''\n  const arr = path.replace('#-', '').split('-')\n  arr.forEach((item, index) => {\n    if (index) {\n      if (isNaN(Number(item))) {\n        mpPath += '.' + item\n      } else {\n        mpPath += '[' + item + ']'\n      }\n    } else {\n      mpPath += item\n    }\n  })\n  return mpPath\n}\n\nfunction getArrayPatch(path, store) {\n  const arr = path.replace('/', '').split('/')\n  let current = store.data[arr[0]]\n  for (let i = 1, len = arr.length; i < len - 1; i++) {\n    current = current[arr[i]]\n  }\n  return { k: fixArrPath(path), v: current }\n}\n\nfunction fixArrPath(path) {\n  let mpPath = ''\n  const arr = path.replace('/', '').split('/')\n  const len = arr.length\n  arr.forEach((item, index) => {\n    if (index < len - 1) {\n      if (index) {\n        if (isNaN(Number(item))) {\n          mpPath += '.' + item\n        } else {\n          mpPath += '[' + item + ']'\n        }\n      } else {\n        mpPath += item\n      }\n    }\n  })\n  return mpPath\n}\n","export function rpx(str) {\n  return str.replace(/([1-9]\\d*|0)(\\.\\d*)*rpx/g, (a, b) => {\n    return (window.innerWidth * Number(b)) / 750 + 'px'\n  })\n}\n","import Component from './component'\n\nexport default class ModelView extends Component {\n  static observe = true\n\n  static mergeUpdate = true\n\n  beforeInstall() {\n    this.data = this.vm.data\n  }\n}\n","/**\n * classNames based on https://github.com/JedWatson/classnames\n * by Jed Watson\n * Licensed under the MIT License\n * https://github.com/JedWatson/classnames/blob/master/LICENSE\n * modified by dntzhang\n */\n\nvar hasOwn = {}.hasOwnProperty\n\nexport function classNames() {\n  var classes = []\n\n  for (var i = 0; i < arguments.length; i++) {\n    var arg = arguments[i]\n    if (!arg) continue\n\n    var argType = typeof arg\n\n    if (argType === 'string' || argType === 'number') {\n      classes.push(arg)\n    } else if (Array.isArray(arg) && arg.length) {\n      var inner = classNames.apply(null, arg)\n      if (inner) {\n        classes.push(inner)\n      }\n    } else if (argType === 'object') {\n      for (var key in arg) {\n        if (hasOwn.call(arg, key) && arg[key]) {\n          classes.push(key)\n        }\n      }\n    }\n  }\n\n  return classes.join(' ')\n}\n\nexport function extractClass() {\n  const [props, ...args] = Array.prototype.slice.call(arguments, 0)\n  if (props) {\n    if (props['class']) {\n      args.unshift(props['class'])\n      delete props['class']\n    } else if (props.className) {\n      args.unshift(props.className)\n      delete props.className\n    }\n  }\n  if (args.length > 0) {\n    return { class: classNames.apply(null, args) }\n  }\n}\n","/**\n * preact-render-to-string based on preact-render-to-string\n * by Jason Miller\n * Licensed under the MIT License\n * https://github.com/developit/preact-render-to-string\n *\n * modified by dntzhang\n */\n\nimport options from './options'\n\nimport { addScopedAttrStatic, getCtorName, scopeHost, scoper } from './style'\n\nconst encodeEntities = s =>\n  String(s)\n    .replace(/&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n\nconst indent = (s, char) => String(s).replace(/(\\n+)/g, '$1' + (char || '\\t'))\n\nconst mapping = options.mapping\n\nconst VOID_ELEMENTS = /^(area|base|br|col|embed|hr|img|input|link|meta|param|source|track|wbr)$/\n\nconst isLargeString = (s, length, ignoreLines) =>\n  String(s).length > (length || 40) ||\n  (!ignoreLines && String(s).indexOf('\\n') !== -1) ||\n  String(s).indexOf('<') !== -1\n\nconst JS_TO_CSS = {}\n\n// Convert an Object style to a CSSText string\nfunction styleObjToCss(s) {\n  let str = ''\n  for (let prop in s) {\n    let val = s[prop]\n    if (val != null) {\n      if (str) str += ' '\n      // str += jsToCss(prop);\n      str +=\n        JS_TO_CSS[prop] ||\n        (JS_TO_CSS[prop] = prop.replace(/([A-Z])/g, '-$1').toLowerCase())\n      str += ': '\n      str += val\n      if (typeof val === 'number' && IS_NON_DIMENSIONAL.test(prop) === false) {\n        str += 'px'\n      }\n      str += ';'\n    }\n  }\n  return str || undefined\n}\n\nexport function renderToString(vnode, opts, store, isSvgMode) {\n  store = store || {}\n  opts = Object.assign(\n    {\n      scopedCSS: true\n    },\n    opts\n  )\n  const css = {}\n  const html = _renderToString(vnode, opts, store, isSvgMode, css)\n  return {\n    css: Object.values(css),\n    html: html\n  }\n}\n\n/** The default export is an alias of `render()`. */\nfunction _renderToString(vnode, opts, store, isSvgMode, css) {\n  if (vnode == null || typeof vnode === 'boolean') {\n    return ''\n  }\n\n  let nodeName = vnode.nodeName,\n    attributes = vnode.attributes,\n    isComponent = false\n\n  let pretty = true && opts.pretty,\n    indentChar = pretty && typeof pretty === 'string' ? pretty : '\\t'\n\n  // #text nodes\n  if (typeof vnode !== 'object' && !nodeName) {\n    return encodeEntities(vnode)\n  }\n\n  // components\n  const ctor = mapping[nodeName]\n  if (ctor) {\n    isComponent = true\n\n    let props = getNodeProps(vnode),\n      rendered\n    // class-based components\n    let c = new ctor(props, store)\n    // turn off stateful re-rendering:\n    c._disable = c.__x = true\n    c.props = props\n    c.store = store\n    if (c.install) c.install()\n    if (c.beforeRender) c.beforeRender()\n    rendered = c.render(c.props, c.data, c.store)\n\n    if (opts.scopedCSS) {\n      if (c.constructor.css || c.css) {\n        const cssStr = c.constructor.css\n          ? c.constructor.css\n          : typeof c.css === 'function'\n            ? c.css()\n            : c.css\n        const cssAttr = '_s' + getCtorName(c.constructor)\n        css[cssAttr] = {\n          id: cssAttr,\n          css: scoper(cssStr, cssAttr)\n        }\n        addScopedAttrStatic(rendered, cssAttr)\n      }\n\n      c.scopedCSSAttr = vnode.css\n      scopeHost(rendered, c.scopedCSSAttr)\n    }\n\n    return _renderToString(rendered, opts, store, false, css)\n  }\n\n  // render JSX to HTML\n  let s = '',\n    html\n\n  if (attributes) {\n    let attrs = Object.keys(attributes)\n\n    // allow sorting lexicographically for more determinism (useful for tests, such as via preact-jsx-chai)\n    if (opts && opts.sortAttributes === true) attrs.sort()\n\n    for (let i = 0; i < attrs.length; i++) {\n      let name = attrs[i],\n        v = attributes[name]\n      if (name === 'children') continue\n\n      if (name.match(/[\\s\\n\\\\/='\"\\0<>]/)) continue\n\n      if (!(opts && opts.allAttributes) && (name === 'key' || name === 'ref'))\n        continue\n\n      if (name === 'className') {\n        if (attributes['class']) continue\n        name = 'class'\n      } else if (isSvgMode && name.match(/^xlink:?./)) {\n        name = name.toLowerCase().replace(/^xlink:?/, 'xlink:')\n      }\n\n      if (name === 'style' && v && typeof v === 'object') {\n        v = styleObjToCss(v)\n      }\n\n      let hooked =\n        opts.attributeHook &&\n        opts.attributeHook(name, v, store, opts, isComponent)\n      if (hooked || hooked === '') {\n        s += hooked\n        continue\n      }\n\n      if (name === 'dangerouslySetInnerHTML') {\n        html = v && v.__html\n      } else if ((v || v === 0 || v === '') && typeof v !== 'function') {\n        if (v === true || v === '') {\n          v = name\n          // in non-xml mode, allow boolean attributes\n          if (!opts || !opts.xml) {\n            s += ' ' + name\n            continue\n          }\n        }\n        s += ` ${name}=\"${encodeEntities(v)}\"`\n      }\n    }\n  }\n\n  // account for >1 multiline attribute\n  if (pretty) {\n    let sub = s.replace(/^\\n\\s*/, ' ')\n    if (sub !== s && !~sub.indexOf('\\n')) s = sub\n    else if (pretty && ~s.indexOf('\\n')) s += '\\n'\n  }\n\n  s = `<${nodeName}${s}>`\n  if (String(nodeName).match(/[\\s\\n\\\\/='\"\\0<>]/)) throw s\n\n  let isVoid = String(nodeName).match(VOID_ELEMENTS)\n  if (isVoid) s = s.replace(/>$/, ' />')\n\n  let pieces = []\n  if (html) {\n    // if multiline, indent.\n    if (pretty && isLargeString(html)) {\n      html = '\\n' + indentChar + indent(html, indentChar)\n    }\n    s += html\n  } else if (vnode.children) {\n    let hasLarge = pretty && ~s.indexOf('\\n')\n    for (let i = 0; i < vnode.children.length; i++) {\n      let child = vnode.children[i]\n      if (child != null && child !== false) {\n        let childSvgMode =\n            nodeName === 'svg'\n              ? true\n              : nodeName === 'foreignObject'\n                ? false\n                : isSvgMode,\n          ret = _renderToString(child, opts, store, childSvgMode, css)\n        if (pretty && !hasLarge && isLargeString(ret)) hasLarge = true\n        if (ret) pieces.push(ret)\n      }\n    }\n    if (pretty && hasLarge) {\n      for (let i = pieces.length; i--; ) {\n        pieces[i] = '\\n' + indentChar + indent(pieces[i], indentChar)\n      }\n    }\n  }\n\n  if (pieces.length) {\n    s += pieces.join('')\n  } else if (opts && opts.xml) {\n    return s.substring(0, s.length - 1) + ' />'\n  }\n\n  if (!isVoid) {\n    if (pretty && ~s.indexOf('\\n')) s += '\\n'\n    s += `</${nodeName}>`\n  }\n\n  return s\n}\n\nfunction assign(obj, props) {\n  for (let i in props) obj[i] = props[i]\n  return obj\n}\n\nfunction getNodeProps(vnode) {\n  let props = assign({}, vnode.attributes)\n  props.children = vnode.children\n\n  let defaultProps = vnode.nodeName.defaultProps\n  if (defaultProps !== undefined) {\n    for (let i in defaultProps) {\n      if (props[i] === undefined) {\n        props[i] = defaultProps[i]\n      }\n    }\n  }\n\n  return props\n}\n","const ARR = [];\n\n// This API is completely unnecessary for Preact, so it's basically passthrough.\nlet Children = {\n\tmap(children, fn, ctx) {\n\t\tif (children == null) return null;\n\t\tchildren = Children.toArray(children);\n\t\tif (ctx && ctx!==children) fn = fn.bind(ctx);\n\t\treturn children.map(fn);\n\t},\n\tforEach(children, fn, ctx) {\n\t\tif (children == null) return null;\n\t\tchildren = Children.toArray(children);\n\t\tif (ctx && ctx!==children) fn = fn.bind(ctx);\n\t\tchildren.forEach(fn);\n\t},\n\tcount(children) {\n\t\treturn children && children.length || 0;\n\t},\n\tonly(children) {\n\t\tchildren = Children.toArray(children);\n\t\tif (children.length!==1) throw new Error('Children.only() expects only one child.');\n\t\treturn children[0];\n\t},\n\ttoArray(children) {\n\t\tif (children == null) return [];\n\t\treturn ARR.concat(children);\n\t}\n};\n\nexport default Children","// @flow\nimport Component from './component';\nconst MAX_SIGNED_31_BIT_INT = 1073741823;\n\n// Inlined Object.is polyfill.\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\nfunction objectIs(x, y) {\n  if (x === y) {\n    return x !== 0 || 1 / x === 1 / (y);\n  } else {\n    return x !== x && y !== y;\n  }\n}\nlet id = 0\nfunction createEventEmitter(value) {\n  let handlers = [];\n  return {\n    on(handler) {\n      handlers.push(handler);\n    },\n\n    off(handler) {\n      handlers = handlers.filter(h => h !== handler);\n    },\n\n    get() {\n      return value;\n    },\n\n    set(newValue, changedBits) {\n      value = newValue;\n      handlers.forEach(handler => handler(value, changedBits));\n    }\n  };\n}\n\nfunction onlyChild(children) {\n  return Array.isArray(children) ? children[0] : children;\n}\n\nfunction createContext(\n  defaultValue,\n  calculateChangedBits\n){\n  const contextProp = '__create-react-context-' + id++ + '__';\n\n  class Provider extends Component {\n    emitter = createEventEmitter(this.props.value);\n\n    // static childContextTypes = {\n    //   [contextProp]: PropTypes.object.isRequired\n    // };\n\n    getChildContext() {\n      return {\n        [contextProp]: this.emitter\n      };\n    }\n\n    componentWillReceiveProps(nextProps) {\n      if (this.props.value !== nextProps.value) {\n        let oldValue = this.props.value;\n        let newValue = nextProps.value;\n        let changedBits;\n\n        if (objectIs(oldValue, newValue)) {\n          changedBits = 0; // No change\n        } else {\n          changedBits =\n            typeof calculateChangedBits === 'function'\n              ? calculateChangedBits(oldValue, newValue)\n              : MAX_SIGNED_31_BIT_INT;\n          if (process.env.NODE_ENV !== 'production') {\n            // warning(\n            //   (changedBits & MAX_SIGNED_31_BIT_INT) === changedBits,\n            //   'calculateChangedBits: Expected the return value to be a ' +\n            //     '31-bit integer. Instead received: %s',\n            //   changedBits\n            // );\n          }\n\n          changedBits |= 0;\n\n          if (changedBits !== 0) {\n            this.emitter.set(nextProps.value, changedBits);\n          }\n        }\n      }\n    }\n\n    render() {\n      return this.props.children;\n    }\n  }\n\n  class Consumer extends Component {\n    // static contextTypes = {\n    //   [contextProp]: PropTypes.object\n    // };\n\n    observedBits\n\n    state = {\n      value: this.getValue()\n    };\n\n    componentWillReceiveProps(nextProps) {\n      let { observedBits } = nextProps;\n      this.observedBits =\n        observedBits === undefined || observedBits === null\n          ? MAX_SIGNED_31_BIT_INT // Subscribe to all changes by default\n          : observedBits;\n    }\n\n    componentDidMount() {\n      if (this.context && this.context[contextProp]) {\n        this.context[contextProp].on(this.onUpdate);\n      }\n      let { observedBits } = this.props;\n      this.observedBits =\n        observedBits === undefined || observedBits === null\n          ? MAX_SIGNED_31_BIT_INT // Subscribe to all changes by default\n          : observedBits;\n    }\n\n    componentWillUnmount() {\n      if (this.context && this.context[contextProp]) {\n        this.context[contextProp].off(this.onUpdate);\n      }\n    }\n\n    getValue() {\n      if (this.context && this.context[contextProp]) {\n        return this.context[contextProp].get();\n      } else {\n        return defaultValue;\n      }\n    }\n\n    onUpdate = (newValue, changedBits) => {\n      const observedBits = this.observedBits | 0;\n      if ((observedBits & changedBits) !== 0) {\n        this.setState({ value: this.getValue() });\n      }\n    };\n\n    render() {\n      return onlyChild(this.props.children)(this.state.value);\n    }\n  }\n\n  return {\n    Provider,\n    Consumer\n  };\n}\n\nexport default createContext;","import { h, h as createElement } from './h'\nimport { cloneElement } from './clone-element'\nimport Component from './component'\nimport { render, merge } from './render'\nimport { rerender } from './render-queue'\nimport options from './options'\nimport { define } from './define'\nimport { rpx } from './rpx'\nimport { tag } from './tag'\nimport ModelView from './model-view'\nimport { classNames, extractClass } from './class'\nimport { getHost } from './get-host'\nimport { renderToString } from './render-to-string'\nimport htm from 'htm'\nimport Children from './children'\nimport { extend } from './util'\nimport createContext from './create-context'\nimport { VNode } from './vnode'\n\nconst html = htm.bind(h)\n\nconst WeElement = Component\nconst defineElement = define\nfunction createRef() {\n  return {}\n}\n\nconst REACT_ELEMENT_TYPE = (typeof Symbol !== 'undefined' && Symbol.for && Symbol.for('react.element')) || 0xeac7;\n\nfunction isValidElement(element) {\n  return element && ((element instanceof VNode) || element.$$typeof === REACT_ELEMENT_TYPE);\n}\n\nclass ContextProvider {\n\tgetChildContext() {\n\t\treturn this.props.context;\n\t}\n\trender(props) {\n\t\treturn props.children[0];\n\t}\n}\n\n\nfunction renderSubtreeIntoContainer(parentComponent, vnode, container, callback) {\n\tlet wrap = h(ContextProvider, { context: parentComponent.context }, vnode);\n\tlet renderContainer = render(wrap, container);\n\tlet component = renderContainer._component || renderContainer.base;\n\tif (callback) callback.call(component, renderContainer);\n\treturn component;\n}\n\nconst unstable_renderSubtreeIntoContainer = renderSubtreeIntoContainer\n\nfunction Portal(props) {\n\trenderSubtreeIntoContainer(this, props.vnode, props.container);\n}\n\nfunction createPortal(vnode, container) {\n\treturn h(Portal, { vnode, container });\n}\n\nfunction findDOMNode(component) {\n\treturn component && (component.base || component.nodeType === 1 && component) || null;\n}\n\nfunction unmountComponentAtNode(container) {\n\tlet existing = container._preactCompatRendered && container._preactCompatRendered.base;\n\tif (existing && existing.parentNode===container) {\n\t\trender(h(EmptyComponent), container, existing);\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n\n\nfunction shallowDiffers(a, b) {\n\tfor (let i in a) if (!(i in b)) return true;\n\tfor (let i in b) if (a[i]!==b[i]) return true;\n\treturn false;\n}\n\n\nfunction callMethod(ctx, m, args) {\n\tif (typeof m==='string') {\n\t\tm = ctx.constructor.prototype[m];\n\t}\n\tif (typeof m==='function') {\n\t\treturn m.apply(ctx, args);\n\t}\n}\n\nfunction multihook(hooks, skipDuplicates) {\n\treturn function() {\n\t\tlet ret;\n\t\tfor (let i=0; i<hooks.length; i++) {\n\t\t\tlet r = callMethod(this, hooks[i], arguments);\n\n\t\t\tif (skipDuplicates && r!=null) {\n\t\t\t\tif (!ret) ret = {};\n\t\t\t\tfor (let key in r) if (r.hasOwnProperty(key)) {\n\t\t\t\t\tret[key] = r[key];\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (typeof r!=='undefined') ret = r;\n\t\t}\n\t\treturn ret;\n\t};\n}\n\n\nfunction newComponentHook(props, context) {\n\tpropsHook.call(this, props, context);\n\tthis.componentWillReceiveProps = multihook([propsHook, this.componentWillReceiveProps || 'componentWillReceiveProps']);\n\tthis.render = multihook([propsHook, beforeRender, this.render || 'render', afterRender]);\n}\n\n\nfunction propsHook(props, context) {\n\tif (!props) return;\n\n\t// React annoyingly special-cases single children, and some react components are ridiculously strict about this.\n\tlet c = props.children;\n\tif (c && Array.isArray(c) && c.length===1 && (typeof c[0]==='string' || typeof c[0]==='function' || c[0] instanceof VNode)) {\n\t\tprops.children = c[0];\n\n\t\t// but its totally still going to be an Array.\n\t\tif (props.children && typeof props.children==='object') {\n\t\t\tprops.children.length = 1;\n\t\t\tprops.children[0] = props.children;\n\t\t}\n\t}\n\n\t// add proptype checking\n\tif (options.DEV) {\n\t\tlet ctor = typeof this==='function' ? this : this.constructor,\n\t\t\tpropTypes = this.propTypes || ctor.propTypes;\n\t\tconst displayName = this.displayName || ctor.name;\n\n\t\t// if (propTypes) {\n\t\t// \tPropTypes.checkPropTypes(propTypes, props, 'prop', displayName);\n\t\t// }\n\t}\n}\n\nlet currentComponent\n\nfunction beforeRender(props) {\n\tcurrentComponent = this;\n}\n\nfunction afterRender() {\n\tif (currentComponent===this) {\n\t\tcurrentComponent = null;\n\t}\n}\n\nconst BYPASS_HOOK = {}\n\nfunction _Component(props, context, opts) {\n\tComponent.call(this, props, context);\n\tthis.state = this.getInitialState ? this.getInitialState() : {};\n\tthis.refs = {};\n\tthis._refProxies = {};\n\tif (opts!==BYPASS_HOOK) {\n\t\tnewComponentHook.call(this, props, context);\n\t}\n}\nextend(_Component.prototype = new Component(), {\n\tconstructor: _Component,\n\n\treplaceState(state, callback) {\n\t\tthis.setState(state, callback);\n\t\tfor (let i in this.state) {\n\t\t\tif (!(i in state)) {\n\t\t\t\tdelete this.state[i];\n\t\t\t}\n\t\t}\n\t},\n\n\tgetDOMNode() {\n\t\treturn this.base;\n\t},\n\n\tisMounted() {\n\t\treturn !!this.base;\n\t}\n});\n\n\nfunction F(){}\n\nfunction PureComponent(props, context) {\n\t_Component.call(this, props, context);\n}\nF.prototype = _Component.prototype;\nPureComponent.prototype = new F();\nPureComponent.prototype.isPureReactComponent = true;\nPureComponent.prototype.shouldComponentUpdate = function(props, state) {\n\treturn shallowDiffers(this.props, props) || shallowDiffers(this.state, state);\n};\n\noptions.root.Omi = {\n  h,\n  createElement,\n  cloneElement,\n  createRef,\n  Component,\n  render,\n  rerender,\n  options,\n  WeElement,\n  define,\n  rpx,\n  ModelView,\n  defineElement,\n  classNames,\n  extractClass,\n  getHost,\n  renderToString,\n  tag,\n  merge,\n  html,\n  htm,\n  Children,\n  isValidElement,\n  createPortal,\n  findDOMNode,\n  unmountComponentAtNode,\n  unstable_renderSubtreeIntoContainer,\n  PureComponent,\n  createContext\n}\noptions.root.omi = options.root.Omi\noptions.root.Omi.version = 'reomi-1.0.0'\n\nexport default {\n  h,\n  createElement,\n  cloneElement,\n  createRef,\n  Component,\n  render,\n  rerender,\n  options,\n  WeElement,\n  define,\n  rpx,\n  ModelView,\n  defineElement,\n  classNames,\n  extractClass,\n  getHost,\n  renderToString,\n  tag,\n  merge,\n  html,\n  htm,\n  Children,\n  isValidElement,\n  createPortal,\n  findDOMNode,\n  unmountComponentAtNode,\n  unstable_renderSubtreeIntoContainer,\n  PureComponent,\n  createContext\n}\n\nexport {\n  h,\n  createElement,\n  cloneElement,\n  createRef,\n  Component,\n  render,\n  rerender,\n  options,\n  WeElement,\n  define,\n  rpx,\n  ModelView,\n  defineElement,\n  classNames,\n  extractClass,\n  getHost,\n  renderToString,\n  tag,\n  merge,\n  html,\n  htm,\n  Children,\n  isValidElement,\n  createPortal,\n  findDOMNode,\n  unmountComponentAtNode,\n  unstable_renderSubtreeIntoContainer,\n  PureComponent,\n  createContext\n}\n","export const VNode = function VNode() {};","function getGlobal() {\n  if (\n    typeof global !== 'object' ||\n    !global ||\n    global.Math !== Math ||\n    global.Array !== Array\n  ) {\n    if (typeof self !== 'undefined') {\n      return self\n    } else if (typeof window !== 'undefined') {\n      return window\n    } else if (typeof global !== 'undefined') {\n      return global\n    }\n    return (function() {\n      return this\n    })()\n  }\n  return global\n}\n\n/** Global options\n *\t@public\n *\t@namespace options {Object}\n */\nexport default {\n  scopedStyle: true,\n  mapping: {},\n  isWeb: true,\n  staticStyleMapping: {},\n  doc: typeof document === 'object' ? document : null,\n  root: getGlobal(),\n  //styleCache :[{ctor:ctor,ctorName:ctorName,style:style}]\n  styleCache: []\n  //componentChange(component, element) { },\n  /** If `true`, `prop` changes trigger synchronous component updates.\n   *\t@name syncComponentUpdates\n   *\t@type Boolean\n   *\t@default true\n   */\n  //syncComponentUpdates: true,\n\n  /** Processes all created VNodes.\n   *\t@param {VNode} vnode\tA newly-created VNode to normalize/process\n   */\n  //vnode(vnode) { }\n\n  /** Hook invoked after a component is mounted. */\n  //afterMount(component) { },\n\n  /** Hook invoked after the DOM is updated with a component's latest render. */\n  //afterUpdate(component) { }\n\n  /** Hook invoked immediately before a component is unmounted. */\n  // beforeUnmount(component) { }\n}\n","// render modes\n\nexport const NO_RENDER = 0\nexport const SYNC_RENDER = 1\nexport const FORCE_RENDER = 2\nexport const ASYNC_RENDER = 3\n\nexport const ATTR_KEY = '__omiattr_'\n\n// DOM properties that should NOT have \"px\" added when numeric\nexport const IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|ows|mnc|ntw|ine[ch]|zoo|^ord/i\n","import { define } from './define'\n\nexport function tag(name) {\n  return function(target) {\n    define(name, target)\n  }\n}\n","export function getHost(component) {\n  let base = component.base\n  if (base) {\n    while (base.parentNode) {\n      if (base.parentNode._component) {\n        return base.parentNode._component\n      } else {\n        base = base.parentNode\n      }\n    }\n  }\n}\n","var n=function(t,r,u,e){for(var p=1;p<r.length;p++){var s=r[p++],a=\"number\"==typeof s?u[s]:s;1===r[p]?e[0]=a:2===r[p]?(e[1]=e[1]||{})[r[++p]]=a:3===r[p]?e[1]=Object.assign(e[1]||{},a):e.push(r[p]?t.apply(null,n(t,a,u,[\"\",null])):a)}return e},t=function(n){for(var t,r,u=1,e=\"\",p=\"\",s=[0],a=function(n){1===u&&(n||(e=e.replace(/^\\s*\\n\\s*|\\s*\\n\\s*$/g,\"\")))?s.push(n||e,0):3===u&&(n||e)?(s.push(n||e,1),u=2):2===u&&\"...\"===e&&n?s.push(n,3):2===u&&e&&!n?s.push(!0,2,e):4===u&&r&&(s.push(n||e,2,r),r=\"\"),e=\"\"},f=0;f<n.length;f++){f&&(1===u&&a(),a(f));for(var h=0;h<n[f].length;h++)t=n[f][h],1===u?\"<\"===t?(a(),s=[s],u=3):e+=t:p?t===p?p=\"\":e+=t:'\"'===t||\"'\"===t?p=t:\">\"===t?(a(),u=1):u&&(\"=\"===t?(u=4,r=e,e=\"\"):\"/\"===t?(a(),3===u&&(s=s[0]),u=s,(s=s[0]).push(u,4),u=0):\" \"===t||\"\\t\"===t||\"\\n\"===t||\"\\r\"===t?(a(),u=2):e+=t)}return a(),s},r=\"function\"==typeof Map,u=r?new Map:{},e=r?function(n){var r=u.get(n);return r||u.set(n,r=t(n)),r}:function(n){for(var r=\"\",e=0;e<n.length;e++)r+=n[e].length+\"-\"+n[e];return u[r]||(u[r]=t(n))};export default function(t){var r=n(this,e(t),arguments,[]);return r.length>1?r:r[0]}\n"]}