{"version":3,"sources":["../src/obaa.js","../src/path.js","../src/vue.js","../src/omiv.js"],"names":["obaa","target","arr","callback","eventPropArr","isArray","length","__o_","__r_","__p_","mock","prop","hasOwnProperty","isInArray","push","watch","isString","__c_","propChanged","all","root","methods","forEach","item","old","Array","prototype","slice","call","this","result","apply","arguments","RegExp","test","triggerStr","cprop","isFunction","onPropertyChanged","substring","toUpperCase","path","undefined","currentValue","value","oldValue","nan","rootName","getRootName","i","len","handler","indexOf","obj","Object","toString","isNaN","split","getPath","out","name","tempPath","keys","needUpdate","diffResult","updatePath","keyA","keyB","includePath","pathA","pathB","next","substr","fixPath","mpPath","replace","index","Number","$","options","beforeCreate","destroyed","use","useSelf","computed","$store","store","isMultiStore","storeName","components","__$updatePath_","updateSelfPath","updateSelfComponents","__$updateSelfPath_","key","removeItem","state","k","data","recUpdate","$forceUpdate","$children","child","observe","val","patch","component","p","sp","splice","render","app","renderTo","reset","Vue","assign","h","$mount","s","join","add","set","size","module","exports","Omiv","self"],"mappings":"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","file":"omiv.js","sourcesContent":["export function obaa(target, arr, callback) {\n  let eventPropArr = []\n  if (isArray(target)) {\n    if (target.length === 0) {\n      target.__o_ = {\n        __r_: target,\n        __p_: '#'\n      }\n    }\n    mock(target, target)\n  }\n  for (let prop in target) {\n    if (target.hasOwnProperty(prop)) {\n      if (callback) {\n        if (isArray(arr) && isInArray(arr, prop)) {\n          eventPropArr.push(prop)\n          watch(target, prop, null, target)\n        } else if (isString(arr) && prop === arr) {\n          eventPropArr.push(prop)\n          watch(target, prop, null, target)\n        }\n      } else {\n        eventPropArr.push(prop)\n        watch(target, prop, null, target)\n      }\n    }\n  }\n  if (!target.__c_) {\n    target.__c_ = []\n  }\n  let propChanged = callback ? callback : arr\n  target.__c_.push({\n    all: !callback,\n    propChanged,\n    eventPropArr\n  })\n}\n\nlet triggerStr = [\n  'concat',\n  'copyWithin',\n  'fill',\n  'pop',\n  'push',\n  'reverse',\n  'shift',\n  'sort',\n  'splice',\n  'unshift',\n  'size'\n].join(',')\n\nlet methods = [\n  'concat',\n  'copyWithin',\n  'entries',\n  'every',\n  'fill',\n  'filter',\n  'find',\n  'findIndex',\n  'forEach',\n  'includes',\n  'indexOf',\n  'join',\n  'keys',\n  'lastIndexOf',\n  'map',\n  'pop',\n  'push',\n  'reduce',\n  'reduceRight',\n  'reverse',\n  'shift',\n  'slice',\n  'some',\n  'sort',\n  'splice',\n  'toLocaleString',\n  'toString',\n  'unshift',\n  'values',\n  'size'\n]\n\nfunction mock(target, root) {\n  methods.forEach(item => {\n    target[item] = function() {\n      let old = Array.prototype.slice.call(this, 0)\n      let result = Array.prototype[item].apply(\n        this,\n        Array.prototype.slice.call(arguments)\n      )\n      if (new RegExp('\\\\b' + item + '\\\\b').test(triggerStr)) {\n        for (let cprop in this) {\n          if (this.hasOwnProperty(cprop) && !isFunction(this[cprop])) {\n            watch(this, cprop, this.__o_.__p_, root)\n          }\n        }\n        //todo\n        onPropertyChanged(\n          'Array-' + item,\n          this,\n          old,\n          this,\n          this.__o_.__p_,\n          root\n        )\n      }\n      return result\n    }\n    target[\n      'pure' + item.substring(0, 1).toUpperCase() + item.substring(1)\n    ] = function() {\n      return Array.prototype[item].apply(\n        this,\n        Array.prototype.slice.call(arguments)\n      )\n    }\n  })\n}\n\nfunction watch(target, prop, path, root) {\n  if (prop === '__o_') return\n  if (isFunction(target[prop])) return\n  if (!target.__o_)\n    target.__o_ = {\n      __r_: root\n    }\n  if (path !== undefined && path !== null) {\n    target.__o_.__p_ = path\n  } else {\n    target.__o_.__p_ = '#'\n  }\n\n  let currentValue = (target.__o_[prop] = target[prop])\n  Object.defineProperty(target, prop, {\n    get() {\n      return this.__o_[prop]\n    },\n    set(value) {\n      let old = this.__o_[prop]\n      this.__o_[prop] = value\n      onPropertyChanged(prop, value, old, this, target.__o_.__p_, root)\n    },\n    configurable: true,\n    enumerable: true\n  })\n  if (typeof currentValue === 'object') {\n    if (isArray(currentValue)) {\n      mock(currentValue, root)\n      if (currentValue.length === 0) {\n        if (!currentValue.__o_) currentValue.__o_ = {}\n        if (path !== undefined && path !== null) {\n          currentValue.__o_.__p_ = path + '-' + prop\n        } else {\n          currentValue.__o_.__p_ = '#-' + prop\n        }\n      }\n    }\n    for (let cprop in currentValue) {\n      if (currentValue.hasOwnProperty(cprop)) {\n        watch(currentValue, cprop, target.__o_.__p_ + '-' + prop, root)\n      }\n    }\n  }\n}\n\nfunction onPropertyChanged(prop, value, oldValue, target, path, root) {\n  if (value !== oldValue && !(nan(value) && nan(oldValue)) && root.__c_) {\n    let rootName = getRootName(prop, path)\n    for (let i = 0, len = root.__c_.length; i < len; i++) {\n      let handler = root.__c_[i]\n      if (\n        handler.all ||\n        isInArray(handler.eventPropArr, rootName) ||\n        rootName.indexOf('Array-') === 0\n      ) {\n        handler.propChanged.call(target, prop, value, oldValue, path)\n      }\n    }\n  }\n\n  if (prop.indexOf('Array-') !== 0 && typeof value === 'object') {\n    watch(target, prop, target.__o_.__p_, root)\n  }\n}\n\nfunction isFunction(obj) {\n  return Object.prototype.toString.call(obj) === '[object Function]'\n}\n\nfunction nan(value) {\n  return typeof value === 'number' && isNaN(value)\n}\n\nfunction isArray(obj) {\n  return Object.prototype.toString.call(obj) === '[object Array]'\n}\n\nfunction isString(obj) {\n  return typeof obj === 'string'\n}\n\nfunction isInArray(arr, item) {\n  for (let i = arr.length; --i > -1; ) {\n    if (item === arr[i]) return true\n  }\n  return false\n}\n\nfunction getRootName(prop, path) {\n  if (path === '#') {\n    return prop\n  }\n  return path.split('-')[1]\n}\n\nobaa.add = function(obj, prop) {\n  watch(obj, prop, obj.__o_.__p_, obj.__o_.__r_)\n}\n\nobaa.set = function(obj, prop, value) {\n  watch(obj, prop, obj.__o_.__p_, obj.__o_.__r_)\n  obj[prop] = value\n}\n\n//@ts-ignore\n/* eslint-disable */\nArray.prototype.size = function (length) {\n  this.length = length\n}","export function getUsing(data, paths) {\n  const obj = []\n  paths.forEach((path, index) => {\n    const isPath = typeof path === 'string'\n    if (isPath) {\n      obj[index] = getTargetByPath(data, path)\n    } else {\n      const key = Object.keys(path)[0]\n      const value = path[key]\n      if (typeof value === 'string') {\n        obj[index] = getTargetByPath(data, value)\n      } else {\n        const tempPath = value[0]\n        if (typeof tempPath === 'string') {\n          const tempVal = getTargetByPath(data, tempPath)\n          obj[index] = value[1] ? value[1](tempVal) : tempVal\n        } else {\n          const args = []\n          tempPath.forEach(path => {\n            args.push(getTargetByPath(data, path))\n          })\n          obj[index] = value[1].apply(null, args)\n        }\n      }\n      obj[key] = obj[index]\n    }\n  })\n  return obj\n}\n\nexport function getTargetByPath(origin, path) {\n  const arr = path\n    .replace(/]/g, '')\n    .replace(/\\[/g, '.')\n    .split('.')\n  let current = origin\n  for (let i = 0, len = arr.length; i < len; i++) {\n    current = current[arr[i]]\n  }\n  return current\n}\n\nexport function getPath(obj, out, name) {\n  const result = {}\n  obj.forEach(item => {\n    if (typeof item === 'string') {\n      result[item] = true\n    } else {\n      const tempPath = item[Object.keys(item)[0]]\n      if (typeof tempPath === 'string') {\n        result[tempPath] = true\n      } else if (typeof tempPath[0] === 'string') {\n        result[tempPath[0]] = true\n      } else {\n        tempPath[0].forEach(path => (result[path] = true))\n      }\n    }\n  })\n  out && (out[name] = result)\n  return result\n}\n\n\nexport function needUpdate(diffResult, updatePath) {\n  for (let keyA in diffResult) {\n    if (updatePath[keyA]) {\n      return true\n    }\n    for (let keyB in updatePath) {\n      if (includePath(keyA, keyB)) {\n        return true\n      }\n    }\n  }\n  return false\n}\n\nfunction includePath(pathA, pathB) {\n  if (pathA.indexOf(pathB) === 0) {\n    const next = pathA.substr(pathB.length, 1)\n    if (next === '[' || next === '.') {\n      return true\n    }\n  }\n  return false\n}\n\nexport function fixPath(path) {\n  let mpPath = ''\n  const arr = path.replace('#-', '').split('-')\n  arr.forEach((item, index) => {\n    if (index) {\n      if (isNaN(Number(item))) {\n        mpPath += '.' + item\n      } else {\n        mpPath += '[' + item + ']'\n      }\n    } else {\n      mpPath += item\n    }\n  })\n  return mpPath\n}\n","import { obaa } from './obaa'\nimport { getPath, needUpdate, fixPath } from './path'\nimport Vue from 'vue'\n\nlet store\nlet isMultiStore = false\n\nexport function $(options) {\n  const beforeCreate = options.beforeCreate\n  const destroyed = options.destroyed\n  const use = options.use\n  const useSelf = options.useSelf\n  options.computed = options.computed || {}\n\n  options.beforeCreate = function () {\n    this.$store = store\n    if (isMultiStore) {\n      if (use) {\n        let updatePath = {}\n        for (let storeName in use) {\n          getPath(use[storeName], updatePath, storeName)\n          store[storeName].components.push(this)\n        }\n        this.__$updatePath_ = updatePath\n\n\n      }\n\n      if (useSelf) {\n        let updateSelfPath = {}\n        for (let storeName in useSelf) {\n          getPath(useSelf[storeName], updateSelfPath, storeName)\n          store[storeName].updateSelfComponents.push(this)\n        }\n        this.__$updateSelfPath_ = updateSelfPath\n      }\n    } else {\n      if (use) {\n        this.__$updatePath_ = getPath(use)\n        store.components.push(this)\n      }\n      if (useSelf) {\n        this.__$updateSelfPath_ = getPath(useSelf)\n        store.updateSelfComponents.push(this)\n      }\n    }\n    beforeCreate && beforeCreate.apply(this, arguments)\n  }\n\n  options.destroyed = function () {\n    if (isMultiStore) {\n      for (let key in store) {\n        removeItem(this, store[key].components)\n        removeItem(this, store[key].updateSelfComponents)\n      }\n    } else {\n      removeItem(this, store.updateSelfComponents)\n      removeItem(this, store.components)\n    }\n\n    destroyed && destroyed.apply(this, arguments)\n  }\n\n  options.computed.state = function () {\n    if (isMultiStore) {\n      let state = {}\n      Object.keys(store).forEach(k => {\n        state[k] = store[k].data\n      })\n      return state\n    }\n    return store.data\n  }\n\n  options.computed.store = function () {\n    return store\n  }\n\n  return options\n}\n\nfunction recUpdate(root) {\n  root.$forceUpdate()\n  root.$children.forEach(child => {\n    recUpdate(child)\n  })\n}\n\nfunction observe(store, storeName) {\n  store.components = []\n  store.updateSelfComponents = []\n\n  obaa(store.data, (prop, val, old, path) => {\n    const patch = {}\n\n    patch[fixPath(path + '-' + prop)] = true\n    store.components.forEach(component => {\n      const p = component.__$updatePath_\n      if (storeName) {\n        if (p && p[storeName] && needUpdate(patch, p[storeName])) {\n          recUpdate(component)\n        }\n      } else if (p && needUpdate(patch, p)) {\n        recUpdate(component)\n      }\n    })\n\n    store.updateSelfComponents.forEach(component => {\n      const sp = component.__$updateSelfPath_\n      if (storeName) {\n        if (sp && sp[storeName] && needUpdate(patch, sp[storeName])) {\n          component.$forceUpdate()\n        }\n      } else if (sp && needUpdate(patch, sp)) {\n        component.$forceUpdate()\n      }\n    })\n  })\n}\n\nfunction removeItem(item, arr) {\n  for (let i = 0, len = arr.length; i < len; i++) {\n    if (arr[i] === item) {\n      arr.splice(i, 1)\n      break\n    }\n  }\n}\n\nexport function render(app, renderTo, store, options) {\n  reset(store)\n  new Vue(Object.assign({\n    render: h => h(app),\n  }, options)).$mount(renderTo)\n\n}\n\nexport function reset(s) {\n  if (s) {\n    store = s\n    if (store.data) {\n      isMultiStore = false\n      observe(store)\n    } else {\n      isMultiStore = true\n      for (let key in store) {\n        if (store[key].data) {\n          observe(store[key], key)\n        }\n      }\n    }\n  }\n}\n","import { $, render, reset } from './vue'\n\nexport default { $, render, reset }\n\nexport { $, render, reset }\n"]}