{"version":3,"sources":["../static/js/3.63913641.chunk.js","docs/zh-cn/kbone.md"],"names":["webpackJsonp","55","module","exports"],"mappings":"AAAAA,cAAc,IAERC,GACA,SAAUC,EAAQC,GCHxBD,EAAAC,QAAA","file":"static/js/3.63913641.chunk.js","sourcesContent":["webpackJsonp([3],{\n\n/***/ 55:\n/***/ (function(module, exports) {\n\nmodule.exports = \"# omi-kbone\\n\\n使用 [omis](https://github.com/Tencent/omi/tree/master/packages/omis) 多端开发(小程序和Web)，基于 [kbone](https://github.com/wechat-miniprogram/kbone) 的 element 和 render。\\n\\n## 一套语法多端运行\\n\\n```jsx\\nimport { h } from 'omis'\\nimport './index.css'\\n\\nconst Counter = (props, store) => {\\n  return (\\n    <div>\\n      <button onClick={store.sub}>-</button>\\n      <span>{store.count}</span>\\n      <button onClick={store.add}>+</button>\\n\\n      <div onClick={store.clickHandle}>跳转</div>\\n    </div>\\n  )\\n}\\n\\nCounter.store = _ => {\\n  return {\\n    count: 1,\\n    add() {\\n      this.count++\\n      _.update()\\n    },\\n    sub() {\\n      this.count--\\n      _.update()\\n    },\\n    clickHandle() {\\n      if (\\\"undefined\\\" != typeof wx && wx.getSystemInfoSync) {\\n        wx.navigateTo({\\n          url: '../log/index?id=1'\\n        })\\n      } else {\\n        location.href = 'log.html'\\n      }\\n    }\\n  }\\n}\\n\\nexport default Counter\\n```\\n\\n注意这里 css 在小程序和web里都是全局作用，小程序没法做到 scoped style，在 web 里是可以做到 scoped，只需要这样：\\n\\n```js\\nCounter.css = require('./_index.css')\\n```\\n\\n使用下划线前缀并且赋值便可。\\n\\n## 快速开始\\n\\n```js\\nnpm i omi-cli -g\\nomi init-kbone my-app\\ncd my-app\\nnpm start        //开发小程序\\nnpm run web      //开发 web\\nnpm run build    //发布 web\\n```\\n\\n> 也支持一条命令 `npx omi-cli init-kbone my-app` (npm v5.2.0+)\\n\\n## 目录说明\\n\\n```\\n├─ build\\n│  ├─ mp     //微信开发者工具指向的目录，用于生产环境\\n│  ├─ web    //web 编译出的文件，用于生产环境\\n├─ config\\n├─ public\\n├─ scripts\\n├─ src\\n│  ├─ assets\\n│  ├─ components    //存放所有组件\\n│  ├─ log.js        //入口文件，会 build 成  log.html\\n│  └─ index.js      //入口文件，会 build 成  index.html\\n```\\n\\n## 谁在使用 kbone？\\n\\n<table>\\n\\t<tbody>\\n\\t\\t<tr>\\n\\t\\t\\t<td><a target=\\\"_blank\\\" href=\\\"https://developers.weixin.qq.com/community/develop/mixflow\\\"><img width=\\\"200px\\\"\\n\\t\\t\\t\\t\\t\\tsrc=\\\"https://raw.githubusercontent.com/wechat-miniprogram/kbone/develop/docs/images/code1.jpg\\\"></a></td>\\n\\t\\t\\t<td><a target=\\\"_blank\\\" href=\\\"https://tencent.github.io/omi/\\\"><img width=\\\"200px\\\"\\n\\t\\t\\t\\t\\t\\tsrc=\\\"https://github.com/Tencent/omi/raw/master/assets/omi-cloud.jpg\\\"></a></td>\\n\\t\\t\\t<td width=\\\"92px\\\"><a target=\\\"_blank\\\" href=\\\"https://github.com/Tencent/omi/issues/new\\\">告诉我们</a></td>\\n\\t\\t\\n</table>\\n\\n## 注意事项\\n\\n* 不要使用 bindtap，使用 onClick\\n* 图片请使用 cdn 地址或者 base64\\n* 如果要兼容 web，请用 HTML 和 CSS 标签，比如用 div，不用 view，不用 rpx 单位等\\n\\n## License\\n\\nMIT \\n\"\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/3.63913641.chunk.js","module.exports = \"# omi-kbone\\n\\n使用 [omis](https://github.com/Tencent/omi/tree/master/packages/omis) 多端开发(小程序和Web)，基于 [kbone](https://github.com/wechat-miniprogram/kbone) 的 element 和 render。\\n\\n## 一套语法多端运行\\n\\n```jsx\\nimport { h } from 'omis'\\nimport './index.css'\\n\\nconst Counter = (props, store) => {\\n  return (\\n    <div>\\n      <button onClick={store.sub}>-</button>\\n      <span>{store.count}</span>\\n      <button onClick={store.add}>+</button>\\n\\n      <div onClick={store.clickHandle}>跳转</div>\\n    </div>\\n  )\\n}\\n\\nCounter.store = _ => {\\n  return {\\n    count: 1,\\n    add() {\\n      this.count++\\n      _.update()\\n    },\\n    sub() {\\n      this.count--\\n      _.update()\\n    },\\n    clickHandle() {\\n      if (\\\"undefined\\\" != typeof wx && wx.getSystemInfoSync) {\\n        wx.navigateTo({\\n          url: '../log/index?id=1'\\n        })\\n      } else {\\n        location.href = 'log.html'\\n      }\\n    }\\n  }\\n}\\n\\nexport default Counter\\n```\\n\\n注意这里 css 在小程序和web里都是全局作用，小程序没法做到 scoped style，在 web 里是可以做到 scoped，只需要这样：\\n\\n```js\\nCounter.css = require('./_index.css')\\n```\\n\\n使用下划线前缀并且赋值便可。\\n\\n## 快速开始\\n\\n```js\\nnpm i omi-cli -g\\nomi init-kbone my-app\\ncd my-app\\nnpm start        //开发小程序\\nnpm run web      //开发 web\\nnpm run build    //发布 web\\n```\\n\\n> 也支持一条命令 `npx omi-cli init-kbone my-app` (npm v5.2.0+)\\n\\n## 目录说明\\n\\n```\\n├─ build\\n│  ├─ mp     //微信开发者工具指向的目录，用于生产环境\\n│  ├─ web    //web 编译出的文件，用于生产环境\\n├─ config\\n├─ public\\n├─ scripts\\n├─ src\\n│  ├─ assets\\n│  ├─ components    //存放所有组件\\n│  ├─ log.js        //入口文件，会 build 成  log.html\\n│  └─ index.js      //入口文件，会 build 成  index.html\\n```\\n\\n## 谁在使用 kbone？\\n\\n<table>\\n\\t<tbody>\\n\\t\\t<tr>\\n\\t\\t\\t<td><a target=\\\"_blank\\\" href=\\\"https://developers.weixin.qq.com/community/develop/mixflow\\\"><img width=\\\"200px\\\"\\n\\t\\t\\t\\t\\t\\tsrc=\\\"https://raw.githubusercontent.com/wechat-miniprogram/kbone/develop/docs/images/code1.jpg\\\"></a></td>\\n\\t\\t\\t<td><a target=\\\"_blank\\\" href=\\\"https://tencent.github.io/omi/\\\"><img width=\\\"200px\\\"\\n\\t\\t\\t\\t\\t\\tsrc=\\\"https://github.com/Tencent/omi/raw/master/assets/omi-cloud.jpg\\\"></a></td>\\n\\t\\t\\t<td width=\\\"92px\\\"><a target=\\\"_blank\\\" href=\\\"https://github.com/Tencent/omi/issues/new\\\">告诉我们</a></td>\\n\\t\\t\\n</table>\\n\\n## 注意事项\\n\\n* 不要使用 bindtap，使用 onClick\\n* 图片请使用 cdn 地址或者 base64\\n* 如果要兼容 web，请用 HTML 和 CSS 标签，比如用 div，不用 view，不用 rpx 单位等\\n\\n## License\\n\\nMIT \\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/docs/zh-cn/kbone.md\n// module id = 55\n// module chunks = 3"],"sourceRoot":""}